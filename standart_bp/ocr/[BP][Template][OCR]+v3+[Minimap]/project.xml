<?xml version="1.0" encoding="US-ASCII" standalone="yes"?>
<objectListWrapper>
    <objects>
        <objectContainer>
            <project>
                <name>[BP][Template][OCR] v3 [Minimap]</name>
                <description>This BP is Template v.3 with Minimap</description>
                <author>tancor</author>
                <runs>
                    <run>
                        <blockSize>1</blockSize>
                        <campaign>
                            <active>true</active>
                            <businessRules/>
                            <campaignMaps>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>b30bef61-4832-4f25-fc8a-6b7dca4a0838</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>eac02a2c-5ab8-4005-b17d-323703dca527</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>The Place for Settings</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>eac02a2c-5ab8-4005-b17d-323703dca527</uuid>
                                            <version>
                                                <componentUuid>58881a42-aee8-47ce-8f34-d8b903d3548c</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T08:59:51Z</lastModified>
                                                <versionUuid>a5b4112b-2edc-4ac5-b71f-a40df403f4f9</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>The Place for Settings</title>
                                        <type>SINGLE</type>
                                        <uuid>788b0beb-e499-4a39-97bf-f61f77c82e7a</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>a325e738-9b2e-45cf-a049-4b7f2aed36f1</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T08:59:51Z</lastModified>
                                            <versionUuid>26ab5c00-370c-4e8e-a450-5428508c444b</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>1</stepIndex>
                                    <stepPosition>START</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>372fd5dc-cd5e-4939-a0dc-5dc4813aa351</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Type</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>798394d8-e2ce-4759-933f-a57e23279df9</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>c7ddb8a6-9e25-4d3f-8af2-c9a202f190dd</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>The Place for OCR UseCase</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>c7ddb8a6-9e25-4d3f-8af2-c9a202f190dd</uuid>
                                            <version>
                                                <componentUuid>f28baa52-6386-4366-ac99-a39cbde401ee</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T09:00:34Z</lastModified>
                                                <versionUuid>8d8a6465-4121-4b22-99e2-de68faa2c6e8</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>The Place for OCR UseCase</title>
                                        <type>SINGLE</type>
                                        <uuid>801dccc6-3ddc-4462-971d-ea41484f682b</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>18bdba92-a117-4c48-89b6-5f229f0bf572</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T09:00:34Z</lastModified>
                                            <versionUuid>b9c575fb-90fa-4e99-83ec-1b7242f05343</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>2</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>f3c8a64e-9841-4d44-fc32-ab41e4e65287</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>3bddf56e-852f-49d9-b694-9c1d79f816fe</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <description>Miscellaneous Tasks</description>
                                        <executingType>HUMAN</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <question>
                                            <answers>
                                                <answer>
                                                    <allowNA>false</allowNA>
                                                    <answer>TOOD</answer>
                                                    <answerCode>ocr_document_url</answerCode>
                                                    <answerHtml></answerHtml>
                                                    <answerTypeObject>
                                                        <answerTypeGroup>ADVANCED</answerTypeGroup>
                                                        <code>INFO_EXTRACTION</code>
                                                        <description></description>
                                                        <optionsAvailable>true</optionsAvailable>
                                                        <showDefaultValue>true</showDefaultValue>
                                                        <showForFieldScheme>false</showForFieldScheme>
                                                        <showForHumanTask>true</showForHumanTask>
                                                        <showForMachineConfig>false</showForMachineConfig>
                                                        <title>Information Extraction</title>
                                                        <valueType>SINGLEVALUE</valueType>
                                                    </answerTypeObject>
                                                    <appendDataStoreOptions>false</appendDataStoreOptions>
                                                    <autocompleteField>false</autocompleteField>
                                                    <category></category>
                                                    <constantable>false</constantable>
                                                    <defaultValue></defaultValue>
                                                    <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                    <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                    <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                    <htmlClasses></htmlClasses>
                                                    <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                    <letCustomValues>false</letCustomValues>
                                                    <manualField>false</manualField>
                                                    <multiValue>false</multiValue>
                                                    <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                                    <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                                    <percentRequired>false</percentRequired>
                                                    <range>false</range>
                                                    <required>false</required>
                                                    <sequenceNumber>1</sequenceNumber>
                                                    <useBlocks>false</useBlocks>
                                                    <useEmptyCell>false</useEmptyCell>
                                                </answer>
                                                <answer>
                                                    <allowNA>false</allowNA>
                                                    <answer>Text</answer>
                                                    <answerCode>answ_test_text</answerCode>
                                                    <answerHtml></answerHtml>
                                                    <answerTypeObject>
                                                        <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                        <code>FREE_TEXT</code>
                                                        <description></description>
                                                        <optionsAvailable>false</optionsAvailable>
                                                        <showDefaultValue>true</showDefaultValue>
                                                        <showForFieldScheme>true</showForFieldScheme>
                                                        <showForHumanTask>true</showForHumanTask>
                                                        <showForMachineConfig>true</showForMachineConfig>
                                                        <title>Free Text</title>
                                                        <valueType>SINGLEVALUE</valueType>
                                                    </answerTypeObject>
                                                    <appendDataStoreOptions>false</appendDataStoreOptions>
                                                    <autocompleteField>false</autocompleteField>
                                                    <constantable>false</constantable>
                                                    <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                    <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                    <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                    <hotKey>T</hotKey>
                                                    <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                    <letCustomValues>false</letCustomValues>
                                                    <manualField>false</manualField>
                                                    <multiValue>false</multiValue>
                                                    <parentAnswer>
                                                        <allowNA>false</allowNA>
                                                        <answer>TOOD</answer>
                                                        <answerCode>ocr_document_url</answerCode>
                                                        <answerHtml></answerHtml>
                                                        <answerTypeObject>
                                                            <answerTypeGroup>ADVANCED</answerTypeGroup>
                                                            <code>INFO_EXTRACTION</code>
                                                            <description></description>
                                                            <optionsAvailable>true</optionsAvailable>
                                                            <showDefaultValue>true</showDefaultValue>
                                                            <showForFieldScheme>false</showForFieldScheme>
                                                            <showForHumanTask>true</showForHumanTask>
                                                            <showForMachineConfig>false</showForMachineConfig>
                                                            <title>Information Extraction</title>
                                                            <valueType>SINGLEVALUE</valueType>
                                                        </answerTypeObject>
                                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                                        <autocompleteField>false</autocompleteField>
                                                        <category></category>
                                                        <constantable>false</constantable>
                                                        <defaultValue></defaultValue>
                                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                        <htmlClasses></htmlClasses>
                                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                        <letCustomValues>false</letCustomValues>
                                                        <manualField>false</manualField>
                                                        <multiValue>false</multiValue>
                                                        <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                                        <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                                        <percentRequired>false</percentRequired>
                                                        <range>false</range>
                                                        <required>false</required>
                                                        <sequenceNumber>1</sequenceNumber>
                                                        <useBlocks>false</useBlocks>
                                                        <useEmptyCell>false</useEmptyCell>
                                                    </parentAnswer>
                                                    <percentRequired>false</percentRequired>
                                                    <range>false</range>
                                                    <required>true</required>
                                                    <sequenceNumber>2</sequenceNumber>
                                                    <useBlocks>false</useBlocks>
                                                    <useEmptyCell>false</useEmptyCell>
                                                </answer>
                                            </answers>
                                            <assignmentDuration>1800000</assignmentDuration>
                                            <assignmentLimit>1</assignmentLimit>
                                            <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                                            <autoApprovalDelay>432000000</autoApprovalDelay>
                                            <automaticallyProcessed>0</automaticallyProcessed>
                                            <blockSize>1</blockSize>
                                            <constQualifiedWorkers>false</constQualifiedWorkers>
                                            <currency>USD</currency>
                                            <description>Miscellaneous Tasks</description>
                                            <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                                            <expiredTime>2592000000</expiredTime>
                                            <faqItems/>
                                            <frameHeight>2500</frameHeight>
                                            <geolocationEnabled>false</geolocationEnabled>
                                            <instructionItems/>
                                            <keywords>Miscellaneous Tasks</keywords>
                                            <maxAssignments>1</maxAssignments>
                                            <moderation>false</moderation>
                                            <moderationFlag>false</moderationFlag>
                                            <origination>CREATED_MANUALLY</origination>
                                            <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                                            <qualificationInstruction></qualificationInstruction>
                                            <qualificationRequirements/>
                                            <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                                            <qualificationTasks>20</qualificationTasks>
                                            <qualificationTraining>false</qualificationTraining>
                                            <questionRuleMaps>
                                                <questionRuleMap>
                                                    <businessRule>
                                                        <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                        <name>Start with one assignment 1+0 pay all</name>
                                                        <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                                        <ruleType>DROOLS</ruleType>
                                                        <ruleTypeUI>Adjudication</ruleTypeUI>
                                                        <template>
                                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                            <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                            <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                            <params>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>80</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                                    <name>Normal accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>CHECK_EVERY</code>
                                                                    <defaultValue>5</defaultValue>
                                                                    <description>Check every i-th gold question when evaluating qualification score</description>
                                                                    <name>Check every i-th gold question</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_HIT_THRESHOLD</code>
                                                                    <defaultValue>100</defaultValue>
                                                                    <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                                    <name>Percent of correct answers</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>70</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                                    <name>Worst accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_VALUE</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Number of correct answers</description>
                                                                    <name>Majority value</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAX_ASSIGNMENT_LIMIT</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Maximum number of assignments</description>
                                                                    <name>Max assignments limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Normal accuracy level upper limit in percents exclusive</description>
                                                                    <name>Normal accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                                    <name>Super accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>95</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                                    <name>Super accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                                    <name>Worst accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Normal accuracy level lower limit in percents inclusive</description>
                                                                    <name>Normal accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                            </params>
                                                        </template>
                                                        <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                                    </businessRule>
                                                </questionRuleMap>
                                            </questionRuleMaps>
                                            <radiusSelector>ExactLocation</radiusSelector>
                                            <randomizeAnswers>false</randomizeAnswers>
                                            <recursiveThreshold>1</recursiveThreshold>
                                            <restrictedCountries/>
                                            <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                                            <templates>
                                                <template>
                                                    <code></code>
                                                    <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;
&lt;!-- v 1.9 --&gt;
&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;

&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
 
  
&lt;style type="text/css"&gt;
    document {
        background: none !important;
        overflow: visible!important;
        padding: 0 !important;
        position: absolute !important;
        left: 0;
        top: 0;
        width: 100%;
    }
    page {
        box-shadow: none !important;
        background: none !important;
        padding: 0 !important;
        margin: 0 !important;
        overflow: visible!important;
        height: 0 !important;
    }
    cell, document td {
        border: 0 !important;
    }
    block[blocktype="Picture"] {
        opacity: 1 !important;
        background: none !important;
    }
    .hidden_field {display:none; }
    .hidden {display:inline-block !important;}
    .extraction-content {padding: 0 !important;}
  	.ie-view-source {
  		display: none;
  	}
  	.ie-view-source + .ie-zoom-in-zoom-out-separator {
  		display: none !important;
  	}
  	.popup-original-document.ml10 {
  		margin-left: 0 !important;
  	}
    .opacity-control {
        float: left;
        line-height: 40px;
        margin-left: 3px;
    }
    .opacity-control span {
        display: inline-block;
    }
    #rangeInput {
        width: 100px;
        box-shadow: none;
        margin: -1px 0 0 10px;
        border: 0;
    }
    #rangeInput::-moz-focus-outer {
        border: 0;
    }
.dom-minimap-scroll {
  background-color: rgba(255,255,255,0.15);
}
.dom-minimap-section {
    background-color: rgba(255,255,255,0.15);
    color: white;
    font-size: 11px;
    padding-left: 2px;
    border-radius: 2px;
    left: 5px; right: 5px;
}
.dom-minimap-section:hover {
  background-color: #e6e6e6;
}  
&lt;/style&gt;
  

  
&lt;script type="text/javascript"&gt;
    $(document).ready(function() {
        
        if (document.getElementsByClassName('submit-btn').length) {
            var originalSubmitEvent = document.getElementsByClassName('submit-btn')[0].onclick;
            document.getElementsByClassName('submit-btn')[0].onclick = function(){
                preprocessAppendOrder();
                originalSubmitEvent();
            }
        }
       
        var originalOnTextContainerLoad = ExtractionAnswerController.prototype.onTextContainerLoad;
        ExtractionAnswerController.prototype.onTextContainerLoad = function() {
            try {
            	originalOnTextContainerLoad.apply(this, arguments);
            	var $textContainer = ExtractionAnswer.getExtractionController().$textContainer;
            	if ($textContainer.find('document')) {
                	initHandlers();
                	initOpacity();
                	window.setTimeout(setMinimapSizes,100);
                	initButtons();
      			}
            } catch (e){
              console.log("onTextContainerLoad "+e);
            }
        };
    });
  
    var OpacityElements = {
        image: $([]),
        textContainer: $([])
    };
  
    function initHandlers(){
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
          	divTop = scrollingDiv.offsetTop;
            divLeft = scrollingDiv.offsetLeft;
            while (scrollingDiv.offsetParent) {
            	scrollingDiv = scrollingDiv.offsetParent;
                divTop += scrollingDiv.offsetTop;
                divLeft+=scrollingDiv.offsetLeft;
            }
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
            contentDiv=document.getElementsByClassName('extraction-content')[0];
            divArray = scrollingDiv.getElementsByTagName("div");
            document.onkeyup=keyupHandler;
            scrollingDiv.onkeyup=keyupHandler;
            scrollingDiv.onmousedown = mousedown;
    }
  
  
function getCursorPosition(e)
{
  try {
	e = e || window.event;
	if (e)
    	{
    	if (e.pageX || e.pageX == 0) return [(e.pageX-mainLeft)/zoomFactor,(e.pageY-mainTop)/zoomFactor+internalDiv.scrollTop];
    		var dE = document.documentElement || {};
    		var dB = document.body || {};
    		if ((e.clientX || e.clientX == 0) &amp;&amp; ((dB.scrollLeft || dB.scrollLeft == 0) || (dE.clientLeft || dE.clientLeft == 0))) 
          		return [(e.clientX - mainLeft + (dE.scrollLeft || dB.scrollLeft || 0) - (dE.clientLeft || 0))/zoomFactor,(e.clientY -mainTop + (dE.scrollTop || dB.scrollTop || 0) - (dE.clientTop || 0))/zoomFactor+internalDiv.scrollTop];
    	}
  } catch (e){
  	console.log("getCursorPosition "+e);
  }
	return null;
}

function mousedown(e)
{
  try {
	divArray=contentDiv.getElementsByTagName('DIV');
	var mxy = getCursorPosition(e);
	var box = document.getElementById("sel_box");
	box.orig_x = mxy[0];
	box.orig_y = mxy[1];
	box.style.left = mxy[0]+"px";
	box.style.top = mxy[1]+"px";
	box.style.display = "block";
	scrollingDiv.onmousemove = mousemove;
	scrollingDiv.onmouseup = mouseup;
	console.log("Start left "+box.style.left+" top "+box.style.top);  
  } catch (e){
     console.log("mousedown "+e);
  }
}

function mousemove(e)
{
    try {
		var mxy = getCursorPosition(e);
		var box = document.getElementById("sel_box");
        if (mxy[0]-box.orig_x &gt;0){
			box.style.width = (mxy[0]-box.orig_x)+"px";
        } else {
       		box.style.left = mxy[0]+"px";
			box.style.width = (box.orig_x-mxy[0])+"px";
        }
        if (mxy[1]-box.orig_y&gt;0){
			box.style.height = (mxy[1]-box.orig_y)+"px";
        } else {
			box.style.top = mxy[1]+"px";
			box.style.height = (box.orig_y-mxy[1])+"px";
        }
    } catch (e){
     	console.log("mousemove "+e);
    }
}

var counter=0;
var counterIndexesArray=0;  
var values; 
var indexesArray=new Array();
var isSizesSet=false;  

function mouseup(e)
{
    try {
	var box = document.getElementById("sel_box");
    var tops=pageTop-mainTop;
	var mxy = getCursorPosition(e);
	var top=Math.min(mxy[1],box.orig_y)/scaleFactor;
	var bottom=Math.max(mxy[1],box.orig_y)/scaleFactor;
	var left=Math.min(mxy[0],box.orig_x)/scaleFactor;
	var right=Math.max(mxy[0],box.orig_x)/scaleFactor;
    if (xminus&gt;0){
    	left=left-xminus*scaleFactor;
        right=right-xminus*scaleFactor;
    }  
    var textContent="";
    var flag=true;
     var length = divArray.length;
    for (var i=0;i&lt;length; i++) {
    	try {
        	var divWithText = divArray[i];
            var divTop1 = divWithText.offsetTop;
            var divLeft1 = divWithText.offsetLeft;
            var divWithText = divArray[i];
                    var width=divWithText.style.width.replace("px","")*scaleFactor;
                    var height=divWithText.style.height.replace("px","")*scaleFactor;
                    divTop1=divTop1+height/2;
                    divLeft1=divLeft1+width/2;  
            if ((divTop1&gt;top)&amp;&amp;(divTop1&lt;bottom)&amp;&amp;(divLeft1&gt;left)&amp;&amp;(divLeft1&lt;right)){
				textContent=textContent+divWithText.innerText+" ";
                var textRange=document.createRange();
                textRange.selectNode(divWithText);
                values=DocumentContainer.getRangeIndexes(textRange);
                if (indexesArray.length&gt;0){
		        	if (indexesArray[counterIndexesArray-1].endIndex+1==values.startIndex){
  		            	indexesArray[counterIndexesArray-1].endIndex=values.endIndex;
                        counterIndexesArray--;
       			    } else {
                    	indexesArray[counterIndexesArray]=values;
                    }
                } else {
                	indexesArray[counterIndexesArray]=values;
                }
                        
                counterIndexesArray++;
                console.log("Values "+values);
           }
        } catch (e){
            console.log("in loop "+e);
        }
    }
  
    var textId='text_id_'+ counter; 
    box.id='id_'+counter;
    box.className='selection_id';    
    counter++;
    boxesArray[boxesArray.length]=box;    
    box.outerHTML=box.outerHTML+'&lt;div style="position: absolute; border: 1px solid rgba(27, 138, 0, .2);z-index: 100;background: rgba(27, 138, 0, .2);" id="sel_box"&gt;&lt;/div&gt;';
    document.onmousemove = function(){};
    document.onmouseup = function(){};
    } catch (ex){
    	console.log("mouseup "+ex);
    }
}
  
    function initButtons(){
            var plusButton=document.getElementsByClassName('ie-zoom-in')[0];
            var minusButton=document.getElementsByClassName('ie-zoom-out')[0];
            if (minusButton!=null){  
                minusButton.onclick=zoomOut1;
            }  
            if (plusButton!=null){  
                plusButton.onclick=zoomIn2;
            }
    }
  
    var zooming=0;
    var zoomingFactor=1;
    
    function tagCoordinatesUpdate(factorChange){
		var selections=document.getElementsByClassName('selection_id');
        var size=selections.length;
        for (var i=0;i&lt;size;i++){
        	var selectionDiv=selections[i];
            try {
            var width=selectionDiv.style.width.replace('px','');
            if (width&gt;0){
                var left=selectionDiv.style.left.replace('px','');
                var top=selectionDiv.style.top.replace('px','');
                var height=selectionDiv.style.height.replace('px','');
	            console.log("Left "+left+" top "+top+" width "+width+" height "+height);
                left=left*factorChange;
                top=top*factorChange;
                height=height*factorChange;
                width=width*factorChange;
            	selectionDiv.style.left=left+'px';
            	selectionDiv.style.top=top+'px';
            	selectionDiv.style.width=width+'px';
            	selectionDiv.style.height=height+'px';
            }
            } catch (e){
            	console.log("tagCoordinatesUpdate "+e);
            }
        }
    }
  
    function zoomIn2(e){
        zoomFactor=1;//zoomFactor*1.1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor*1.1;
        zoom(updatedScale, scaleFactor, false);
        tagCoordinatesUpdate(1.1);
        scaleFactor=updatedScale;
        minimapSizeZoom(1.1);
    }
  
    function zoomOut1(e){
        zoomFactor=1;//zoomFactor/1.1;
        if (zoomFactor&lt;1)
          zoomFactor=1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor/1.1;
        zoom(updatedScale, scaleFactor, true);
        tagCoordinatesUpdate(1/1.1);
    	scaleFactor=updatedScale;
        minimapSizeZoom(1/1.1);
    }
  
  	function minimapSizeZoom(factor){
        scrollingDiv.children[0].style.transform='scaleX(1) scaleY(1) translateZ(0px)';
        var divScale=scrollingDiv.children[0].style.transform.substring(7,scrollingDiv.children[0].style.transform.indexOf(")"));
        var scale=divScale*scaleFactor;
    	var main=document.getElementsByTagName('MAIN')[0];
        var scrollingDivWidth=initialMainWidth+90;
        var aside=document.getElementsByTagName('ASIDE')[0];
        scrollingDiv.style.width=scrollingDivWidth+'px';
        scrollingDiv.style.maxWidth=scrollingDivWidth+'px';
        var widthBars=(mainWidth-main.clientWidth)*scaleFactor/initialScale;
        var heightBars=(mainHeight-main.clientHeight)*scaleFactor/initialScale;
      
        var scaledWidth=initialMainWidth/divScale;
        var scaledHeight=initialMainHeight/divScale;
        main.style.width=scaledWidth+'px';
        main.style.maxWidth=scaledWidth+'px';
        main.style.height=scaledHeight+'px';
        main.style.maxHeight=scaledHeight+'px';
        aside.style.left=scaledWidth+'px';
        aside.style.height=scaledHeight+'px';
        aside.style.maxHeight=scaledHeight+'px';
        mainWidth=scaledWidth;
        mainHeight=scaledHeight;
    }  
  
    function zoom(scale, oldScale, isIn){
        var pages=scrollingDiv.getElementsByTagName('PAGE');
        for (var i=0;i&lt;pages.length;i++){
        	var $page = $('page').eq(i);
            $page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
        }
    }
  
    function setMinimapSizes(){
      if (!isSizesSet){
        isSizesSet=true;
                var main=document.getElementsByTagName('MAIN')[0];
                var mainWidth=scrollingDiv.clientWidth-90;

                var aside=document.getElementsByTagName('ASIDE')[0];
                var minimapImgs=main.getElementsByTagName('IMG');
                var pages=scrollingDiv.getElementsByTagName('PAGE');
                var dds=scrollingDiv.getElementsByTagName('DD');
                var dls=scrollingDiv.getElementsByTagName('DL');
                var dts=scrollingDiv.getElementsByTagName('DT');
                var numberOfImages=minimapImgs.length;
      			var internalDivs="";
                var topPosition=3;
                for (var i=0;i&lt;numberOfImages;i++){
                    var pageNumber=i+1;
                    var minimapImg=minimapImgs[i];
                    minimapImg.draggable=false;
                    dls[i].style.height=scrollingDiv.clientHeight+"px";
                    dls[i].style.width=mainWidth+"px";
                    dds[i].style.height=scrollingDiv.clientHeight+"px";
                    dds[i].style.width=mainWidth+"px";
                    var ddHeight=dds[i].style.height.replace('px','');
                	var $page = $('page').eq(i);
                	var scale = parseFloat((1/(parseInt($page.attr('width'))/($page.width()-$('aside').width()))).toFixed(1));
                    xminus=($page.attr('width')-$page.width())*scale/2;
                    var scaledDDHeight=ddHeight*scale;
	                scaleFactor=scale;
                    console.log('xminus '+xminus);
                    console.log("scaleFactor "+scaleFactor);
      				$page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
                    var xmv=-xminus;
                    var value=xmv+'px';
                    var pageWidth=$page.attr('width');
                    var pageHeight=$page.attr('height');
                    var height=pageHeight/(pageWidth/70);
                    var top=topPosition+3;
                    internalDivs=internalDivs+'&lt;a href="#page-'+i+'" &gt;&lt;div title="'+pageNumber+'" style="top:'+top+'px;height:'+height+'px;" class="dom-minimap-section unselectable"&gt;'+pageNumber+"&lt;img class='minimap-image' src='"+minimapImg.src+"' style='width:70px'/&gt;"+'&lt;/div&gt;&lt;/a&gt;';
					topPosition=top+height;
                    var page=pages[i];
                    page.innerHTML='&lt;a name="page-'+i+'"&gt;&lt;/a&gt;'+page.innerHTML;
                 }
                var innerHTML='&lt;div style="position:relative;height: 100%;"&gt;'+internalDivs+'&lt;div style="bottom:100%" class="dom-minimap-scroll dom-minimap-scroll-top"&gt;&lt;/div&gt;&lt;div class="dom-minimap-scroll dom-minimap-scroll-bottom"&gt;&lt;/div&gt;&lt;/div&gt;';
      			aside.innerHTML=innerHTML;
      			main.innerHTML=main.innerHTML+'&lt;div style="position: absolute; border: 1px solid rgba(27, 138, 0, .2);z-index: 100;background: rgba(27, 138, 0, .2);" id="sel_box"&gt;&lt;/div&gt;';
                var miniMapLeft=scrollingDiv.clientWidth-90;
                var miniMapRight=scrollingDiv.clientWidth;
      			aside.style.overflowY='scroll';
                main.style.width=mainWidth;
                main.style.maxWidth=mainWidth;
                main.style.height=scrollingDiv.clientHeight+"px";
                aside.style.left=miniMapLeft;
                aside.style.right=0;
                aside.style.height=scrollingDiv.clientHeight+"px";
      			internalDiv=document.getElementById('content');
        		var pageElement=document.getElementsByTagName('page')[0];
          		mainTop = internalDiv.offsetTop;
                pageTop=pageElement.offsetTop;
            	mainLeft = internalDiv.offsetLeft;
            	while (internalDiv.offsetParent) {
                    console.log("Name "+internalDiv.tagName+" " +internalDiv.className+" Opacity " +internalDiv.style.opacity+" Hidden "+internalDiv.getAttribute('hidden')+" offsetTop "+internalDiv.offsetTop);
            		internalDiv = internalDiv.offsetParent;
                	mainTop += internalDiv.offsetTop;
                	mainLeft+=internalDiv.offsetLeft;
            	}
            	while (pageElement.offsetParent) {
            		pageElement = pageElement.offsetParent;
                	pageTop += pageElement.offsetTop;
            	}
				internalDiv=document.getElementById('content');
        		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        		var allButtonContainers=document.getElementsByClassName('ie-remove-all-tags');
                var containers=document.getElementsByClassName('ie-field-tag-button-container');
                var containersLength=containers.length;
                for (var i=0;i&lt;containersLength;i++){
                	containers[i].onclick=onHoverHandler;
                    containers[i].data_subanswer_code=document.getElementsByClassName('ie-body-hover-container')[i].children[0].getAttribute('data-subanswer-code');
                    buttonContainers[i].onclick=removeTag; 
                    allButtonContainers[i].onclick=removeTags; 
                }
                spawnWorker();
      }
    }

    function removeTags(){
        console.log("removeTags");
		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        var buttonContainersSize=buttonContainers.length;
		for (var i=0;i&lt;buttonContainersSize;i++){
          try {
        	var buttonContainer=buttonContainers[i];
            buttonContainer.click();
          } catch (ex){
          	console.log("removeTags "+ex);
          }
        }
    }
  
  	function removeTag(){
        console.log("removeTag");
        this.children[0].click();
    	var backgroundColor=this.parentElement.parentElement.children[0].children[0].children[0].style.backgroundColor;
      	var selectionDivs=document.getElementsByClassName("selection_id");
      	var selectionDivsSize=selectionDivs.length;
        console.log("selectionDivsSize "+selectionDivsSize);
        for (var i in selectionDivs){
          try {
        	var selectionDiv=selectionDivs[i];
            console.log(selectionDiv.outerHTML);
	        console.log(selectionDiv.style.background+" "+backgroundColor);
            if (selectionDiv.style.background==backgroundColor){
          		selectionDiv.parentElement.removeChild(selectionDiv);
            }
          } catch (e){
          }
        }
    }

  function spawnWorker(){
        var i;  
    	var blob = new Blob(["onmessage = function(e) {" +
                                "var jsonDataObject=e.data;"+
                                "var widthDiff=jsonDataObject.scrollWidth-jsonDataObject.width;"+
                                "var heightDiff=jsonDataObject.scrollHeight-jsonDataObject.height;"+
                                "if ((widthDiff&gt;0) || (heightDiff&gt;0)) {"+
                    			"	var updatedFontSizeWidth = jsonDataObject.fontSize * jsonDataObject.width / jsonDataObject.scrollWidth;"+
                    			"	var updatedFontSizeHeight = jsonDataObject.fontSize * jsonDataObject.height / jsonDataObject.scrollHeight;"+
                    			"	var updatedFontSize = Math.min(updatedFontSizeWidth, updatedFontSizeHeight);"+
                                "   var outputDataObject=new Object();"+
                                "   outputDataObject.position=jsonDataObject.position;"+
                             	"	outputDataObject.fontSize=updatedFontSize;"+
		                        "   postMessage(outputDataObject); "+
                    			"}"+
                             "}"]);
		var blobURL = window.URL.createObjectURL(blob);
		var worker = new Worker(blobURL);
        for (i in divArray){
            var divWithText = divArray[i];
            var dataObject=new Object();
          if ((divWithText.className == "n")&amp;&amp;(divWithText.tagName=="DIV")){

          	var divWithTextFontHeight = divWithText.style.fontSize.replace("px", "");
            var divWithTextWidth = divWithText.style.width.replace("px", "");
            var divWithTextScrollWidth = divWithText.scrollWidth;
            var divWithTextHeight = divWithText.style.height.replace("px", "");
            var divWithTextScrollHeight = divWithText.scrollHeight;
          	dataObject.fontSize=divWithTextFontHeight;
          	dataObject.width=divWithTextWidth;
          	dataObject.scrollWidth=divWithTextScrollWidth;
          	dataObject.height=divWithTextHeight;
          	dataObject.scrollHeight=divWithTextScrollHeight;
          	dataObject.position=i;  
    		worker.postMessage(dataObject); // Start the worker.
          } 
        } 
		worker.onmessage = function(e) {
        	var jsonDataObject=e.data;
            divArray[jsonDataObject.position].style.fontSize = jsonDataObject.fontSize + "px";
		};

		window.URL.revokeObjectURL(blobURL);
    }
  
    function onHoverHandler(e){
            var color=this.children[0].style.backgroundColor;
            var controllerName=this.data_subanswer_code;
            var main=document.getElementsByTagName('MAIN')[0];
			var selectedBoxes=main.getElementsByClassName('selection_id');
            var selectedBoxesLength=selectedBoxes.length;
            for (var j=0;j&lt;selectedBoxesLength;j++){
                try {
                var selectedBox=selectedBoxes[j];
                    var parentNode=selectedBox.parentNode;
                    parentNode.removeChild(selectedBox);
                } catch (exe){
                	console.log("onHoverHandler j "+exe);
                }
            }
			var controller = Answers.getSubControllerByCode(controllerName);
            controller.isMultiAnswer=false;
            var i;
      		var length=indexesArray.length; 
            for (i=0; i&lt;length;i++ ){
				SelectionTagger.processTaggingSelection(controller, indexesArray.shift(), e/*{}*/);
            	counterIndexesArray--;
				Appender.append(controller, indexesArray); 
            }
            var arrayLength=boxesArray.length;
            console.log("Array length "+arrayLength)
            for (i=0;i&lt;arrayLength;i++){
                try {
                  console.log("Id "+boxesArray[i].id);
                  var selectedDiv=document.getElementById(boxesArray[i].id);
              if(selectedDiv != null){
            	selectedDiv.style.background=color;
            	selectedDiv.style.backgroundColor=color;              
                selectedDiv.style.opacity=0.2;}
                } catch (ex){
                	console.log("onHoverHandler i "+ex);
                }
            }
            boxesArray=new Array();
    }
  
    function keyupHandler(){
       try {
         if (event.keyCode==67){
         	document.getElementById('checkInput').checked=!document.getElementById('checkInput').checked;
            if (document.getElementById('checkInput').checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}

            var divArray= contentDiv.getElementsByClassName("n");
        	var i;
        	for (i in divArray) {
          		var divWithText = divArray[i];
      			if (document.getElementById('checkInput').checked) {
              		divWithText.style.opacity="0";
        		} else {
              		divWithText.style.opacity="1";
        		}
        	}
         }
       } catch (e){
         console.log("keyupHandler "+e);
       }
    }
  
    var zoomFactor=1;
    var oldScale=1;
    var xminus;
    var yminus;
    var inputElement;
    var boxesArray=new Array();
    var backgroundColors=new Array();
	var scaleFactor;
    var divTop;
    var divLeft;
    var mainTop;
    var mainLeft;
    var pageTop;
    var pageLeft;
    var divArray;
    var scrollingDiv;
    var internalDiv;
    var contentDiv;
    var isComputing = false;
    var counter = 0;
    var isWidthChanged = false;
    var elementSet = new Set();
  
   
    function initOpacity() {
        var template = $('&lt;div class="toolbar-boundary"&gt;&lt;/div&gt;&lt;div class="opacity-control"&gt;&lt;span&gt;Opacity&lt;/span&gt;&lt;input type="range" id="rangeInput" value="10" /&gt;&lt;/div&gt;');
        $('.extraction-search').before(template);
        OpacityElements.image = $('.extraction-content img');
        OpacityElements.textContainer = $('.extraction-content page');
      	OpacityElements.image.css('opacity', 0.1);
        $('#rangeInput').on('input', changeOpacity);
    }
   
    function changeOpacity() {
        var opacity = this.value;
        try {
        	var i;
          	var j;
	        var divArray=contentDiv.getElementsByClassName("n");
    	    var imgArray=contentDiv.getElementsByTagName("IMG");
          	for (j in imgArray){
          		var pageImg=imgArray[j];
            	try {
                   if (pageImg.className!='minimap-image'){
              			pageImg.style.opacity=this.value / 100;
                   }
            	} catch (exe){
            		console.log("changeOpacity internal img "+exe);
            	}
          	}
            for (i in divArray) {
          	var divWithText = divArray[i];
          	try {
	            divWithText.style.borderWidth='3px';
               if (opacity==100) {
                    divWithText.style.color='rgba(0,0,0,0)';
        		} else {
                    divWithText.style.color='black';
              		divWithText.style.opacity="1";
        		}
          	} catch (ex){
          		console.log("changeOpacity internal div "+ex);
          	}
         }
        } catch (e){
	         	console.log("changeOpacity "+e);
        }
    }
   
   
    function preprocessAppendOrder() {
        var appendOrder = 0;
        var controllers = Answers.getTaggingControllers();
        controllers.forEach(function(controller) {
            var $tags = DocumentContainer.getControllerTag(controller);
            if ($tags.length) {
                for (var i = 0, l = $tags.length; i &lt; l; i++) {
                    $tags.eq(i).attr('appendorder', nextAppendOrder());
                }
            }
        });
       
        function nextAppendOrder () {
            return ++appendOrder;
        }
    }
&lt;/script&gt;
  
&lt;@instructions title="&lt;h2&gt;[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;&lt;br data-mce-bogus="1"&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;


&lt;/@hit&gt;</content>
                                                    <name>[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]</name>
                                                    <origination>CREATED_AUTOMATICALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>TASK</type>
                                                    <uuid>76a5e96b-d996-44cc-bf93-91dbb18ae400</uuid>
                                                    <version>
                                                        <componentUuid>bd910e5d-9525-46b5-a8e3-a181997ccda2</componentUuid>
                                                        <incrementalVersion>1.1</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                        <versionUuid>d5fa0c37-3846-4b8e-8b8f-404eb8d9716a</versionUuid>
                                                    </version>
                                                </template>
                                            </templates>
                                            <title>[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]</title>
                                            <useCommonHitCoordinates>false</useCommonHitCoordinates>
                                            <uuid>2e04f930-c691-47fe-877a-32e68e8e3512</uuid>
                                            <version>
                                                <componentUuid>7c26f3fe-51c2-46f5-b0cd-daa96e179f95</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                <versionUuid>27593d2c-ee21-41e1-ab55-9c2bfb44cc39</versionUuid>
                                            </version>
                                            <workSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>HUMAN</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:06Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                                                </version>
                                                <answers/>
                                                <businessRules>
                                                    <businessRule>
                                                        <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                        <name>Start with one assignment 1+0 pay all</name>
                                                        <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                                        <ruleType>DROOLS</ruleType>
                                                        <ruleTypeUI>Adjudication</ruleTypeUI>
                                                        <template>
                                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                            <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                            <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                            <params>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>80</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                                    <name>Normal accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>CHECK_EVERY</code>
                                                                    <defaultValue>5</defaultValue>
                                                                    <description>Check every i-th gold question when evaluating qualification score</description>
                                                                    <name>Check every i-th gold question</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_HIT_THRESHOLD</code>
                                                                    <defaultValue>100</defaultValue>
                                                                    <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                                    <name>Percent of correct answers</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>70</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                                    <name>Worst accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_VALUE</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Number of correct answers</description>
                                                                    <name>Majority value</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAX_ASSIGNMENT_LIMIT</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Maximum number of assignments</description>
                                                                    <name>Max assignments limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Normal accuracy level upper limit in percents exclusive</description>
                                                                    <name>Normal accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                                    <name>Super accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>95</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                                    <name>Super accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                                    <name>Worst accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Normal accuracy level lower limit in percents inclusive</description>
                                                                    <name>Normal accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                            </params>
                                                        </template>
                                                        <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                                    </businessRule>
                                                </businessRules>
                                                <isPrivate>false</isPrivate>
                                                <items>
                                                    <item>
                                                        <type>TIME_PER_ASSIGNMENT</type>
                                                        <value>1800000</value>
                                                    </item>
                                                    <item>
                                                        <type>TITLE</type>
                                                        <value>Miscellaneous Tasks</value>
                                                    </item>
                                                    <item>
                                                        <type>AUTOMATICALLY_APPROVED</type>
                                                        <value>432000000</value>
                                                    </item>
                                                    <item>
                                                        <type>HIT_EXPIRES_IN</type>
                                                        <value>2592000000</value>
                                                    </item>
                                                    <item>
                                                        <type>RECOMMENDATION_TAGS</type>
                                                        <value>["information_extraction"]</value>
                                                    </item>
                                                </items>
                                                <template>
                                                    <code></code>
                                                    <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                                                    </version>
                                                </template>
                                            </workSetting>
                                            <workSpacePreviewData>[{"name":"original_document_url","value":"${question.data['original_document_url']}"},{"name":"country","value":"${question.data['country']}"}]</workSpacePreviewData>
                                            <workSpacePreviewScheme>
                                                <answers>
                                                    <answer>
                                                        <allowNA>false</allowNA>
                                                        <answer>original_document_url</answer>
                                                        <answerCode>original_document_url</answerCode>
                                                        <answerHtml></answerHtml>
                                                        <answerTypeObject>
                                                            <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                            <code>FREE_TEXT</code>
                                                            <description></description>
                                                            <optionsAvailable>false</optionsAvailable>
                                                            <showDefaultValue>true</showDefaultValue>
                                                            <showForFieldScheme>true</showForFieldScheme>
                                                            <showForHumanTask>true</showForHumanTask>
                                                            <showForMachineConfig>true</showForMachineConfig>
                                                            <title>Free Text</title>
                                                            <valueType>SINGLEVALUE</valueType>
                                                        </answerTypeObject>
                                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                                        <autocompleteField>false</autocompleteField>
                                                        <constantable>false</constantable>
                                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                        <lastModified>2018-08-03T13:18:30Z</lastModified>
                                                        <letCustomValues>false</letCustomValues>
                                                        <manualField>false</manualField>
                                                        <multiValue>false</multiValue>
                                                        <percentRequired>false</percentRequired>
                                                        <range>false</range>
                                                        <required>false</required>
                                                        <sequenceNumber>1</sequenceNumber>
                                                        <useBlocks>false</useBlocks>
                                                        <useEmptyCell>false</useEmptyCell>
                                                    </answer>
                                                    <answer>
                                                        <allowNA>false</allowNA>
                                                        <answer>country</answer>
                                                        <answerCode>country</answerCode>
                                                        <answerHtml></answerHtml>
                                                        <answerTypeObject>
                                                            <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                            <code>FREE_TEXT</code>
                                                            <description></description>
                                                            <optionsAvailable>false</optionsAvailable>
                                                            <showDefaultValue>true</showDefaultValue>
                                                            <showForFieldScheme>true</showForFieldScheme>
                                                            <showForHumanTask>true</showForHumanTask>
                                                            <showForMachineConfig>true</showForMachineConfig>
                                                            <title>Free Text</title>
                                                            <valueType>SINGLEVALUE</valueType>
                                                        </answerTypeObject>
                                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                                        <autocompleteField>false</autocompleteField>
                                                        <constantable>false</constantable>
                                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                        <lastModified>2018-08-03T13:18:30Z</lastModified>
                                                        <letCustomValues>false</letCustomValues>
                                                        <manualField>false</manualField>
                                                        <multiValue>false</multiValue>
                                                        <percentRequired>false</percentRequired>
                                                        <range>false</range>
                                                        <required>false</required>
                                                        <sequenceNumber>2</sequenceNumber>
                                                        <useBlocks>false</useBlocks>
                                                        <useEmptyCell>false</useEmptyCell>
                                                    </answer>
                                                </answers>
                                                <description></description>
                                                <id>147</id>
                                                <name>search options</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <uuid>085b07d7-7ddb-42eb-adb4-142f83790482</uuid>
                                            </workSpacePreviewScheme>
                                        </question>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]</title>
                                        <type>SINGLE</type>
                                        <uuid>177c3796-d4da-4ed6-96fd-8b2002c67659</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>1a9e0c6c-cf63-4427-a3ed-469585edaa80</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T08:50:08Z</lastModified>
                                            <versionUuid>c27a9ad9-2f23-4026-9f72-574f85fc1b0d</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>3</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>2bf38ed0-f795-4249-9f26-55deea1d815b</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>675aafdd-263d-45a2-9544-2ebace3257cf</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <description>Miscellaneous Tasks</description>
                                        <executingType>HUMAN</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <question>
                                            <answers>
                                                <answer>
                                                    <allowNA>false</allowNA>
                                                    <answer>Standard</answer>
                                                    <answerCode>ocr_document_url</answerCode>
                                                    <answerHtml></answerHtml>
                                                    <answerTypeObject>
                                                        <answerTypeGroup>ADVANCED</answerTypeGroup>
                                                        <code>INFO_EXTRACTION</code>
                                                        <description></description>
                                                        <optionsAvailable>true</optionsAvailable>
                                                        <showDefaultValue>true</showDefaultValue>
                                                        <showForFieldScheme>false</showForFieldScheme>
                                                        <showForHumanTask>true</showForHumanTask>
                                                        <showForMachineConfig>false</showForMachineConfig>
                                                        <title>Information Extraction</title>
                                                        <valueType>SINGLEVALUE</valueType>
                                                    </answerTypeObject>
                                                    <appendDataStoreOptions>false</appendDataStoreOptions>
                                                    <autocompleteField>false</autocompleteField>
                                                    <category></category>
                                                    <constantable>false</constantable>
                                                    <defaultValue></defaultValue>
                                                    <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                    <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                    <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                    <htmlClasses></htmlClasses>
                                                    <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                    <letCustomValues>false</letCustomValues>
                                                    <manualField>false</manualField>
                                                    <multiValue>false</multiValue>
                                                    <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                                    <originalDocumentSource>${question.data.original_document_url}</originalDocumentSource>
                                                    <percentRequired>false</percentRequired>
                                                    <range>false</range>
                                                    <required>false</required>
                                                    <sequenceNumber>1</sequenceNumber>
                                                    <useBlocks>false</useBlocks>
                                                    <useEmptyCell>false</useEmptyCell>
                                                </answer>
                                                <answer>
                                                    <allowNA>false</allowNA>
                                                    <answer>test</answer>
                                                    <answerCode>test</answerCode>
                                                    <answerHtml>test</answerHtml>
                                                    <answerTypeObject>
                                                        <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                        <code>FREE_TEXT</code>
                                                        <description></description>
                                                        <optionsAvailable>false</optionsAvailable>
                                                        <showDefaultValue>true</showDefaultValue>
                                                        <showForFieldScheme>true</showForFieldScheme>
                                                        <showForHumanTask>true</showForHumanTask>
                                                        <showForMachineConfig>true</showForMachineConfig>
                                                        <title>Free Text</title>
                                                        <valueType>SINGLEVALUE</valueType>
                                                    </answerTypeObject>
                                                    <appendDataStoreOptions>false</appendDataStoreOptions>
                                                    <autocompleteField>false</autocompleteField>
                                                    <constantable>false</constantable>
                                                    <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                    <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                    <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                    <hotKey>t</hotKey>
                                                    <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                    <letCustomValues>false</letCustomValues>
                                                    <manualField>false</manualField>
                                                    <multiValue>false</multiValue>
                                                    <parentAnswer>
                                                        <allowNA>false</allowNA>
                                                        <answer>Standard</answer>
                                                        <answerCode>ocr_document_url</answerCode>
                                                        <answerHtml></answerHtml>
                                                        <answerTypeObject>
                                                            <answerTypeGroup>ADVANCED</answerTypeGroup>
                                                            <code>INFO_EXTRACTION</code>
                                                            <description></description>
                                                            <optionsAvailable>true</optionsAvailable>
                                                            <showDefaultValue>true</showDefaultValue>
                                                            <showForFieldScheme>false</showForFieldScheme>
                                                            <showForHumanTask>true</showForHumanTask>
                                                            <showForMachineConfig>false</showForMachineConfig>
                                                            <title>Information Extraction</title>
                                                            <valueType>SINGLEVALUE</valueType>
                                                        </answerTypeObject>
                                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                                        <autocompleteField>false</autocompleteField>
                                                        <category></category>
                                                        <constantable>false</constantable>
                                                        <defaultValue></defaultValue>
                                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                                        <htmlClasses></htmlClasses>
                                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                        <letCustomValues>false</letCustomValues>
                                                        <manualField>false</manualField>
                                                        <multiValue>false</multiValue>
                                                        <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                                        <originalDocumentSource>${question.data.original_document_url}</originalDocumentSource>
                                                        <percentRequired>false</percentRequired>
                                                        <range>false</range>
                                                        <required>false</required>
                                                        <sequenceNumber>1</sequenceNumber>
                                                        <useBlocks>false</useBlocks>
                                                        <useEmptyCell>false</useEmptyCell>
                                                    </parentAnswer>
                                                    <percentRequired>false</percentRequired>
                                                    <range>false</range>
                                                    <required>false</required>
                                                    <sequenceNumber>2</sequenceNumber>
                                                    <useBlocks>false</useBlocks>
                                                    <useEmptyCell>false</useEmptyCell>
                                                </answer>
                                            </answers>
                                            <assignmentDuration>1800000</assignmentDuration>
                                            <assignmentLimit>1</assignmentLimit>
                                            <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                                            <autoApprovalDelay>432000000</autoApprovalDelay>
                                            <automaticallyProcessed>0</automaticallyProcessed>
                                            <blockSize>1</blockSize>
                                            <constQualifiedWorkers>false</constQualifiedWorkers>
                                            <currency>USD</currency>
                                            <description>Miscellaneous Tasks</description>
                                            <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                                            <expiredTime>2592000000</expiredTime>
                                            <faqItems/>
                                            <frameHeight>2500</frameHeight>
                                            <geolocationEnabled>false</geolocationEnabled>
                                            <instructionItems/>
                                            <keywords>Miscellaneous Tasks</keywords>
                                            <maxAssignments>1</maxAssignments>
                                            <moderation>false</moderation>
                                            <moderationFlag>false</moderationFlag>
                                            <origination>CREATED_MANUALLY</origination>
                                            <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                                            <qualificationInstruction></qualificationInstruction>
                                            <qualificationRequirements/>
                                            <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                                            <qualificationTasks>20</qualificationTasks>
                                            <qualificationTraining>false</qualificationTraining>
                                            <questionRuleMaps>
                                                <questionRuleMap>
                                                    <businessRule>
                                                        <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                        <name>Start with one assignment 1+0 pay all</name>
                                                        <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                                        <ruleType>DROOLS</ruleType>
                                                        <ruleTypeUI>Adjudication</ruleTypeUI>
                                                        <template>
                                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                            <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                            <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                            <params>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>80</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                                    <name>Normal accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>CHECK_EVERY</code>
                                                                    <defaultValue>5</defaultValue>
                                                                    <description>Check every i-th gold question when evaluating qualification score</description>
                                                                    <name>Check every i-th gold question</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_HIT_THRESHOLD</code>
                                                                    <defaultValue>100</defaultValue>
                                                                    <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                                    <name>Percent of correct answers</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>70</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                                    <name>Worst accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_VALUE</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Number of correct answers</description>
                                                                    <name>Majority value</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAX_ASSIGNMENT_LIMIT</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Maximum number of assignments</description>
                                                                    <name>Max assignments limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Normal accuracy level upper limit in percents exclusive</description>
                                                                    <name>Normal accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                                    <name>Super accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>95</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                                    <name>Super accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                                    <name>Worst accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Normal accuracy level lower limit in percents inclusive</description>
                                                                    <name>Normal accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                            </params>
                                                        </template>
                                                        <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                                    </businessRule>
                                                </questionRuleMap>
                                            </questionRuleMaps>
                                            <radiusSelector>ExactLocation</radiusSelector>
                                            <randomizeAnswers>false</randomizeAnswers>
                                            <recursiveThreshold>1</recursiveThreshold>
                                            <restrictedCountries/>
                                            <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                                            <templates>
                                                <template>
                                                    <code></code>
                                                    <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;
&lt;!-- v 1.9 --&gt;
&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;
  
&lt;style type="text/css"&gt;
    document {
        background: none !important;
        overflow: visible!important;
        padding: 0 !important;
        position: absolute !important;
        left: 0;
        top: 0;
        width: 100%;
    }
    page {
        box-shadow: none !important;
        background: none !important;
        padding: 0 !important;
        margin: 0 !important;
        overflow: visible!important;
        height: 0 !important;
    }
    cell, document td {
        border: 0 !important;
    }
    block[blocktype="Picture"] {
        opacity: 1 !important;
        background: none !important;
    }
    .hidden_field {display:none; }
    .hidden {display:inline-block !important;}
    .extraction-content {padding: 0 !important;}
  	.ie-view-source {
  		display: none;
  	}
  	.ie-view-source + .ie-zoom-in-zoom-out-separator {
  		display: none !important;
  	}
  	.popup-original-document.ml10 {
  		margin-left: 0 !important;
  	}
 
    #rangeInput {
        width: 100px;
        box-shadow: none;
        margin: -1px 0 0 10px;
        border: 0;
    }
    #rangeInput::-moz-focus-outer {
        border: 0;
    }
    .dom-minimap-scroll {
      background-color: rgba(255,255,255,0.15);
    }
    .dom-minimap-section {
        background-color: rgba(255,255,255,0.15);
        color: white;
        font-size: 11px;
        padding-left: 2px;
        border-radius: 2px;
        left: 5px; right: 5px;
    }
    .dom-minimap-section:hover {
      background-color: #e6e6e6;
    }  
&lt;/style&gt;
  
&lt;script type="text/javascript"&gt;
    $(document).ready(function() {
        
        if (document.getElementsByClassName('submit-btn').length) {
            var originalSubmitEvent = document.getElementsByClassName('submit-btn')[0].onclick;
            document.getElementsByClassName('submit-btn')[0].onclick = function(){
                preprocessAppendOrder();
                originalSubmitEvent();
            }
        }
       
        var originalOnTextContainerLoad = ExtractionAnswerController.prototype.onTextContainerLoad;
        ExtractionAnswerController.prototype.onTextContainerLoad = function() {
            try {
            	originalOnTextContainerLoad.apply(this, arguments);
            	var $textContainer = ExtractionAnswer.getExtractionController().$textContainer;
            	if ($textContainer.find('document')) {
                	initHandlers();
                	setMinimapSizes();
                	initButtons();
      			}
            } catch (e){
              console.log("onTextContainerLoad "+e);
            }
        };
    });
  
 
    function initHandlers(){
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
          	divTop = scrollingDiv.offsetTop;
            divLeft = scrollingDiv.offsetLeft;
            while (scrollingDiv.offsetParent) {
            	scrollingDiv = scrollingDiv.offsetParent;
                divTop += scrollingDiv.offsetTop;
                divLeft+=scrollingDiv.offsetLeft;
            }
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
            contentDiv=document.getElementsByClassName('extraction-content')[0];
            divArray = scrollingDiv.getElementsByTagName("div");
            document.onkeyup=keyupHandler;
            scrollingDiv.onkeyup=keyupHandler;
    }
  
  
var counterIndexesArray=0;  
var values; 
var indexesArray=new Array();
var isSizesSet=false;  
var zooming=0;
var zoomingFactor=1;
var zoomFactor=1;
var oldScale=1;
var xminus;
var yminus;
var boxesArray=new Array();
var backgroundColors=new Array();
var scaleFactor;
var divTop;
var divLeft;
var mainTop;
var mainLeft;
var pageTop;
var pageLeft;
var divArray;
var scrollingDiv;
var internalDiv;
var contentDiv;
var isComputing = false;
var isWidthChanged = false;
var elementSet = new Set();

 
    function initButtons(){
            var plusButton=document.getElementsByClassName('ie-zoom-in')[0];
            var minusButton=document.getElementsByClassName('ie-zoom-out')[0];
            if (minusButton!=null){  
                minusButton.onclick=zoomOut1;
            }  
            if (plusButton!=null){  
                plusButton.onclick=zoomIn2;
            }
    }
  

    
    function tagCoordinatesUpdate(factorChange){
		var selections=document.getElementsByClassName('selection_id');
        var size=selections.length;
        for (var i=0;i&lt;size;i++){
        	var selectionDiv=selections[i];
            try {
            var width=selectionDiv.style.width.replace('px','');
            if (width&gt;0){
                var left=selectionDiv.style.left.replace('px','');
                var top=selectionDiv.style.top.replace('px','');
                var height=selectionDiv.style.height.replace('px','');
	            console.log("Left "+left+" top "+top+" width "+width+" height "+height);
                left=left*factorChange;
                top=top*factorChange;
                height=height*factorChange;
                width=width*factorChange;
            	selectionDiv.style.left=left+'px';
            	selectionDiv.style.top=top+'px';
            	selectionDiv.style.width=width+'px';
            	selectionDiv.style.height=height+'px';
            }
            } catch (e){
            	console.log("tagCoordinatesUpdate "+e);
            }
        }
    }
  
    function zoomIn2(e){
        zoomFactor=1;//zoomFactor*1.1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor*1.1;
        zoom(updatedScale, scaleFactor, false);
        tagCoordinatesUpdate(1.1);
        scaleFactor=updatedScale;
        minimapSizeZoom(1.1);
    }
  
    function zoomOut1(e){
        zoomFactor=1;//zoomFactor/1.1;
        if (zoomFactor&lt;1)
          zoomFactor=1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor/1.1;
        zoom(updatedScale, scaleFactor, true);
        tagCoordinatesUpdate(1/1.1);
    	scaleFactor=updatedScale;
        minimapSizeZoom(1/1.1);
    }
  
  	function minimapSizeZoom(factor){
        scrollingDiv.children[0].style.transform='scaleX(1) scaleY(1) translateZ(0px)';
        var divScale=scrollingDiv.children[0].style.transform.substring(7,scrollingDiv.children[0].style.transform.indexOf(")"));
        var scale=divScale*scaleFactor;
    	var main=document.getElementsByTagName('MAIN')[0];
        var scrollingDivWidth=initialMainWidth+90;
        var aside=document.getElementsByTagName('ASIDE')[0];
        scrollingDiv.style.width=scrollingDivWidth+'px';
        scrollingDiv.style.maxWidth=scrollingDivWidth+'px';
        var widthBars=(mainWidth-main.clientWidth)*scaleFactor/initialScale;
        var heightBars=(mainHeight-main.clientHeight)*scaleFactor/initialScale;
      
        var scaledWidth=initialMainWidth/divScale;
        var scaledHeight=initialMainHeight/divScale;
        main.style.width=scaledWidth+'px';
        main.style.maxWidth=scaledWidth+'px';
        main.style.height=scaledHeight+'px';
        main.style.maxHeight=scaledHeight+'px';
        aside.style.left=scaledWidth+'px';
        aside.style.height=scaledHeight+'px';
        aside.style.maxHeight=scaledHeight+'px';
        mainWidth=scaledWidth;
        mainHeight=scaledHeight;
    }  
  
    function zoom(scale, oldScale, isIn){
        var pages=scrollingDiv.getElementsByTagName('PAGE');
        for (var i=0;i&lt;pages.length;i++){
        	var $page = $('page').eq(i);
            $page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
        }
    }
  
    function setMinimapSizes(){
      if (!isSizesSet){
        isSizesSet=true;
                var main=document.getElementsByTagName('MAIN')[0];
                var mainWidth=scrollingDiv.clientWidth-90;

                var aside=document.getElementsByTagName('ASIDE')[0];
                var minimapImgs=main.getElementsByTagName('IMG');
                var pages=scrollingDiv.getElementsByTagName('PAGE');
                var dds=scrollingDiv.getElementsByTagName('DD');
                var dls=scrollingDiv.getElementsByTagName('DL');
                var dts=scrollingDiv.getElementsByTagName('DT');
                var numberOfImages=minimapImgs.length;
      			var internalDivs="";
                var topPosition=3;
                for (var i=0;i&lt;numberOfImages;i++){
                    var pageNumber=i+1;
                    var minimapImg=minimapImgs[i];
                    minimapImg.draggable=false;
                    dls[i].style.height=scrollingDiv.clientHeight+"px";
                    dls[i].style.width=mainWidth+"px";
                    dds[i].style.height=scrollingDiv.clientHeight+"px";
                    dds[i].style.width=mainWidth+"px";
                    var ddHeight=dds[i].style.height.replace('px','');
                	var $page = $('page').eq(i);
                	var scale = 1;
                    xminus=($page.attr('width')-$page.width())*scale/2;
                    var scaledDDHeight=ddHeight*scale;
	                scaleFactor=scale;
                    console.log('xminus '+xminus);
                    console.log("scaleFactor "+scaleFactor);
      				$page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
                    var xmv=-xminus;
                    var value=xmv+'px';
                    var pageWidth=$page.attr('width');
                    var pageHeight=$page.attr('height');
                    var height=pageHeight/(pageWidth/70);
                    var top=topPosition+3;
                    internalDivs=internalDivs+'&lt;a href="#page-'+i+'" &gt;&lt;div title="'+pageNumber+'" style="top:'+top+'px;height:'+height+'px;" class="dom-minimap-section unselectable"&gt;'+pageNumber+"&lt;img class='minimap-image' src='"+minimapImg.src+"' style='width:70px'/&gt;"+'&lt;/div&gt;&lt;/a&gt;';
					topPosition=top+height;
                    var page=pages[i];
                    page.innerHTML='&lt;a name="page-'+i+'"&gt;&lt;/a&gt;'+page.innerHTML;
                 }
                var innerHTML='&lt;div style="position:relative;height: 100%;"&gt;'+internalDivs+'&lt;div style="bottom:100%" class="dom-minimap-scroll dom-minimap-scroll-top"&gt;&lt;/div&gt;&lt;div class="dom-minimap-scroll dom-minimap-scroll-bottom"&gt;&lt;/div&gt;&lt;/div&gt;';
      			aside.innerHTML=innerHTML;
      			main.innerHTML=main.innerHTML+'&lt;div style="position: absolute; border: 1px solid rgba(27, 138, 0, .2);z-index: 100;background: rgba(27, 138, 0, .2);" id="sel_box"&gt;&lt;/div&gt;';
                var miniMapLeft=scrollingDiv.clientWidth-90;
                var miniMapRight=scrollingDiv.clientWidth;
      			aside.style.overflowY='scroll';
                main.style.width=mainWidth;
                main.style.maxWidth=mainWidth;
                main.style.height=scrollingDiv.clientHeight+"px";
                aside.style.left=miniMapLeft;
                aside.style.right=0;
                aside.style.height=scrollingDiv.clientHeight+"px";
      			internalDiv=document.getElementById('content');
        		var pageElement=document.getElementsByTagName('page')[0];
          		mainTop = internalDiv.offsetTop;
                pageTop=pageElement.offsetTop;
            	mainLeft = internalDiv.offsetLeft;
            	while (internalDiv.offsetParent) {
                    console.log("Name "+internalDiv.tagName+" " +internalDiv.className+" Opacity " +internalDiv.style.opacity+" Hidden "+internalDiv.getAttribute('hidden')+" offsetTop "+internalDiv.offsetTop);
            		internalDiv = internalDiv.offsetParent;
                	mainTop += internalDiv.offsetTop;
                	mainLeft+=internalDiv.offsetLeft;
            	}
            	while (pageElement.offsetParent) {
            		pageElement = pageElement.offsetParent;
                	pageTop += pageElement.offsetTop;
            	}
				internalDiv=document.getElementById('content');
        		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        		var allButtonContainers=document.getElementsByClassName('ie-remove-all-tags');
                var containers=document.getElementsByClassName('ie-field-tag-button-container');
                var containersLength=containers.length;
                for (var i=0;i&lt;containersLength;i++){
                	containers[i].onclick=onHoverHandler;
                    containers[i].data_subanswer_code=document.getElementsByClassName('ie-body-hover-container')[i].children[0].getAttribute('data-subanswer-code');
                    buttonContainers[i].onclick=removeTag; 
                    allButtonContainers[i].onclick=removeTags; 
                }
          }
    }

    function removeTags(){
        console.log("removeTags");
		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        var buttonContainersSize=buttonContainers.length;
		for (var i=0;i&lt;buttonContainersSize;i++){
          try {
        	var buttonContainer=buttonContainers[i];
            buttonContainer.click();
          } catch (ex){
          	console.log("removeTags "+ex);
          }
        }
    }
  
  	function removeTag(){
        console.log("removeTag");
        this.children[0].click();
    	var backgroundColor=this.parentElement.parentElement.children[0].children[0].children[0].style.backgroundColor;
      	var selectionDivs=document.getElementsByClassName("selection_id");
      	var selectionDivsSize=selectionDivs.length;
        console.log("selectionDivsSize "+selectionDivsSize);
        for (var i in selectionDivs){
          try {
        	var selectionDiv=selectionDivs[i];
            console.log(selectionDiv.outerHTML);
	        console.log(selectionDiv.style.background+" "+backgroundColor);
            if (selectionDiv.style.background==backgroundColor){
          		selectionDiv.parentElement.removeChild(selectionDiv);
            }
          } catch (e){
          }
        }
    }
  
    function onHoverHandler(e){
            var color=this.children[0].style.backgroundColor;
            var controllerName=this.data_subanswer_code;
            var main=document.getElementsByTagName('MAIN')[0];
			var selectedBoxes=main.getElementsByClassName('selection_id');
            var selectedBoxesLength=selectedBoxes.length;
            for (var j=0;j&lt;selectedBoxesLength;j++){
                try {
                var selectedBox=selectedBoxes[j];
                    var parentNode=selectedBox.parentNode;
                    parentNode.removeChild(selectedBox);
                } catch (exe){
                	console.log("onHoverHandler j "+exe);
                }
            }
			var controller = Answers.getSubControllerByCode(controllerName);
            controller.isMultiAnswer=false;
            var i;
      		var length=indexesArray.length; 
            for (i=0; i&lt;length;i++ ){
				SelectionTagger.processTaggingSelection(controller, indexesArray.shift(), e/*{}*/);
            	counterIndexesArray--;
				Appender.append(controller, indexesArray); 
            }
            var arrayLength=boxesArray.length;
            console.log("Array length "+arrayLength)
            for (i=0;i&lt;arrayLength;i++){
                try {
                  console.log("Id "+boxesArray[i].id);
                  var selectedDiv=document.getElementById(boxesArray[i].id);
              if(selectedDiv != null){
            	selectedDiv.style.background=color;
            	selectedDiv.style.backgroundColor=color;              
                selectedDiv.style.opacity=0.2;}
                } catch (ex){
                	console.log("onHoverHandler i "+ex);
                }
            }
            boxesArray=new Array();
    }
  
    function keyupHandler(){
       try {
         if (event.keyCode==67){
         	document.getElementById('checkInput').checked=!document.getElementById('checkInput').checked;
            if (document.getElementById('checkInput').checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}

            var divArray= contentDiv.getElementsByClassName("n");
        	var i;
        	for (i in divArray) {
          		var divWithText = divArray[i];
      			if (document.getElementById('checkInput').checked) {
              		divWithText.style.opacity="0";
        		} else {
              		divWithText.style.opacity="1";
        		}
        	}
         }
       } catch (e){
         console.log("keyupHandler "+e);
       }
    }
  
    function preprocessAppendOrder() {
        var appendOrder = 0;
        var controllers = Answers.getTaggingControllers();
        controllers.forEach(function(controller) {
            var $tags = DocumentContainer.getControllerTag(controller);
            if ($tags.length) {
                for (var i = 0, l = $tags.length; i &lt; l; i++) {
                    $tags.eq(i).attr('appendorder', nextAppendOrder());
                }
            }
        });
       
        function nextAppendOrder () {
            return ++appendOrder;
        }
    }
&lt;/script&gt;

&lt;@instructions title="&lt;h2&gt;[Standard] Document Tagging Sample [2018-09-10 12:35:06][Standard+TOOD Minimap]&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;Original: &lt;a href="${question.data.original_document_url} " data-mce-href="${question.data.original_document_url}"&gt;${question.data.original_document_url} &lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                                    <name>[Standard] Document Tagging Sample [2018-09-10 12:35:06][Standard+TOOD Minimap]</name>
                                                    <origination>CREATED_AUTOMATICALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>TASK</type>
                                                    <uuid>fc9f7a44-2007-45a9-bce8-88d8bb39f97c</uuid>
                                                    <version>
                                                        <componentUuid>2d37cce6-834a-4362-85fb-002cc8bbd4eb</componentUuid>
                                                        <incrementalVersion>1.1</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                        <versionUuid>cd715129-b77e-4aaa-be96-07f88cbf1cc5</versionUuid>
                                                    </version>
                                                </template>
                                            </templates>
                                            <title>[Standard] Document Tagging Sample [2018-09-10 12:35:06][Standard+TOOD Minimap]</title>
                                            <useCommonHitCoordinates>false</useCommonHitCoordinates>
                                            <uuid>3a1811e6-50e0-465a-9b48-ca9bb01c4f63</uuid>
                                            <version>
                                                <componentUuid>db23f783-075e-468c-94ff-c96d416697df</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T08:50:08Z</lastModified>
                                                <versionUuid>709a811c-cd34-49e8-b14c-0ea3b0a06876</versionUuid>
                                            </version>
                                            <workSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>HUMAN</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:06Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                                                </version>
                                                <answers/>
                                                <businessRules>
                                                    <businessRule>
                                                        <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                        <name>Start with one assignment 1+0 pay all</name>
                                                        <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                                        <ruleType>DROOLS</ruleType>
                                                        <ruleTypeUI>Adjudication</ruleTypeUI>
                                                        <template>
                                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                            <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                            <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                            <params>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>80</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                                    <name>Normal accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>CHECK_EVERY</code>
                                                                    <defaultValue>5</defaultValue>
                                                                    <description>Check every i-th gold question when evaluating qualification score</description>
                                                                    <name>Check every i-th gold question</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_HIT_THRESHOLD</code>
                                                                    <defaultValue>100</defaultValue>
                                                                    <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                                    <name>Percent of correct answers</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>70</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                                    <name>Worst accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAJORITY_VALUE</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Number of correct answers</description>
                                                                    <name>Majority value</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>MAX_ASSIGNMENT_LIMIT</code>
                                                                    <defaultValue>1</defaultValue>
                                                                    <description>Maximum number of assignments</description>
                                                                    <name>Max assignments limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Normal accuracy level upper limit in percents exclusive</description>
                                                                    <name>Normal accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>90</defaultValue>
                                                                    <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                                    <name>Super accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                                    <defaultValue>95</defaultValue>
                                                                    <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                                    <name>Super accuracy level score</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                                    <name>Worst accuracy level upper limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                                <param>
                                                                    <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                                    <defaultValue>75</defaultValue>
                                                                    <description>Normal accuracy level lower limit in percents inclusive</description>
                                                                    <name>Normal accuracy level lower limit</name>
                                                                    <type>INPUT_NUMBER</type>
                                                                </param>
                                                            </params>
                                                        </template>
                                                        <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                                    </businessRule>
                                                </businessRules>
                                                <isPrivate>false</isPrivate>
                                                <items>
                                                    <item>
                                                        <type>TIME_PER_ASSIGNMENT</type>
                                                        <value>1800000</value>
                                                    </item>
                                                    <item>
                                                        <type>TITLE</type>
                                                        <value>Miscellaneous Tasks</value>
                                                    </item>
                                                    <item>
                                                        <type>AUTOMATICALLY_APPROVED</type>
                                                        <value>432000000</value>
                                                    </item>
                                                    <item>
                                                        <type>HIT_EXPIRES_IN</type>
                                                        <value>2592000000</value>
                                                    </item>
                                                    <item>
                                                        <type>RECOMMENDATION_TAGS</type>
                                                        <value>["information_extraction"]</value>
                                                    </item>
                                                </items>
                                                <template>
                                                    <code></code>
                                                    <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                                                    </version>
                                                </template>
                                            </workSetting>
                                        </question>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[Standard] Document Tagging Sample [2018-09-10 12:35:06][Standard+TOOD Minimap]</title>
                                        <type>SINGLE</type>
                                        <uuid>628c73d9-23d1-4efe-934f-a92ad813e297</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>3424e461-b88f-4525-8698-99931e010169</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T08:50:08Z</lastModified>
                                            <versionUuid>6a8273d0-380c-4036-8031-796028805886</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>4</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>88e5de28-5cd5-43d8-a3fa-cca50f4c4bdb</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>87c23b01-e23e-46cc-b245-fdc4728aad42</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  	
&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		result = new JsonSlurper().parseText(ocr_json.toString());
		
		if(result.xml != null) {
			ocr_document_url = result.xml.ocr_standard_document_url;
		} else if(result.xmlForCorrectedImage != null) {
			ocr_document_url = result.xmlForCorrectedImage.ocr_standard_document_url;
		} else if(result.html != null) {
			ocr_document_url = result.html.ocr_standard_document_url;
		} else if(result.txt != null) {
			ocr_document_url = result.txt.ocr_standard_document_url;
		} else {
			ocr_document_url = result.pdfSearchable.ocr_standard_document_url;
		}	
	]]&gt;&lt;/script&gt;
  
	&lt;export include-original-data="true"&gt;
    	&lt;single-column name="ocr_document_url" value="${ocr_document_url}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>a669ad81-66c4-4bc7-a8dc-0273b3d6e459</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[Standard] Prepare URL[Minimap]</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>a669ad81-66c4-4bc7-a8dc-0273b3d6e459</uuid>
                                            <version>
                                                <componentUuid>d2a5aa0d-4c69-450d-9ba2-54480e45ddc9</componentUuid>
                                                <incrementalVersion>1.1</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T09:19:46Z</lastModified>
                                                <versionUuid>e6ca1d36-b691-4d93-a176-026d3a49a90a</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[Standard] Prepare URL[Minimap]</title>
                                        <type>SINGLE</type>
                                        <uuid>5873e204-ebab-4618-8ff2-cb47d4ac6a82</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>6325ed77-2c10-4eb7-a36f-e0a2e5ce2b43</componentUuid>
                                            <incrementalVersion>1.2</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T09:19:46Z</lastModified>
                                            <versionUuid>a1aded18-f263-4c0f-bfa5-b5d7e1de5fed</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>5</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>ee55a024-7cb1-4804-894f-438caa44da98</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>83cae498-b3df-4f67-a51b-e5a1fcb512d3</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  	
  	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		result = new JsonSlurper().parseText(ocr_json.toString());
		ocr_document_url = result.xmlForCorrectedImage.ocr_tood_document_url;
	]]&gt;&lt;/script&gt;
  
	&lt;export include-original-data="true"&gt;
    	&lt;single-column name="ocr_document_url" value="${ocr_document_url}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>14505231-5f2d-4893-8c73-4c7c4bad26b1</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] Prepare URL[Minimap]</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>14505231-5f2d-4893-8c73-4c7c4bad26b1</uuid>
                                            <version>
                                                <componentUuid>5962c726-4e9d-4d30-8398-d7787a197226</componentUuid>
                                                <incrementalVersion>1.2</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-09-25T09:19:46Z</lastModified>
                                                <versionUuid>57995596-db7f-4ac6-86dc-4898f662836c</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] Prepare URL[Minimap]</title>
                                        <type>SINGLE</type>
                                        <uuid>bdad90ac-16d3-4f92-b4ad-b1a6d6e29b26</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>b54f2e7a-c70a-477a-beed-1043ce293645</componentUuid>
                                            <incrementalVersion>1.3</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T09:19:46Z</lastModified>
                                            <versionUuid>7dc616ce-1882-4cc1-834f-d18233e0727e</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>6</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>443a24b7-7166-4ba5-888f-ff91838ec83e</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <businessRule>
                                        <content>package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;
import org.slf4j.Logger;
import java.util.Map;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.ArrayList;
import com.freedomoss.requester.dto.SubmissionResultDTO;

#declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params



rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:CompositeRuleContext(initialized == false);
	then
		$ctx.updateWorkingMemory();
		# move to business rules
		$ctx.logExecutedRule(kcontext.getRule().getName());
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end</content>
                                        <name>Business Process: End Rule</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <uuid>31f4240a-0fbd-4f51-b03f-9ef8600a5c1e</uuid>
                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

    &lt;var-def name="exportType"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_type")}'&gt;
                &lt;template&gt;${_sys_export_type}&lt;/template&gt;
            &lt;/if&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="exportColumns"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_columns")}'&gt;
                &lt;template&gt;${_sys_export_columns}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="columnNameCase"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_column_name_case")}'&gt;
                &lt;template&gt;${_sys_column_name_case}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;keep&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="dataOnly"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_data_only")}'&gt;
                &lt;template&gt;${_sys_data_only}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;true&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="datastoreName"&gt;
        &lt;script return="item.getWrappedObject().getRun().getDatastoreName()" /&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
        &lt;if condition="${!datastoreName.isEmpty()}"&gt;
            &lt;insert-datastore   datastore-name="${datastoreName}" create="true"&gt;
                &lt;script return="hit_submission_data_item.getWrappedObject().getItemValueMap()"/&gt;
            &lt;/insert-datastore&gt;
        &lt;/if&gt;
    &lt;/case&gt;

    &lt;export include-original-data="true"
            export-type="${exportType}"
            export-columns="${exportColumns}"
            column-name-case="${columnNameCase}"
            data-only="${dataOnly}"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description>Default machine campaign for end step.</description>
                                            <includedConfigs/>
                                            <inclusionCode>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</inclusionCode>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <name>Final Results</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</uuid>
                                            <version>
                                                <componentUuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-05-28T11:12:21Z</lastModified>
                                                <versionUuid>04cccd58-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>100</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Percents</streamValueType>
                                        <title>Final Results</title>
                                        <type>SINGLE</type>
                                        <uuid>af4c8905-26dd-4120-b208-39ad3530ffc6</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>041df7e3-6268-11e8-97c5-0ae8ba3240ae</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-05-28T11:12:21Z</lastModified>
                                            <versionUuid>04ccea14-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>7</stepIndex>
                                    <stepPosition>END</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>f5414910-629c-43c6-b58e-8bee11c139bd</uuid>
                                </campaignMap>
                            </campaignMaps>
                            <campaigns/>
                            <compositeCampaignVersion>NEW_WORKFLOW</compositeCampaignVersion>
                            <compositeStructureXml>&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id="0"/&gt;&lt;mxCell id="1" parent="0"/&gt;&lt;Start id="2" name="Start" type="start"&gt;&lt;mxCell parent="1" style="start" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" y="14.0"/&gt;&lt;/mxCell&gt;&lt;/Start&gt;&lt;End campaignMapUUID="f5414910-629c-43c6-b58e-8bee11c139bd" id="143" name="End" type="end"&gt;&lt;mxCell parent="1" style="end" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="164.0" y="500.4666748046875"/&gt;&lt;/mxCell&gt;&lt;/End&gt;&lt;Rule id="323" name="OCR Type" ruleUUID="798394d8-e2ce-4759-933f-a57e23279df9" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="170.0" y="168.4666748046875"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link conditional="true" id="325" label="TOOD" name="" outcomeId="TOOD" ruleUUID="798394d8-e2ce-4759-933f-a57e23279df9" type="link"&gt;&lt;mxCell edge="1" parent="1" source="323" style="link" target="331"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="554.0" y="191.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="13.0" y="-28.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;HumanTask automatedCampaignUUID="" automatedUseCaseId="" campaignMapUUID="2bf38ed0-f795-4249-9f26-55deea1d815b" id="327" label="[TOOD][MT][BASE] Tagging Over Original Document [Minimap]" name="[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]" taskUUID="177c3796-d4da-4ed6-96fd-8b2002c67659" type="human_task"&gt;&lt;mxCell parent="1" style="human_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" y="420.00001525878906"/&gt;&lt;/mxCell&gt;&lt;/HumanTask&gt;&lt;HumanTask automatedCampaignUUID="" automatedUseCaseId="" campaignMapUUID="88e5de28-5cd5-43d8-a3fa-cca50f4c4bdb" id="328" label="[Standard][MT][BASE] Document Tagging Sample [Minimap]" name="[Standard] Document Tagging Sample [2018-09-10 12:35:06][Standard+TOOD Minimap]" taskUUID="628c73d9-23d1-4efe-934f-a92ad813e297" type="human_task"&gt;&lt;mxCell parent="1" style="human_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="230.0" y="420.00001525878906"/&gt;&lt;/mxCell&gt;&lt;/HumanTask&gt;&lt;MachineTask campaignMapUUID="443a24b7-7166-4ba5-888f-ff91838ec83e" id="331" name="[TOOD] Prepare URL[Minimap]" taskUUID="bdad90ac-16d3-4f92-b4ad-b1a6d6e29b26" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" y="250.4666748046875"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="ee55a024-7cb1-4804-894f-438caa44da98" id="332" name="[Standard] Prepare URL[Minimap]" taskUUID="5873e204-ebab-4618-8ff2-cb47d4ac6a82" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="230.0" y="250.4666748046875"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="334" label="Standard" name="" outcomeId="Standard" ruleUUID="798394d8-e2ce-4759-933f-a57e23279df9" type="link"&gt;&lt;mxCell edge="1" parent="1" source="323" style="link" target="332"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="554.0" y="191.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="-8.0" y="-28.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="336" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="87c23b01-e23e-46cc-b245-fdc4728aad42" type="link"&gt;&lt;mxCell edge="1" parent="1" source="332" style="link" target="328"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="-1269.3939393939395" y="593.030303030303"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="425" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="3bddf56e-852f-49d9-b694-9c1d79f816fe" type="link"&gt;&lt;mxCell edge="1" parent="1" source="327" style="link" target="143"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="80.0" y="516.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="426" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="83cae498-b3df-4f67-a51b-e5a1fcb512d3" type="link"&gt;&lt;mxCell edge="1" parent="1" source="331" style="link" target="327"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="targetPoint" x="-250.0" y="1080.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="80.0" y="350.0"/&gt;&lt;mxPoint x="80.0" y="350.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="515" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="675aafdd-263d-45a2-9544-2ebace3257cf" type="link"&gt;&lt;mxCell edge="1" parent="1" source="328" style="link" target="143"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="310.0" y="517.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="372fd5dc-cd5e-4939-a0dc-5dc4813aa351" id="542" name="The Place for Settings" taskUUID="788b0beb-e499-4a39-97bf-f61f77c82e7a" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="122.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="f3c8a64e-9841-4d44-fc32-ab41e4e65287" id="543" name="The Place for OCR UseCase" taskUUID="801dccc6-3ddc-4462-971d-ea41484f682b" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="420.0" y="90.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="544" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="2" style="link" target="542"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="545" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="b30bef61-4832-4f25-fc8a-6b7dca4a0838" type="link"&gt;&lt;mxCell edge="1" parent="1" source="542" style="link" target="543"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="546" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="543" style="link" target="323"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;</compositeStructureXml>
                            <description>Business Process description</description>
                            <executingType>COMPOSITE</executingType>
                            <goldBucketBlockSize>0</goldBucketBlockSize>
                            <goldRatio>0</goldRatio>
                            <goldSource>Empty</goldSource>
                            <goldType>Percentage</goldType>
                            <moderation>false</moderation>
                            <origination>CREATED_AUTOMATICALLY</origination>
                            <question>
                                <answers>
                                    <answer>
                                        <allowNA>false</allowNA>
                                        <answer>TOOD</answer>
                                        <answerCode>ocr_document_url</answerCode>
                                        <answerHtml></answerHtml>
                                        <answerTypeObject>
                                            <answerTypeGroup>ADVANCED</answerTypeGroup>
                                            <code>INFO_EXTRACTION</code>
                                            <description></description>
                                            <optionsAvailable>true</optionsAvailable>
                                            <showDefaultValue>true</showDefaultValue>
                                            <showForFieldScheme>false</showForFieldScheme>
                                            <showForHumanTask>true</showForHumanTask>
                                            <showForMachineConfig>false</showForMachineConfig>
                                            <title>Information Extraction</title>
                                            <valueType>SINGLEVALUE</valueType>
                                        </answerTypeObject>
                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                        <autocompleteField>false</autocompleteField>
                                        <category></category>
                                        <constantable>false</constantable>
                                        <defaultValue></defaultValue>
                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                        <htmlClasses></htmlClasses>
                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                        <letCustomValues>false</letCustomValues>
                                        <manualField>false</manualField>
                                        <multiValue>false</multiValue>
                                        <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                        <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                        <percentRequired>false</percentRequired>
                                        <range>false</range>
                                        <required>false</required>
                                        <sequenceNumber>1</sequenceNumber>
                                        <useBlocks>false</useBlocks>
                                        <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                        <allowNA>false</allowNA>
                                        <answer>Text</answer>
                                        <answerCode>answ_test_text</answerCode>
                                        <answerHtml></answerHtml>
                                        <answerTypeObject>
                                            <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                            <code>FREE_TEXT</code>
                                            <description></description>
                                            <optionsAvailable>false</optionsAvailable>
                                            <showDefaultValue>true</showDefaultValue>
                                            <showForFieldScheme>true</showForFieldScheme>
                                            <showForHumanTask>true</showForHumanTask>
                                            <showForMachineConfig>true</showForMachineConfig>
                                            <title>Free Text</title>
                                            <valueType>SINGLEVALUE</valueType>
                                        </answerTypeObject>
                                        <appendDataStoreOptions>false</appendDataStoreOptions>
                                        <autocompleteField>false</autocompleteField>
                                        <constantable>false</constantable>
                                        <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                        <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                        <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                        <hotKey>T</hotKey>
                                        <lastModified>2018-09-25T08:50:08Z</lastModified>
                                        <letCustomValues>false</letCustomValues>
                                        <manualField>false</manualField>
                                        <multiValue>false</multiValue>
                                        <parentAnswer>
                                            <allowNA>false</allowNA>
                                            <answer>TOOD</answer>
                                            <answerCode>ocr_document_url</answerCode>
                                            <answerHtml></answerHtml>
                                            <answerTypeObject>
                                                <answerTypeGroup>ADVANCED</answerTypeGroup>
                                                <code>INFO_EXTRACTION</code>
                                                <description></description>
                                                <optionsAvailable>true</optionsAvailable>
                                                <showDefaultValue>true</showDefaultValue>
                                                <showForFieldScheme>false</showForFieldScheme>
                                                <showForHumanTask>true</showForHumanTask>
                                                <showForMachineConfig>false</showForMachineConfig>
                                                <title>Information Extraction</title>
                                                <valueType>SINGLEVALUE</valueType>
                                            </answerTypeObject>
                                            <appendDataStoreOptions>false</appendDataStoreOptions>
                                            <autocompleteField>false</autocompleteField>
                                            <category></category>
                                            <constantable>false</constantable>
                                            <defaultValue></defaultValue>
                                            <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                            <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                            <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                            <htmlClasses></htmlClasses>
                                            <lastModified>2018-09-25T08:50:08Z</lastModified>
                                            <letCustomValues>false</letCustomValues>
                                            <manualField>false</manualField>
                                            <multiValue>false</multiValue>
                                            <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                            <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                            <percentRequired>false</percentRequired>
                                            <range>false</range>
                                            <required>false</required>
                                            <sequenceNumber>1</sequenceNumber>
                                            <useBlocks>false</useBlocks>
                                            <useEmptyCell>false</useEmptyCell>
                                        </parentAnswer>
                                        <percentRequired>false</percentRequired>
                                        <range>false</range>
                                        <required>true</required>
                                        <sequenceNumber>2</sequenceNumber>
                                        <useBlocks>false</useBlocks>
                                        <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                </answers>
                                <assignmentDuration>1800000</assignmentDuration>
                                <assignmentLimit>1</assignmentLimit>
                                <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                                <autoApprovalDelay>432000000</autoApprovalDelay>
                                <automaticallyProcessed>0</automaticallyProcessed>
                                <blockSize>1</blockSize>
                                <constQualifiedWorkers>false</constQualifiedWorkers>
                                <currency>USD</currency>
                                <description>Miscellaneous Tasks</description>
                                <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                                <expiredTime>2592000000</expiredTime>
                                <faqItems/>
                                <frameHeight>2500</frameHeight>
                                <geolocationEnabled>false</geolocationEnabled>
                                <instructionItems/>
                                <keywords>Miscellaneous Tasks</keywords>
                                <maxAssignments>1</maxAssignments>
                                <moderation>false</moderation>
                                <moderationFlag>false</moderationFlag>
                                <origination>CREATED_MANUALLY</origination>
                                <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                                <qualificationInstruction></qualificationInstruction>
                                <qualificationRequirements/>
                                <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                                <qualificationTasks>20</qualificationTasks>
                                <qualificationTraining>false</qualificationTraining>
                                <questionRuleMaps>
                                    <questionRuleMap>
                                        <businessRule>
                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                            <name>Start with one assignment 1+0 pay all</name>
                                            <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                            <ruleType>DROOLS</ruleType>
                                            <ruleTypeUI>Adjudication</ruleTypeUI>
                                            <template>
                                                <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                <params>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>80</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                        <name>Normal accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>CHECK_EVERY</code>
                                                        <defaultValue>5</defaultValue>
                                                        <description>Check every i-th gold question when evaluating qualification score</description>
                                                        <name>Check every i-th gold question</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAJORITY_HIT_THRESHOLD</code>
                                                        <defaultValue>100</defaultValue>
                                                        <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                        <name>Percent of correct answers</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>70</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                        <name>Worst accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAJORITY_VALUE</code>
                                                        <defaultValue>1</defaultValue>
                                                        <description>Number of correct answers</description>
                                                        <name>Majority value</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAX_ASSIGNMENT_LIMIT</code>
                                                        <defaultValue>1</defaultValue>
                                                        <description>Maximum number of assignments</description>
                                                        <name>Max assignments limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                        <defaultValue>90</defaultValue>
                                                        <description>Normal accuracy level upper limit in percents exclusive</description>
                                                        <name>Normal accuracy level upper limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                        <defaultValue>90</defaultValue>
                                                        <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                        <name>Super accuracy level lower limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>95</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                        <name>Super accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                        <defaultValue>75</defaultValue>
                                                        <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                        <name>Worst accuracy level upper limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                        <defaultValue>75</defaultValue>
                                                        <description>Normal accuracy level lower limit in percents inclusive</description>
                                                        <name>Normal accuracy level lower limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                </params>
                                            </template>
                                            <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                            <workflowRuleMode>ADVANCED</workflowRuleMode>
                                        </businessRule>
                                    </questionRuleMap>
                                </questionRuleMaps>
                                <radiusSelector>ExactLocation</radiusSelector>
                                <randomizeAnswers>false</randomizeAnswers>
                                <recursiveThreshold>1</recursiveThreshold>
                                <restrictedCountries/>
                                <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                                <templates>
                                    <template>
                                        <code></code>
                                        <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;
&lt;!-- v 1.9 --&gt;
&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;

&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
 
  
&lt;style type="text/css"&gt;
    document {
        background: none !important;
        overflow: visible!important;
        padding: 0 !important;
        position: absolute !important;
        left: 0;
        top: 0;
        width: 100%;
    }
    page {
        box-shadow: none !important;
        background: none !important;
        padding: 0 !important;
        margin: 0 !important;
        overflow: visible!important;
        height: 0 !important;
    }
    cell, document td {
        border: 0 !important;
    }
    block[blocktype="Picture"] {
        opacity: 1 !important;
        background: none !important;
    }
    .hidden_field {display:none; }
    .hidden {display:inline-block !important;}
    .extraction-content {padding: 0 !important;}
  	.ie-view-source {
  		display: none;
  	}
  	.ie-view-source + .ie-zoom-in-zoom-out-separator {
  		display: none !important;
  	}
  	.popup-original-document.ml10 {
  		margin-left: 0 !important;
  	}
    .opacity-control {
        float: left;
        line-height: 40px;
        margin-left: 3px;
    }
    .opacity-control span {
        display: inline-block;
    }
    #rangeInput {
        width: 100px;
        box-shadow: none;
        margin: -1px 0 0 10px;
        border: 0;
    }
    #rangeInput::-moz-focus-outer {
        border: 0;
    }
.dom-minimap-scroll {
  background-color: rgba(255,255,255,0.15);
}
.dom-minimap-section {
    background-color: rgba(255,255,255,0.15);
    color: white;
    font-size: 11px;
    padding-left: 2px;
    border-radius: 2px;
    left: 5px; right: 5px;
}
.dom-minimap-section:hover {
  background-color: #e6e6e6;
}  
&lt;/style&gt;
  

  
&lt;script type="text/javascript"&gt;
    $(document).ready(function() {
        
        if (document.getElementsByClassName('submit-btn').length) {
            var originalSubmitEvent = document.getElementsByClassName('submit-btn')[0].onclick;
            document.getElementsByClassName('submit-btn')[0].onclick = function(){
                preprocessAppendOrder();
                originalSubmitEvent();
            }
        }
       
        var originalOnTextContainerLoad = ExtractionAnswerController.prototype.onTextContainerLoad;
        ExtractionAnswerController.prototype.onTextContainerLoad = function() {
            try {
            	originalOnTextContainerLoad.apply(this, arguments);
            	var $textContainer = ExtractionAnswer.getExtractionController().$textContainer;
            	if ($textContainer.find('document')) {
                	initHandlers();
                	initOpacity();
                	window.setTimeout(setMinimapSizes,100);
                	initButtons();
      			}
            } catch (e){
              console.log("onTextContainerLoad "+e);
            }
        };
    });
  
    var OpacityElements = {
        image: $([]),
        textContainer: $([])
    };
  
    function initHandlers(){
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
          	divTop = scrollingDiv.offsetTop;
            divLeft = scrollingDiv.offsetLeft;
            while (scrollingDiv.offsetParent) {
            	scrollingDiv = scrollingDiv.offsetParent;
                divTop += scrollingDiv.offsetTop;
                divLeft+=scrollingDiv.offsetLeft;
            }
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
            contentDiv=document.getElementsByClassName('extraction-content')[0];
            divArray = scrollingDiv.getElementsByTagName("div");
            document.onkeyup=keyupHandler;
            scrollingDiv.onkeyup=keyupHandler;
            scrollingDiv.onmousedown = mousedown;
    }
  
  
function getCursorPosition(e)
{
  try {
	e = e || window.event;
	if (e)
    	{
    	if (e.pageX || e.pageX == 0) return [(e.pageX-mainLeft)/zoomFactor,(e.pageY-mainTop)/zoomFactor+internalDiv.scrollTop];
    		var dE = document.documentElement || {};
    		var dB = document.body || {};
    		if ((e.clientX || e.clientX == 0) &amp;&amp; ((dB.scrollLeft || dB.scrollLeft == 0) || (dE.clientLeft || dE.clientLeft == 0))) 
          		return [(e.clientX - mainLeft + (dE.scrollLeft || dB.scrollLeft || 0) - (dE.clientLeft || 0))/zoomFactor,(e.clientY -mainTop + (dE.scrollTop || dB.scrollTop || 0) - (dE.clientTop || 0))/zoomFactor+internalDiv.scrollTop];
    	}
  } catch (e){
  	console.log("getCursorPosition "+e);
  }
	return null;
}

function mousedown(e)
{
  try {
	divArray=contentDiv.getElementsByTagName('DIV');
	var mxy = getCursorPosition(e);
	var box = document.getElementById("sel_box");
	box.orig_x = mxy[0];
	box.orig_y = mxy[1];
	box.style.left = mxy[0]+"px";
	box.style.top = mxy[1]+"px";
	box.style.display = "block";
	scrollingDiv.onmousemove = mousemove;
	scrollingDiv.onmouseup = mouseup;
	console.log("Start left "+box.style.left+" top "+box.style.top);  
  } catch (e){
     console.log("mousedown "+e);
  }
}

function mousemove(e)
{
    try {
		var mxy = getCursorPosition(e);
		var box = document.getElementById("sel_box");
        if (mxy[0]-box.orig_x &gt;0){
			box.style.width = (mxy[0]-box.orig_x)+"px";
        } else {
       		box.style.left = mxy[0]+"px";
			box.style.width = (box.orig_x-mxy[0])+"px";
        }
        if (mxy[1]-box.orig_y&gt;0){
			box.style.height = (mxy[1]-box.orig_y)+"px";
        } else {
			box.style.top = mxy[1]+"px";
			box.style.height = (box.orig_y-mxy[1])+"px";
        }
    } catch (e){
     	console.log("mousemove "+e);
    }
}

var counter=0;
var counterIndexesArray=0;  
var values; 
var indexesArray=new Array();
var isSizesSet=false;  

function mouseup(e)
{
    try {
	var box = document.getElementById("sel_box");
    var tops=pageTop-mainTop;
	var mxy = getCursorPosition(e);
	var top=Math.min(mxy[1],box.orig_y)/scaleFactor;
	var bottom=Math.max(mxy[1],box.orig_y)/scaleFactor;
	var left=Math.min(mxy[0],box.orig_x)/scaleFactor;
	var right=Math.max(mxy[0],box.orig_x)/scaleFactor;
    if (xminus&gt;0){
    	left=left-xminus*scaleFactor;
        right=right-xminus*scaleFactor;
    }  
    var textContent="";
    var flag=true;
     var length = divArray.length;
    for (var i=0;i&lt;length; i++) {
    	try {
        	var divWithText = divArray[i];
            var divTop1 = divWithText.offsetTop;
            var divLeft1 = divWithText.offsetLeft;
            var divWithText = divArray[i];
                    var width=divWithText.style.width.replace("px","")*scaleFactor;
                    var height=divWithText.style.height.replace("px","")*scaleFactor;
                    divTop1=divTop1+height/2;
                    divLeft1=divLeft1+width/2;  
            if ((divTop1&gt;top)&amp;&amp;(divTop1&lt;bottom)&amp;&amp;(divLeft1&gt;left)&amp;&amp;(divLeft1&lt;right)){
				textContent=textContent+divWithText.innerText+" ";
                var textRange=document.createRange();
                textRange.selectNode(divWithText);
                values=DocumentContainer.getRangeIndexes(textRange);
                if (indexesArray.length&gt;0){
		        	if (indexesArray[counterIndexesArray-1].endIndex+1==values.startIndex){
  		            	indexesArray[counterIndexesArray-1].endIndex=values.endIndex;
                        counterIndexesArray--;
       			    } else {
                    	indexesArray[counterIndexesArray]=values;
                    }
                } else {
                	indexesArray[counterIndexesArray]=values;
                }
                        
                counterIndexesArray++;
                console.log("Values "+values);
           }
        } catch (e){
            console.log("in loop "+e);
        }
    }
  
    var textId='text_id_'+ counter; 
    box.id='id_'+counter;
    box.className='selection_id';    
    counter++;
    boxesArray[boxesArray.length]=box;    
    box.outerHTML=box.outerHTML+'&lt;div style="position: absolute; border: 1px solid rgba(27, 138, 0, .2);z-index: 100;background: rgba(27, 138, 0, .2);" id="sel_box"&gt;&lt;/div&gt;';
    document.onmousemove = function(){};
    document.onmouseup = function(){};
    } catch (ex){
    	console.log("mouseup "+ex);
    }
}
  
    function initButtons(){
            var plusButton=document.getElementsByClassName('ie-zoom-in')[0];
            var minusButton=document.getElementsByClassName('ie-zoom-out')[0];
            if (minusButton!=null){  
                minusButton.onclick=zoomOut1;
            }  
            if (plusButton!=null){  
                plusButton.onclick=zoomIn2;
            }
    }
  
    var zooming=0;
    var zoomingFactor=1;
    
    function tagCoordinatesUpdate(factorChange){
		var selections=document.getElementsByClassName('selection_id');
        var size=selections.length;
        for (var i=0;i&lt;size;i++){
        	var selectionDiv=selections[i];
            try {
            var width=selectionDiv.style.width.replace('px','');
            if (width&gt;0){
                var left=selectionDiv.style.left.replace('px','');
                var top=selectionDiv.style.top.replace('px','');
                var height=selectionDiv.style.height.replace('px','');
	            console.log("Left "+left+" top "+top+" width "+width+" height "+height);
                left=left*factorChange;
                top=top*factorChange;
                height=height*factorChange;
                width=width*factorChange;
            	selectionDiv.style.left=left+'px';
            	selectionDiv.style.top=top+'px';
            	selectionDiv.style.width=width+'px';
            	selectionDiv.style.height=height+'px';
            }
            } catch (e){
            	console.log("tagCoordinatesUpdate "+e);
            }
        }
    }
  
    function zoomIn2(e){
        zoomFactor=1;//zoomFactor*1.1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor*1.1;
        zoom(updatedScale, scaleFactor, false);
        tagCoordinatesUpdate(1.1);
        scaleFactor=updatedScale;
        minimapSizeZoom(1.1);
    }
  
    function zoomOut1(e){
        zoomFactor=1;//zoomFactor/1.1;
        if (zoomFactor&lt;1)
          zoomFactor=1;
        oldScale=scaleFactor;
        var updatedScale=scaleFactor/1.1;
        zoom(updatedScale, scaleFactor, true);
        tagCoordinatesUpdate(1/1.1);
    	scaleFactor=updatedScale;
        minimapSizeZoom(1/1.1);
    }
  
  	function minimapSizeZoom(factor){
        scrollingDiv.children[0].style.transform='scaleX(1) scaleY(1) translateZ(0px)';
        var divScale=scrollingDiv.children[0].style.transform.substring(7,scrollingDiv.children[0].style.transform.indexOf(")"));
        var scale=divScale*scaleFactor;
    	var main=document.getElementsByTagName('MAIN')[0];
        var scrollingDivWidth=initialMainWidth+90;
        var aside=document.getElementsByTagName('ASIDE')[0];
        scrollingDiv.style.width=scrollingDivWidth+'px';
        scrollingDiv.style.maxWidth=scrollingDivWidth+'px';
        var widthBars=(mainWidth-main.clientWidth)*scaleFactor/initialScale;
        var heightBars=(mainHeight-main.clientHeight)*scaleFactor/initialScale;
      
        var scaledWidth=initialMainWidth/divScale;
        var scaledHeight=initialMainHeight/divScale;
        main.style.width=scaledWidth+'px';
        main.style.maxWidth=scaledWidth+'px';
        main.style.height=scaledHeight+'px';
        main.style.maxHeight=scaledHeight+'px';
        aside.style.left=scaledWidth+'px';
        aside.style.height=scaledHeight+'px';
        aside.style.maxHeight=scaledHeight+'px';
        mainWidth=scaledWidth;
        mainHeight=scaledHeight;
    }  
  
    function zoom(scale, oldScale, isIn){
        var pages=scrollingDiv.getElementsByTagName('PAGE');
        for (var i=0;i&lt;pages.length;i++){
        	var $page = $('page').eq(i);
            $page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
        }
    }
  
    function setMinimapSizes(){
      if (!isSizesSet){
        isSizesSet=true;
                var main=document.getElementsByTagName('MAIN')[0];
                var mainWidth=scrollingDiv.clientWidth-90;

                var aside=document.getElementsByTagName('ASIDE')[0];
                var minimapImgs=main.getElementsByTagName('IMG');
                var pages=scrollingDiv.getElementsByTagName('PAGE');
                var dds=scrollingDiv.getElementsByTagName('DD');
                var dls=scrollingDiv.getElementsByTagName('DL');
                var dts=scrollingDiv.getElementsByTagName('DT');
                var numberOfImages=minimapImgs.length;
      			var internalDivs="";
                var topPosition=3;
                for (var i=0;i&lt;numberOfImages;i++){
                    var pageNumber=i+1;
                    var minimapImg=minimapImgs[i];
                    minimapImg.draggable=false;
                    dls[i].style.height=scrollingDiv.clientHeight+"px";
                    dls[i].style.width=mainWidth+"px";
                    dds[i].style.height=scrollingDiv.clientHeight+"px";
                    dds[i].style.width=mainWidth+"px";
                    var ddHeight=dds[i].style.height.replace('px','');
                	var $page = $('page').eq(i);
                	var scale = parseFloat((1/(parseInt($page.attr('width'))/($page.width()-$('aside').width()))).toFixed(1));
                    xminus=($page.attr('width')-$page.width())*scale/2;
                    var scaledDDHeight=ddHeight*scale;
	                scaleFactor=scale;
                    console.log('xminus '+xminus);
                    console.log("scaleFactor "+scaleFactor);
      				$page.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
                    var xmv=-xminus;
                    var value=xmv+'px';
                    var pageWidth=$page.attr('width');
                    var pageHeight=$page.attr('height');
                    var height=pageHeight/(pageWidth/70);
                    var top=topPosition+3;
                    internalDivs=internalDivs+'&lt;a href="#page-'+i+'" &gt;&lt;div title="'+pageNumber+'" style="top:'+top+'px;height:'+height+'px;" class="dom-minimap-section unselectable"&gt;'+pageNumber+"&lt;img class='minimap-image' src='"+minimapImg.src+"' style='width:70px'/&gt;"+'&lt;/div&gt;&lt;/a&gt;';
					topPosition=top+height;
                    var page=pages[i];
                    page.innerHTML='&lt;a name="page-'+i+'"&gt;&lt;/a&gt;'+page.innerHTML;
                 }
                var innerHTML='&lt;div style="position:relative;height: 100%;"&gt;'+internalDivs+'&lt;div style="bottom:100%" class="dom-minimap-scroll dom-minimap-scroll-top"&gt;&lt;/div&gt;&lt;div class="dom-minimap-scroll dom-minimap-scroll-bottom"&gt;&lt;/div&gt;&lt;/div&gt;';
      			aside.innerHTML=innerHTML;
      			main.innerHTML=main.innerHTML+'&lt;div style="position: absolute; border: 1px solid rgba(27, 138, 0, .2);z-index: 100;background: rgba(27, 138, 0, .2);" id="sel_box"&gt;&lt;/div&gt;';
                var miniMapLeft=scrollingDiv.clientWidth-90;
                var miniMapRight=scrollingDiv.clientWidth;
      			aside.style.overflowY='scroll';
                main.style.width=mainWidth;
                main.style.maxWidth=mainWidth;
                main.style.height=scrollingDiv.clientHeight+"px";
                aside.style.left=miniMapLeft;
                aside.style.right=0;
                aside.style.height=scrollingDiv.clientHeight+"px";
      			internalDiv=document.getElementById('content');
        		var pageElement=document.getElementsByTagName('page')[0];
          		mainTop = internalDiv.offsetTop;
                pageTop=pageElement.offsetTop;
            	mainLeft = internalDiv.offsetLeft;
            	while (internalDiv.offsetParent) {
                    console.log("Name "+internalDiv.tagName+" " +internalDiv.className+" Opacity " +internalDiv.style.opacity+" Hidden "+internalDiv.getAttribute('hidden')+" offsetTop "+internalDiv.offsetTop);
            		internalDiv = internalDiv.offsetParent;
                	mainTop += internalDiv.offsetTop;
                	mainLeft+=internalDiv.offsetLeft;
            	}
            	while (pageElement.offsetParent) {
            		pageElement = pageElement.offsetParent;
                	pageTop += pageElement.offsetTop;
            	}
				internalDiv=document.getElementById('content');
        		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        		var allButtonContainers=document.getElementsByClassName('ie-remove-all-tags');
                var containers=document.getElementsByClassName('ie-field-tag-button-container');
                var containersLength=containers.length;
                for (var i=0;i&lt;containersLength;i++){
                	containers[i].onclick=onHoverHandler;
                    containers[i].data_subanswer_code=document.getElementsByClassName('ie-body-hover-container')[i].children[0].getAttribute('data-subanswer-code');
                    buttonContainers[i].onclick=removeTag; 
                    allButtonContainers[i].onclick=removeTags; 
                }
                spawnWorker();
      }
    }

    function removeTags(){
        console.log("removeTags");
		var buttonContainers=document.getElementsByClassName('ie-body-remove-container');
        var buttonContainersSize=buttonContainers.length;
		for (var i=0;i&lt;buttonContainersSize;i++){
          try {
        	var buttonContainer=buttonContainers[i];
            buttonContainer.click();
          } catch (ex){
          	console.log("removeTags "+ex);
          }
        }
    }
  
  	function removeTag(){
        console.log("removeTag");
        this.children[0].click();
    	var backgroundColor=this.parentElement.parentElement.children[0].children[0].children[0].style.backgroundColor;
      	var selectionDivs=document.getElementsByClassName("selection_id");
      	var selectionDivsSize=selectionDivs.length;
        console.log("selectionDivsSize "+selectionDivsSize);
        for (var i in selectionDivs){
          try {
        	var selectionDiv=selectionDivs[i];
            console.log(selectionDiv.outerHTML);
	        console.log(selectionDiv.style.background+" "+backgroundColor);
            if (selectionDiv.style.background==backgroundColor){
          		selectionDiv.parentElement.removeChild(selectionDiv);
            }
          } catch (e){
          }
        }
    }

  function spawnWorker(){
        var i;  
    	var blob = new Blob(["onmessage = function(e) {" +
                                "var jsonDataObject=e.data;"+
                                "var widthDiff=jsonDataObject.scrollWidth-jsonDataObject.width;"+
                                "var heightDiff=jsonDataObject.scrollHeight-jsonDataObject.height;"+
                                "if ((widthDiff&gt;0) || (heightDiff&gt;0)) {"+
                    			"	var updatedFontSizeWidth = jsonDataObject.fontSize * jsonDataObject.width / jsonDataObject.scrollWidth;"+
                    			"	var updatedFontSizeHeight = jsonDataObject.fontSize * jsonDataObject.height / jsonDataObject.scrollHeight;"+
                    			"	var updatedFontSize = Math.min(updatedFontSizeWidth, updatedFontSizeHeight);"+
                                "   var outputDataObject=new Object();"+
                                "   outputDataObject.position=jsonDataObject.position;"+
                             	"	outputDataObject.fontSize=updatedFontSize;"+
		                        "   postMessage(outputDataObject); "+
                    			"}"+
                             "}"]);
		var blobURL = window.URL.createObjectURL(blob);
		var worker = new Worker(blobURL);
        for (i in divArray){
            var divWithText = divArray[i];
            var dataObject=new Object();
          if ((divWithText.className == "n")&amp;&amp;(divWithText.tagName=="DIV")){

          	var divWithTextFontHeight = divWithText.style.fontSize.replace("px", "");
            var divWithTextWidth = divWithText.style.width.replace("px", "");
            var divWithTextScrollWidth = divWithText.scrollWidth;
            var divWithTextHeight = divWithText.style.height.replace("px", "");
            var divWithTextScrollHeight = divWithText.scrollHeight;
          	dataObject.fontSize=divWithTextFontHeight;
          	dataObject.width=divWithTextWidth;
          	dataObject.scrollWidth=divWithTextScrollWidth;
          	dataObject.height=divWithTextHeight;
          	dataObject.scrollHeight=divWithTextScrollHeight;
          	dataObject.position=i;  
    		worker.postMessage(dataObject); // Start the worker.
          } 
        } 
		worker.onmessage = function(e) {
        	var jsonDataObject=e.data;
            divArray[jsonDataObject.position].style.fontSize = jsonDataObject.fontSize + "px";
		};

		window.URL.revokeObjectURL(blobURL);
    }
  
    function onHoverHandler(e){
            var color=this.children[0].style.backgroundColor;
            var controllerName=this.data_subanswer_code;
            var main=document.getElementsByTagName('MAIN')[0];
			var selectedBoxes=main.getElementsByClassName('selection_id');
            var selectedBoxesLength=selectedBoxes.length;
            for (var j=0;j&lt;selectedBoxesLength;j++){
                try {
                var selectedBox=selectedBoxes[j];
                    var parentNode=selectedBox.parentNode;
                    parentNode.removeChild(selectedBox);
                } catch (exe){
                	console.log("onHoverHandler j "+exe);
                }
            }
			var controller = Answers.getSubControllerByCode(controllerName);
            controller.isMultiAnswer=false;
            var i;
      		var length=indexesArray.length; 
            for (i=0; i&lt;length;i++ ){
				SelectionTagger.processTaggingSelection(controller, indexesArray.shift(), e/*{}*/);
            	counterIndexesArray--;
				Appender.append(controller, indexesArray); 
            }
            var arrayLength=boxesArray.length;
            console.log("Array length "+arrayLength)
            for (i=0;i&lt;arrayLength;i++){
                try {
                  console.log("Id "+boxesArray[i].id);
                  var selectedDiv=document.getElementById(boxesArray[i].id);
              if(selectedDiv != null){
            	selectedDiv.style.background=color;
            	selectedDiv.style.backgroundColor=color;              
                selectedDiv.style.opacity=0.2;}
                } catch (ex){
                	console.log("onHoverHandler i "+ex);
                }
            }
            boxesArray=new Array();
    }
  
    function keyupHandler(){
       try {
         if (event.keyCode==67){
         	document.getElementById('checkInput').checked=!document.getElementById('checkInput').checked;
            if (document.getElementById('checkInput').checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}

            var divArray= contentDiv.getElementsByClassName("n");
        	var i;
        	for (i in divArray) {
          		var divWithText = divArray[i];
      			if (document.getElementById('checkInput').checked) {
              		divWithText.style.opacity="0";
        		} else {
              		divWithText.style.opacity="1";
        		}
        	}
         }
       } catch (e){
         console.log("keyupHandler "+e);
       }
    }
  
    var zoomFactor=1;
    var oldScale=1;
    var xminus;
    var yminus;
    var inputElement;
    var boxesArray=new Array();
    var backgroundColors=new Array();
	var scaleFactor;
    var divTop;
    var divLeft;
    var mainTop;
    var mainLeft;
    var pageTop;
    var pageLeft;
    var divArray;
    var scrollingDiv;
    var internalDiv;
    var contentDiv;
    var isComputing = false;
    var counter = 0;
    var isWidthChanged = false;
    var elementSet = new Set();
  
   
    function initOpacity() {
        var template = $('&lt;div class="toolbar-boundary"&gt;&lt;/div&gt;&lt;div class="opacity-control"&gt;&lt;span&gt;Opacity&lt;/span&gt;&lt;input type="range" id="rangeInput" value="10" /&gt;&lt;/div&gt;');
        $('.extraction-search').before(template);
        OpacityElements.image = $('.extraction-content img');
        OpacityElements.textContainer = $('.extraction-content page');
      	OpacityElements.image.css('opacity', 0.1);
        $('#rangeInput').on('input', changeOpacity);
    }
   
    function changeOpacity() {
        var opacity = this.value;
        try {
        	var i;
          	var j;
	        var divArray=contentDiv.getElementsByClassName("n");
    	    var imgArray=contentDiv.getElementsByTagName("IMG");
          	for (j in imgArray){
          		var pageImg=imgArray[j];
            	try {
                   if (pageImg.className!='minimap-image'){
              			pageImg.style.opacity=this.value / 100;
                   }
            	} catch (exe){
            		console.log("changeOpacity internal img "+exe);
            	}
          	}
            for (i in divArray) {
          	var divWithText = divArray[i];
          	try {
	            divWithText.style.borderWidth='3px';
               if (opacity==100) {
                    divWithText.style.color='rgba(0,0,0,0)';
        		} else {
                    divWithText.style.color='black';
              		divWithText.style.opacity="1";
        		}
          	} catch (ex){
          		console.log("changeOpacity internal div "+ex);
          	}
         }
        } catch (e){
	         	console.log("changeOpacity "+e);
        }
    }
   
   
    function preprocessAppendOrder() {
        var appendOrder = 0;
        var controllers = Answers.getTaggingControllers();
        controllers.forEach(function(controller) {
            var $tags = DocumentContainer.getControllerTag(controller);
            if ($tags.length) {
                for (var i = 0, l = $tags.length; i &lt; l; i++) {
                    $tags.eq(i).attr('appendorder', nextAppendOrder());
                }
            }
        });
       
        function nextAppendOrder () {
            return ++appendOrder;
        }
    }
&lt;/script&gt;
  
&lt;@instructions title="&lt;h2&gt;[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;&lt;br data-mce-bogus="1"&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;


&lt;/@hit&gt;</content>
                                        <name>[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]</name>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <status>ACTIVE</status>
                                        <type>TASK</type>
                                        <uuid>76a5e96b-d996-44cc-bf93-91dbb18ae400</uuid>
                                        <version>
                                            <componentUuid>bd910e5d-9525-46b5-a8e3-a181997ccda2</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-09-25T08:50:08Z</lastModified>
                                            <versionUuid>d5fa0c37-3846-4b8e-8b8f-404eb8d9716a</versionUuid>
                                        </version>
                                    </template>
                                </templates>
                                <title>[Orig][TOOD][MT][BASE] Tagging Over Original Document[Minimap][Standard+TOOD Minimap]</title>
                                <useCommonHitCoordinates>false</useCommonHitCoordinates>
                                <uuid>2e04f930-c691-47fe-877a-32e68e8e3512</uuid>
                                <version>
                                    <componentUuid>7c26f3fe-51c2-46f5-b0cd-daa96e179f95</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-09-25T08:50:08Z</lastModified>
                                    <versionUuid>27593d2c-ee21-41e1-ab55-9c2bfb44cc39</versionUuid>
                                </version>
                                <workSetting>
                                    <category>
                                        <automation>false</automation>
                                        <description></description>
                                        <enabled>true</enabled>
                                        <executingType>HUMAN</executingType>
                                        <name>Other</name>
                                        <private>false</private>
                                        <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description></description>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                                    <version>
                                        <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                                        <incrementalVersion>1.0</incrementalVersion>
                                        <lastInChain>true</lastInChain>
                                        <lastModified>2018-05-28T11:12:06Z</lastModified>
                                        <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                                    </version>
                                    <answers/>
                                    <businessRules>
                                        <businessRule>
                                            <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                            <name>Start with one assignment 1+0 pay all</name>
                                            <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                            <ruleType>DROOLS</ruleType>
                                            <ruleTypeUI>Adjudication</ruleTypeUI>
                                            <template>
                                                <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                                <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                                <name>Start with 1 assignment X+0 rule (pay all)</name>
                                                <params>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>80</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                        <name>Normal accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>CHECK_EVERY</code>
                                                        <defaultValue>5</defaultValue>
                                                        <description>Check every i-th gold question when evaluating qualification score</description>
                                                        <name>Check every i-th gold question</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAJORITY_HIT_THRESHOLD</code>
                                                        <defaultValue>100</defaultValue>
                                                        <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                        <name>Percent of correct answers</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>70</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                        <name>Worst accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAJORITY_VALUE</code>
                                                        <defaultValue>1</defaultValue>
                                                        <description>Number of correct answers</description>
                                                        <name>Majority value</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>MAX_ASSIGNMENT_LIMIT</code>
                                                        <defaultValue>1</defaultValue>
                                                        <description>Maximum number of assignments</description>
                                                        <name>Max assignments limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                        <defaultValue>90</defaultValue>
                                                        <description>Normal accuracy level upper limit in percents exclusive</description>
                                                        <name>Normal accuracy level upper limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                        <defaultValue>90</defaultValue>
                                                        <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                        <name>Super accuracy level lower limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                        <defaultValue>95</defaultValue>
                                                        <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                        <name>Super accuracy level score</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                        <defaultValue>75</defaultValue>
                                                        <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                        <name>Worst accuracy level upper limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                    <param>
                                                        <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                        <defaultValue>75</defaultValue>
                                                        <description>Normal accuracy level lower limit in percents inclusive</description>
                                                        <name>Normal accuracy level lower limit</name>
                                                        <type>INPUT_NUMBER</type>
                                                    </param>
                                                </params>
                                            </template>
                                            <uuid>f7ededfc-6267-11e8-97c5-0ae8ba3240ae</uuid>
                                            <workflowRuleMode>ADVANCED</workflowRuleMode>
                                        </businessRule>
                                    </businessRules>
                                    <isPrivate>false</isPrivate>
                                    <items>
                                        <item>
                                            <type>TIME_PER_ASSIGNMENT</type>
                                            <value>1800000</value>
                                        </item>
                                        <item>
                                            <type>TITLE</type>
                                            <value>Miscellaneous Tasks</value>
                                        </item>
                                        <item>
                                            <type>AUTOMATICALLY_APPROVED</type>
                                            <value>432000000</value>
                                        </item>
                                        <item>
                                            <type>HIT_EXPIRES_IN</type>
                                            <value>2592000000</value>
                                        </item>
                                        <item>
                                            <type>RECOMMENDATION_TAGS</type>
                                            <value>["information_extraction"]</value>
                                        </item>
                                    </items>
                                    <template>
                                        <code></code>
                                        <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                        <name>Blank</name>
                                        <origination>CREATED_MANUALLY</origination>
                                        <status>ACTIVE</status>
                                        <type>BASE</type>
                                        <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                                        <version>
                                            <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2012-12-27T00:00:00Z</lastModified>
                                            <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                                        </version>
                                    </template>
                                </workSetting>
                                <workSpacePreviewData>[{"name":"original_document_url","value":"${question.data['original_document_url']}"},{"name":"country","value":"${question.data['country']}"}]</workSpacePreviewData>
                                <workSpacePreviewScheme>
                                    <answers>
                                        <answer>
                                            <allowNA>false</allowNA>
                                            <answer>original_document_url</answer>
                                            <answerCode>original_document_url</answerCode>
                                            <answerHtml></answerHtml>
                                            <answerTypeObject>
                                                <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                <code>FREE_TEXT</code>
                                                <description></description>
                                                <optionsAvailable>false</optionsAvailable>
                                                <showDefaultValue>true</showDefaultValue>
                                                <showForFieldScheme>true</showForFieldScheme>
                                                <showForHumanTask>true</showForHumanTask>
                                                <showForMachineConfig>true</showForMachineConfig>
                                                <title>Free Text</title>
                                                <valueType>SINGLEVALUE</valueType>
                                            </answerTypeObject>
                                            <appendDataStoreOptions>false</appendDataStoreOptions>
                                            <autocompleteField>false</autocompleteField>
                                            <constantable>false</constantable>
                                            <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                            <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                            <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                            <lastModified>2018-08-03T13:18:30Z</lastModified>
                                            <letCustomValues>false</letCustomValues>
                                            <manualField>false</manualField>
                                            <multiValue>false</multiValue>
                                            <percentRequired>false</percentRequired>
                                            <range>false</range>
                                            <required>false</required>
                                            <sequenceNumber>1</sequenceNumber>
                                            <useBlocks>false</useBlocks>
                                            <useEmptyCell>false</useEmptyCell>
                                        </answer>
                                        <answer>
                                            <allowNA>false</allowNA>
                                            <answer>country</answer>
                                            <answerCode>country</answerCode>
                                            <answerHtml></answerHtml>
                                            <answerTypeObject>
                                                <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                                <code>FREE_TEXT</code>
                                                <description></description>
                                                <optionsAvailable>false</optionsAvailable>
                                                <showDefaultValue>true</showDefaultValue>
                                                <showForFieldScheme>true</showForFieldScheme>
                                                <showForHumanTask>true</showForHumanTask>
                                                <showForMachineConfig>true</showForMachineConfig>
                                                <title>Free Text</title>
                                                <valueType>SINGLEVALUE</valueType>
                                            </answerTypeObject>
                                            <appendDataStoreOptions>false</appendDataStoreOptions>
                                            <autocompleteField>false</autocompleteField>
                                            <constantable>false</constantable>
                                            <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                            <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                            <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                            <lastModified>2018-08-03T13:18:30Z</lastModified>
                                            <letCustomValues>false</letCustomValues>
                                            <manualField>false</manualField>
                                            <multiValue>false</multiValue>
                                            <percentRequired>false</percentRequired>
                                            <range>false</range>
                                            <required>false</required>
                                            <sequenceNumber>2</sequenceNumber>
                                            <useBlocks>false</useBlocks>
                                            <useEmptyCell>false</useEmptyCell>
                                        </answer>
                                    </answers>
                                    <description></description>
                                    <id>147</id>
                                    <name>search options</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <uuid>085b07d7-7ddb-42eb-adb4-142f83790482</uuid>
                                </workSpacePreviewScheme>
                            </question>
                            <requiresData>true</requiresData>
                            <status>ACTIVE</status>
                            <streamComplexRunThreshold>1</streamComplexRunThreshold>
                            <streamTimeInterval>Immediately</streamTimeInterval>
                            <streamTimeIntervalValue>0</streamTimeIntervalValue>
                            <streamValueType>Tasks</streamValueType>
                            <title>[BP][Template][OCR] v3</title>
                            <type>COMPOSITE</type>
                            <uuid>0a4570b4-597b-45f1-a0b5-ba486b9a3daa</uuid>
                            <validWorkflow>true</validWorkflow>
                            <version>
                                <componentUuid>fa147f6e-d560-46b3-8c22-563cca7008b0</componentUuid>
                                <incrementalVersion>1.12</incrementalVersion>
                                <lastInChain>true</lastInChain>
                                <lastModified>2018-09-25T09:19:46Z</lastModified>
                                <versionUuid>1def8584-28c7-4053-9c6f-a95871623fe7</versionUuid>
                            </version>
                            <workSettingBase>false</workSettingBase>
                        </campaign>
                        <description>
                            <automationSetup>
                                <automationUseCaseConfigs>
                                    <automationUseCaseId>5</automationUseCaseId>
                                    <automationUseCaseUuid>015804db-4696-4d9f-9199-ba861967c2b8</automationUseCaseUuid>
                                    <modelCode>german-information-extraction</modelCode>
                                    <modelType>Other</modelType>
                                </automationUseCaseConfigs>
                                <id>2773</id>
                                <includeOriginalData>false</includeOriginalData>
                                <useCaseConfiguration>[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}]</useCaseConfiguration>
                                <uuid>2992c71d-a5cb-4d98-8fcd-e09a5198b9aa</uuid>
                            </automationSetup>
                            <automationType>NONE</automationType>
                            <dynamicTaskRenderingDisabled>false</dynamicTaskRenderingDisabled>
                            <goldRun>false</goldRun>
                            <maximumProcessingCount>2</maximumProcessingCount>
                            <qualificationTraining>false</qualificationTraining>
                            <stepDescription>{"628c73d9-23d1-4efe-934f-a92ad813e297":{"campaignUUID":"628c73d9-23d1-4efe-934f-a92ad813e297","workforceUUID":"fbba789a-6267-11e8-97c5-0ae8ba3240ae","includeOriginalData":false,"automationUseCaseConfigs":[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}],"automationRecall":0.0,"crowdPrices":[{"crowdId":1,"price":0.0}]},"177c3796-d4da-4ed6-96fd-8b2002c67659":{"campaignUUID":"177c3796-d4da-4ed6-96fd-8b2002c67659","workforceUUID":"fbba789a-6267-11e8-97c5-0ae8ba3240ae","includeOriginalData":false,"automationUseCaseConfigs":[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}],"automationRecall":0.0,"crowdPrices":[{"crowdId":1,"price":0.0}]}}</stepDescription>
                            <streamingValue>1</streamingValue>
                            <streamingValueType>Tasks</streamingValueType>
                            <taskParams>{"values":{"NAME":"OCR Settings"}}</taskParams>
                            <uploadResults>false</uploadResults>
                            <uploadResultsType>CREATE</uploadResultsType>
                        </description>
                        <executingType>COMPOSITE</executingType>
                        <forceComplete>false</forceComplete>
                        <forceCompleteIdleTime>0</forceCompleteIdleTime>
                        <forceCompletePercent>100</forceCompletePercent>
                        <mixStrategy>
                            <additionalRows>0</additionalRows>
                            <blockSize>1</blockSize>
                            <goldItemSize>0</goldItemSize>
                            <goldPercentage>0</goldPercentage>
                            <goldRatio>true</goldRatio>
                            <mainRows>1</mainRows>
                            <repeated>false</repeated>
                        </mixStrategy>
                        <purged>false</purged>
                        <recordProcessingStatus>NOT_STARTED</recordProcessingStatus>
                        <runTags>
                            <value>delivery</value>
                        </runTags>
                        <runTags>
                            <value>demo</value>
                        </runTags>
                        <runTags>
                            <value>tood</value>
                        </runTags>
                        <runTags>
                            <value>v3</value>
                        </runTags>
                        <runType>SIMPLE</runType>
                        <tags>delivery,demo,tood,v3</tags>
                        <title>[BP][Template][OCR] v3</title>
                        <uuid>76f62d6a-cfe8-44ee-9db4-10a52ba363de</uuid>
                    </run>
                </runs>
                <automationUseCases>
                    <automationUseCase>
                        <category>
                            <automation>false</automation>
                            <description></description>
                            <enabled>true</enabled>
                            <executingType>HUMAN</executingType>
                            <name>Other</name>
                            <private>false</private>
                            <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                        </category>
                        <contentType>NORMAL</contentType>
                        <description></description>
                        <enabled>true</enabled>
                        <name>Workfusion_OCR_v2.0</name>
                        <publicId>cc5efb30-4e93-4300-b314-997914fe421d</publicId>
                        <version>
                            <componentUuid>a6b952f6-a9e2-4c9d-a82b-cd96f24e56a0</componentUuid>
                            <incrementalVersion>1.15</incrementalVersion>
                            <lastInChain>true</lastInChain>
                            <lastModified>2018-09-20T12:16:19Z</lastModified>
                            <versionUuid>a8bb202a-e495-40f6-a619-f149b3380fc9</versionUuid>
                        </version>
                        <automationQualityThreshold>80</automationQualityThreshold>
                        <campaign>
                            <active>true</active>
                            <businessRules/>
                            <campaignMaps>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>2e0d8855-0bcb-4ae2-ba7e-5efc8cf94fca</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to configure OCR parameters

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  
  	&lt;required name="s3_bucket_name"/&gt;
  	&lt;required name="ocr_type"/&gt;
  	&lt;required name="cache_datastore"/&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		if(ocr_type.toString().equals("tood")) {
			export_format = "xmlForCorrectedImage";
		} else if (ocr_type.toString().equals("standard")) {
  			if( !sys.isVariableDefined("export_format") || export_format == null || export_format.toString().isEmpty()) {
				export_format = "xmlForCorrectedImage";
			} else {
				export_format = export_format.toString().replace("|", ",");
			}
		}
		sys.defineVariable("exportFormat", export_format);

		if( !sys.isVariableDefined("document_language") || document_language == null || document_language.toString().isEmpty()) {
			document_language = "English";
		} else {
			document_language = document_language.toString().replace(" ", "");
		}
		sys.defineVariable("documentLanguage", document_language);

		if( !sys.isVariableDefined("skip_ocr_cache") || skip_ocr_cache == null || skip_ocr_cache.toString().isEmpty()) {
			skip_ocr_cache = "false";
		} else {
			skip_ocr_cache = skip_ocr_cache.toString().replace(" ", "");
		}
		sys.defineVariable("skip_ocr_cache", skip_ocr_cache);

		if( !sys.isVariableDefined("is_logging_enabled") || is_logging_enabled == null || is_logging_enabled.toString().isEmpty()) {
			is_logging_enabled = "true";
		} else {
			is_logging_enabled = is_logging_enabled.toString().replace(" ", "");
		}
		sys.defineVariable("is_logging_enabled", is_logging_enabled);

		if( !sys.isVariableDefined("ocr_xml_char_recognition") || ocr_xml_char_recognition == null || ocr_xml_char_recognition.toString().isEmpty()) {
			ocr_xml_char_recognition = "false";
		}
		sys.defineVariable("ocrXmlCharRecognition", ocr_xml_char_recognition);

		if( !sys.isVariableDefined("allowed_region_types") || allowed_region_types == null || allowed_region_types.toString().isEmpty()) {
			allowed_region_types = "BT_Table,BT_Text,BT_Separator,BT_SeparatorGroup,BT_Checkmark,BT_CheckmarkGroup,BT_AutoAnalysis";
		} else {
			allowed_region_types = allowed_region_types.toString().replace("|", ",");
		}
		sys.defineVariable("allowed_region_types", allowed_region_types)

		if( !sys.isVariableDefined("custom_regions") || custom_regions == null) {
			custom_regions = "";
		}
		sys.defineVariable("custom_regions", custom_regions);

		if( !sys.isVariableDefined("change_dpi") || change_dpi == null) {
			change_dpi = "";
		}	
 		sys.defineVariable("change_dpi", change_dpi);

		if( !sys.isVariableDefined("invert_image") || invert_image == null || invert_image.toString().isEmpty()) {
			invert_image = "false";
		}
		sys.defineVariable("invertImage", invert_image)

		if( !sys.isVariableDefined("discard_color_image") || discard_color_image == null || discard_color_image.toString().isEmpty()) {
			discard_color_image = "false";
		}
		sys.defineVariable("discardColorImage", discard_color_image);
		
		if( !sys.isVariableDefined("remove_color_objects") || remove_color_objects == null) {
			remove_color_objects = "";
		}	
 		sys.defineVariable("remove_color_objects", remove_color_objects);

		if( !sys.isVariableDefined("remove_color_objects_type") || remove_color_objects_type == null || remove_color_objects_type.toString().isEmpty()) {
			remove_color_objects_type = "Background";
		}
		sys.defineVariable("removeColorObjectsType", remove_color_objects_type);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="document_uuid"&gt;
		&lt;script language="java" return="uuid"&gt;&lt;![CDATA[
			String uuid = UUID.randomUUID().toString();
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
  
  	&lt;var-def name="bp_run_id"&gt;
		&lt;template&gt;
			${item.getWrappedObject().getRun().getRootRunUuid()}
		&lt;/template&gt;
	&lt;/var-def&gt;
  
	&lt;export include-original-data="true"&gt;
      	&lt;single-column name="cache_datastore" value="${cache_datastore}"/&gt;
    	&lt;single-column name="export_format" value="${exportFormat}"/&gt;
        &lt;single-column name="document_language" value="${documentLanguage}"/&gt;
        &lt;single-column name="ocr_xml_char_recognition" value="${ocrXmlCharRecognition}"/&gt;
     	&lt;single-column name="skip_ocr_cache" value="${skip_ocr_cache}"/&gt;
      	&lt;single-column name="is_logging_enabled" value="${is_logging_enabled}"/&gt;
      	&lt;single-column name="allowed_region_types" value="${allowed_region_types}"/&gt;
      	&lt;single-column name="custom_regions" value="${custom_regions}"/&gt;
      	&lt;single-column name="change_dpi" value="${change_dpi}"/&gt;
        &lt;single-column name="invert_image" value="${invertImage}"/&gt;
        &lt;single-column name="discard_color_image" value="${discardColorImage}"/&gt;
      	&lt;single-column name="remove_color_objects" value="${remove_color_objects}"/&gt;
      	&lt;single-column name="remove_color_objects_type" value="${removeColorObjectsType}"/&gt;
      
      	&lt;single-column name="bp_run_id" value="${bp_run_id}"/&gt;
      	&lt;single-column name="document_uuid" value="${document_uuid}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>8deff6c0-b7ee-430d-a96a-1e76592fd4ef</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Input data processing</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>8deff6c0-b7ee-430d-a96a-1e76592fd4ef</uuid>
                                            <version>
                                                <componentUuid>6c6e68e8-1ffb-42c6-bfe9-c80f599cd743</componentUuid>
                                                <incrementalVersion>1.7</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>89ef27ce-cac8-4546-a5bf-933ca8d42ae0</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Input data processing</title>
                                        <type>SINGLE</type>
                                        <uuid>9049c4bb-9c00-4311-ad63-da424d10c7a2</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>16050d15-967b-4f3c-9304-e4cccda3e1db</componentUuid>
                                            <incrementalVersion>1.10</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>84fb0632-e320-40af-83a8-4e13893434bb</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>1</stepIndex>
                                    <stepPosition>START</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>737ccbfd-03f6-4f2c-9d7f-9669395af978</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>888abc6a-8377-417b-99a2-e8912a1aebe3</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to configure OCR parameters

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  
  	&lt;required name="s3_bucket_name"/&gt;
  	&lt;required name="ocr_type"/&gt;
  	&lt;required name="cache_datastore"/&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		if(ocr_type.toString().equals("tood")) {
			export_format = "xmlForCorrectedImage";
		} else if (ocr_type.toString().equals("standard")) {
  			if( !sys.isVariableDefined("export_format") || export_format == null || export_format.toString().isEmpty()) {
				export_format = "xmlForCorrectedImage";
			} else {
				export_format = export_format.toString().replace("|", ",");
			}
		}
		sys.defineVariable("exportFormat", export_format);

		if( !sys.isVariableDefined("document_language") || document_language == null || document_language.toString().isEmpty()) {
			document_language = "English";
		} else {
			document_language = document_language.toString().replace(" ", "");
		}
		sys.defineVariable("documentLanguage", document_language);

		if( !sys.isVariableDefined("skip_ocr_cache") || skip_ocr_cache == null || skip_ocr_cache.toString().isEmpty()) {
			skip_ocr_cache = "false";
		} else {
			skip_ocr_cache = skip_ocr_cache.toString().replace(" ", "");
		}
		sys.defineVariable("skip_ocr_cache", skip_ocr_cache);

		if( !sys.isVariableDefined("is_logging_enabled") || is_logging_enabled == null || is_logging_enabled.toString().isEmpty()) {
			is_logging_enabled = "true";
		} else {
			is_logging_enabled = is_logging_enabled.toString().replace(" ", "");
		}
		sys.defineVariable("is_logging_enabled", is_logging_enabled);

		if( !sys.isVariableDefined("ocr_xml_char_recognition") || ocr_xml_char_recognition == null || ocr_xml_char_recognition.toString().isEmpty()) {
			ocr_xml_char_recognition = "false";
		}
		sys.defineVariable("ocrXmlCharRecognition", ocr_xml_char_recognition);

		if( !sys.isVariableDefined("allowed_region_types") || allowed_region_types == null || allowed_region_types.toString().isEmpty()) {
			allowed_region_types = "BT_Table,BT_Text,BT_Separator,BT_SeparatorGroup,BT_Checkmark,BT_CheckmarkGroup,BT_AutoAnalysis";
		} else {
			allowed_region_types = allowed_region_types.toString().replace("|", ",");
		}
		sys.defineVariable("allowed_region_types", allowed_region_types)

		if( !sys.isVariableDefined("custom_regions") || custom_regions == null) {
			custom_regions = "";
		}
		sys.defineVariable("custom_regions", custom_regions);

		if( !sys.isVariableDefined("change_dpi") || change_dpi == null) {
			change_dpi = "";
		}	
 		sys.defineVariable("change_dpi", change_dpi);

		if( !sys.isVariableDefined("invert_image") || invert_image == null || invert_image.toString().isEmpty()) {
			invert_image = "false";
		}
		sys.defineVariable("invertImage", invert_image)

		if( !sys.isVariableDefined("discard_color_image") || discard_color_image == null || discard_color_image.toString().isEmpty()) {
			discard_color_image = "false";
		}
		sys.defineVariable("discardColorImage", discard_color_image);
		
		if( !sys.isVariableDefined("remove_color_objects") || remove_color_objects == null) {
			remove_color_objects = "";
		}	
 		sys.defineVariable("remove_color_objects", remove_color_objects);

		if( !sys.isVariableDefined("remove_color_objects_type") || remove_color_objects_type == null || remove_color_objects_type.toString().isEmpty()) {
			remove_color_objects_type = "Background";
		}
		sys.defineVariable("removeColorObjectsType", remove_color_objects_type);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="document_uuid"&gt;
		&lt;script language="java" return="uuid"&gt;&lt;![CDATA[
			String uuid = UUID.randomUUID().toString();
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
  
  	&lt;var-def name="bp_run_id"&gt;
		&lt;template&gt;
			${item.getWrappedObject().getRun().getRootRunUuid()}
		&lt;/template&gt;
	&lt;/var-def&gt;
  
	&lt;export include-original-data="true"&gt;
      	&lt;single-column name="cache_datastore" value="${cache_datastore}"/&gt;
    	&lt;single-column name="export_format" value="${exportFormat}"/&gt;
        &lt;single-column name="document_language" value="${documentLanguage}"/&gt;
        &lt;single-column name="ocr_xml_char_recognition" value="${ocrXmlCharRecognition}"/&gt;
     	&lt;single-column name="skip_ocr_cache" value="${skip_ocr_cache}"/&gt;
      	&lt;single-column name="is_logging_enabled" value="${is_logging_enabled}"/&gt;
      	&lt;single-column name="allowed_region_types" value="${allowed_region_types}"/&gt;
      	&lt;single-column name="custom_regions" value="${custom_regions}"/&gt;
      	&lt;single-column name="change_dpi" value="${change_dpi}"/&gt;
        &lt;single-column name="invert_image" value="${invertImage}"/&gt;
        &lt;single-column name="discard_color_image" value="${discardColorImage}"/&gt;
      	&lt;single-column name="remove_color_objects" value="${remove_color_objects}"/&gt;
      	&lt;single-column name="remove_color_objects_type" value="${removeColorObjectsType}"/&gt;
      
      	&lt;single-column name="bp_run_id" value="${bp_run_id}"/&gt;
      	&lt;single-column name="document_uuid" value="${document_uuid}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>8deff6c0-b7ee-430d-a96a-1e76592fd4ef</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Input data processing</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>8deff6c0-b7ee-430d-a96a-1e76592fd4ef</uuid>
                                            <version>
                                                <componentUuid>6c6e68e8-1ffb-42c6-bfe9-c80f599cd743</componentUuid>
                                                <incrementalVersion>1.7</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>89ef27ce-cac8-4546-a5bf-933ca8d42ae0</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Input data processing</title>
                                        <type>SINGLE</type>
                                        <uuid>9049c4bb-9c00-4311-ad63-da424d10c7a2</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>16050d15-967b-4f3c-9304-e4cccda3e1db</componentUuid>
                                            <incrementalVersion>1.10</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>84fb0632-e320-40af-83a8-4e13893434bb</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>1</stepIndex>
                                    <stepPosition>START</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>a050586d-7182-45b0-9518-1b350869f16d</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>a1c1fd4c-4425-498d-94ed-b9b9bf403ab1</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for all pages of document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.1
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
        scriptlang="java"&gt;

    &lt;!-- reading pNG from S3 --&gt;
    &lt;script&gt;&lt;![CDATA[
		import org.json.XML;
		import java.util.List;
		import java.util.ArrayList;
		import org.json.JSONObject;
		import org.json.JSONArray;
		import com.freedomoss.workfusion.utils.gson.GsonUtils;

		static String getJSONValue(String jsonString, String key) {
			try{
				JSONObject json = new JSONObject(jsonString);
				return json.get(key).get("directUrl").toString();
			} catch (Exception e){
				return "";
			}
		}
	]]&gt;&lt;/script&gt;

    &lt;var-def name="jsonSize"&gt;
        &lt;var name="pages" /&gt;
    &lt;/var-def&gt;

    &lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
        &lt;var-def name="jsonKey"&gt;
            &lt;template&gt;fileList-${i.toInt()}&lt;/template&gt;
        &lt;/var-def&gt;
        &lt;!-- reading pNG from S3 --&gt;
        &lt;var-def name="jsonValue-${i}"&gt;
            &lt;script return="getJSONValue(json_file_urls.toString(), jsonKey.toString())" /&gt;
        &lt;/var-def&gt;
    &lt;/while&gt;

    &lt;var-def name="pagesList"&gt;
        &lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
            &lt;var name="jsonValue-${i}" /&gt;
        &lt;/while&gt;
    &lt;/var-def&gt;

    &lt;var-def name="ocr_url"&gt;
        &lt;var-global name="ocr_url"/&gt;
    &lt;/var-def&gt;

    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;

    &lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;  
import org.apache.commons.httpclient.methods.multipart.StringPart; 
import org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource;  
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;  
import org.apache.commons.httpclient.methods.multipart.Part; 
import java.text.SimpleDateFormat;
import java.util.Base64;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }

if(is_logging_enabled.toBoolean())
	log.warn("submitting with no authentication "+original_document_url.toString());
GetMethod getMethod = new GetMethod(original_document_url.toString());
  
        http.client.executeMethod(getMethod);
        byte[] buf = getMethod.getResponseBody();
 		getMethod.releaseConnection();
        PostMethod postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                postMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        Part[] parts = new Part[1];  
        parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)) ;  
        postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams()));  
        http.client.executeMethod(postMethod);   
        statusCode = postMethod.getStatusCode();   
        response = postMethod.getResponseBodyAsString(); 
		InputSource source1 = new InputSource(new StringReader(response));
		XPathFactory xpathFactory = XPathFactory.newInstance();
		XPath xpath = xpathFactory.newXPath();
		taskId = xpath.evaluate("//response/task/@id", source1);
		if(is_logging_enabled.toBoolean())
			log.info("task created "+taskId);


        if(pagesList.getWrappedObject().size()&gt;1){
          parts = new Part[2];  
          parts[1] = new StringPart("taskId", taskId.toString());
          for( Object pagesListElement : pagesList.getWrappedObject()){
                  getMethod = new GetMethod(pagesListElement.toString());
				if(is_logging_enabled.toBoolean())
                  log.info(pagesListElement.toString());
                  System.out.println("GET " + getMethod.getURI());
                  http.client.executeMethod(getMethod);
                  buf = getMethod.getResponseBody();
                  getMethod.releaseConnection();
                  postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
                  parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)); 
                  postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams())); 
                  http.client.executeMethod(postMethod);   
                  statusCode = postMethod.getStatusCode();   
                  response = postMethod.getResponseBodyAsString();   
				if(is_logging_enabled.toBoolean())
                  log.warn("Response:" + response.toString() + ": " + statusCode);   
          }
        }

		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());
		
		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}

        getMethod = new GetMethod(process_document_url.toString());
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        http.client.executeMethod(getMethod);
	if(is_logging_enabled.toBoolean())
		log.info("processing task"+taskId);
	]]&gt;&lt;/script&gt;

    &lt;export include-original-data="true"&gt;
        &lt;single-column name="ocr_task_id" value="${taskId}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>debcf0f2-3926-4da2-9ef5-9d26b46e3546</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>debcf0f2-3926-4da2-9ef5-9d26b46e3546</uuid>
                                            <version>
                                                <componentUuid>e39c0408-4ef1-4448-a091-a4098ad921e4</componentUuid>
                                                <incrementalVersion>1.58</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>a7fcf2bf-07d6-4977-b70e-7c547b45c2cb</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>3dab49e1-4c73-4132-9193-983b4951f4d5</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>aa2d51d8-62b0-4114-bc55-856f662381bc</componentUuid>
                                            <incrementalVersion>1.21</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>2ddf2286-d801-4db9-a1ac-e2b379917ba9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>2</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>e32d8749-a8e0-4f45-a66e-96d288317174</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>cad9f69a-b6cb-4627-ac4b-5644902b7779</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for all pages of document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.1
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
        scriptlang="java"&gt;

    &lt;!-- reading pNG from S3 --&gt;
    &lt;script&gt;&lt;![CDATA[
		import org.json.XML;
		import java.util.List;
		import java.util.ArrayList;
		import org.json.JSONObject;
		import org.json.JSONArray;
		import com.freedomoss.workfusion.utils.gson.GsonUtils;

		static String getJSONValue(String jsonString, String key) {
			try{
				JSONObject json = new JSONObject(jsonString);
				return json.get(key).get("directUrl").toString();
			} catch (Exception e){
				return "";
			}
		}
	]]&gt;&lt;/script&gt;

    &lt;var-def name="jsonSize"&gt;
        &lt;var name="pages" /&gt;
    &lt;/var-def&gt;

    &lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
        &lt;var-def name="jsonKey"&gt;
            &lt;template&gt;fileList-${i.toInt()}&lt;/template&gt;
        &lt;/var-def&gt;
        &lt;!-- reading pNG from S3 --&gt;
        &lt;var-def name="jsonValue-${i}"&gt;
            &lt;script return="getJSONValue(json_file_urls.toString(), jsonKey.toString())" /&gt;
        &lt;/var-def&gt;
    &lt;/while&gt;

    &lt;var-def name="pagesList"&gt;
        &lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
            &lt;var name="jsonValue-${i}" /&gt;
        &lt;/while&gt;
    &lt;/var-def&gt;

    &lt;var-def name="ocr_url"&gt;
        &lt;var-global name="ocr_url"/&gt;
    &lt;/var-def&gt;

    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;

    &lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;  
import org.apache.commons.httpclient.methods.multipart.StringPart; 
import org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource;  
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;  
import org.apache.commons.httpclient.methods.multipart.Part; 
import java.text.SimpleDateFormat;
import java.util.Base64;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }

if(is_logging_enabled.toBoolean())
	log.warn("submitting with no authentication "+original_document_url.toString());
GetMethod getMethod = new GetMethod(original_document_url.toString());
  
        http.client.executeMethod(getMethod);
        byte[] buf = getMethod.getResponseBody();
 		getMethod.releaseConnection();
        PostMethod postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                postMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        Part[] parts = new Part[1];  
        parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)) ;  
        postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams()));  
        http.client.executeMethod(postMethod);   
        statusCode = postMethod.getStatusCode();   
        response = postMethod.getResponseBodyAsString(); 
		InputSource source1 = new InputSource(new StringReader(response));
		XPathFactory xpathFactory = XPathFactory.newInstance();
		XPath xpath = xpathFactory.newXPath();
		taskId = xpath.evaluate("//response/task/@id", source1);
		if(is_logging_enabled.toBoolean())
			log.info("task created "+taskId);


        if(pagesList.getWrappedObject().size()&gt;1){
          parts = new Part[2];  
          parts[1] = new StringPart("taskId", taskId.toString());
          for( Object pagesListElement : pagesList.getWrappedObject()){
                  getMethod = new GetMethod(pagesListElement.toString());
				if(is_logging_enabled.toBoolean())
                  log.info(pagesListElement.toString());
                  System.out.println("GET " + getMethod.getURI());
                  http.client.executeMethod(getMethod);
                  buf = getMethod.getResponseBody();
                  getMethod.releaseConnection();
                  postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
                  parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)); 
                  postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams())); 
                  http.client.executeMethod(postMethod);   
                  statusCode = postMethod.getStatusCode();   
                  response = postMethod.getResponseBodyAsString();   
				if(is_logging_enabled.toBoolean())
                  log.warn("Response:" + response.toString() + ": " + statusCode);   
          }
        }

		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());
		
		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}

        getMethod = new GetMethod(process_document_url.toString());
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        http.client.executeMethod(getMethod);
	if(is_logging_enabled.toBoolean())
		log.info("processing task"+taskId);
	]]&gt;&lt;/script&gt;

    &lt;export include-original-data="true"&gt;
        &lt;single-column name="ocr_task_id" value="${taskId}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>debcf0f2-3926-4da2-9ef5-9d26b46e3546</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>debcf0f2-3926-4da2-9ef5-9d26b46e3546</uuid>
                                            <version>
                                                <componentUuid>e39c0408-4ef1-4448-a091-a4098ad921e4</componentUuid>
                                                <incrementalVersion>1.58</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>a7fcf2bf-07d6-4977-b70e-7c547b45c2cb</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>3dab49e1-4c73-4132-9193-983b4951f4d5</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>aa2d51d8-62b0-4114-bc55-856f662381bc</componentUuid>
                                            <incrementalVersion>1.21</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>2ddf2286-d801-4db9-a1ac-e2b379917ba9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>2</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>37688db9-f2e6-4763-999c-2929f0001ff7</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"Yes","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"cache_hit","value":"full","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'Yes' when cache_hit EQ 'full'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("cache_hit", "EQ", "full"));

    then
        $ctx.sendResultTo("Yes", $item);
end



# RuleOutcome.Definition={"outcomeId":"No","conditional":false,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[],"customConditions":[]}
rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>Cache hit?</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>0d6487ae-37cc-480d-a45d-7d1570791136</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to look for OCR cache for each OCR export format by all input parameters, and if it full hits we go to last BP step, otherwise go to the OCR step.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;var-def name="document_link"&gt;
		&lt;template&gt;${sys.getVar("original_document_url")}&lt;/template&gt;
	&lt;/var-def&gt;
  
      &lt;var-def name="skip_ocr_cache"&gt;
        &lt;template&gt;${skip_ocr_cache}&lt;/template&gt;
    &lt;/var-def&gt;

	&lt;script&gt;&lt;![CDATA[
		isUnsuccessfulStatusCode = {statusCode -&gt; return statusCode.toString().matches('^[45]\\d{2}')};
	]]&gt;&lt;/script&gt;

	&lt;try&gt;
		&lt;body&gt;
			&lt;var-def name="document"&gt;
				&lt;http url="${document_link}" /&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
		&lt;catch&gt;
		&lt;/catch&gt;
	&lt;/try&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;try&gt;
				&lt;body&gt;
					&lt;var-def name="document_link"&gt;
						&lt;template&gt;${org.apache.commons.httpclient.util.URIUtil.encodeQuery(document_link.toString())}
						&lt;/template&gt;
					&lt;/var-def&gt;
					&lt;var-def name="document"&gt;
						&lt;http url="${document_link}" /&gt;
					&lt;/var-def&gt;
				&lt;/body&gt;
				&lt;catch&gt;
				&lt;/catch&gt;
			&lt;/try&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;script&gt;&lt;![CDATA[
				throw new RuntimeException("Failed to fetch url: " + document_link + " status code: " + http.statusCode);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;var-def name="document_hash"&gt;
		&lt;template&gt;${sys.getVar("document_hash")}&lt;/template&gt;
	&lt;/var-def&gt;
	&lt;case&gt;
		&lt;if condition="${document_hash.toString().length() == 0}"&gt;
			&lt;var-def name="document_hash"&gt;
				&lt;script
					return="org.apache.commons.codec.digest.DigestUtils.md5Hex(document.toBinary())" /&gt;
			&lt;/var-def&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;
		export_format_list = Arrays.asList(export_format.toString().split(","));
		sys.defineVariable("exportFormatList", export_format_list);

		no_cached_export_format_list = new ArrayList(export_format_list);
		String no_cached_export_format = no_cached_export_format_list.toString().replaceAll("[\\[\\]\\s]","");
		sys.defineVariable("no_cached_export_format", no_cached_export_format);

		List ocr_result_list = new ArrayList();
		sys.defineVariable("ocr_result_list", ocr_result_list);

		Gson gson = new Gson();
		String result_json = gson.toJson(ocr_result_list.toList());
		sys.defineVariable("cached_ocr_json", result_json);
	]]&gt;&lt;/script&gt;
  &lt;case&gt;
     &lt;if condition='${skip_ocr_cache.toString().length() == 0 || skip_ocr_cache.toString().equals("0") }'&gt;
                    
  	&lt;!-- If the datastore is missing --&gt;
	&lt;create-datastore name="${cache_datastore}"&gt;
		&lt;datastore-column name="key" /&gt;
		&lt;datastore-column name="ocr_type" /&gt;
		&lt;datastore-column name="export_format" /&gt;
		&lt;datastore-column name="document_language" /&gt;
		&lt;datastore-column name="ocr_xml_char_recognition" /&gt;
		&lt;datastore-column name="allowed_region_types" /&gt;
		&lt;datastore-column name="custom_regions" /&gt;
		&lt;datastore-column name="change_dpi" /&gt;
		&lt;datastore-column name="invert_image" /&gt;
		&lt;datastore-column name="discard_color_image" /&gt;
		&lt;datastore-column name="remove_color_objects" /&gt;
		&lt;datastore-column name="remove_color_objects_type" /&gt;
	&lt;/create-datastore&gt;

	&lt;loop item="format"&gt;
		&lt;list&gt;
			&lt;var name="exportFormatList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;var-def name="cachedRecord"&gt;
				&lt;datastore name="${cache_datastore}" max="1"&gt;
            		&lt;template&gt;
            			SELECT * FROM @this WHERE "key"='${document_hash}' AND "ocr_type"='${ocr_type}' AND "export_format"='${format}' AND "document_language"='${document_language}' AND "ocr_xml_char_recognition"='${ocr_xml_char_recognition}' AND "allowed_region_types"='${allowed_region_types}' AND "custom_regions"='${custom_regions}' AND "change_dpi"='${change_dpi}' AND "invert_image"='${invert_image}' AND "discard_color_image"='${discard_color_image}' AND "remove_color_objects"='${remove_color_objects}' AND "remove_color_objects_type"='${remove_color_objects_type}'    
          			&lt;/template&gt;
				&lt;/datastore&gt;
			&lt;/var-def&gt;
          
          	&lt;case&gt;
				&lt;if condition='${cachedRecord.toString().length() != 0}'&gt;
                  	&lt;var-def name="value"&gt;
                            &lt;xpath expression='/row/ocr_json/text()'&gt;
                                &lt;var name="cachedRecord"/&gt;
                            &lt;/xpath&gt;
                    &lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						no_cached_export_format_list.remove(format.toString());

						ocr_result_list.toList().add(new HashMap(new groovy.json.JsonSlurper().parseText(value.toString())));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;  
		&lt;/body&gt;
	&lt;/loop&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		String no_cached_export_format = no_cached_export_format_list.toString().replaceAll("[\\[\\]\\s]","");
		sys.defineVariable("no_cached_export_format", no_cached_export_format);

		Gson gson = new Gson();
		String result_json = gson.toJson(ocr_result_list.toList());
		sys.defineVariable("cached_ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="document_hash" value="${document_hash}" /&gt;
      	&lt;single-column name="no_cached_export_format" value="${no_cached_export_format}" /&gt;
      	&lt;case&gt;
            &lt;if condition='${no_cached_export_format_list.size() == export_format_list.size()}'&gt;
            	&lt;single-column name="cache_hit" value="none"/&gt;
            &lt;/if&gt;
          	&lt;if condition='${no_cached_export_format_list.size() == 0}'&gt;
            	&lt;single-column name="cache_hit" value="full"/&gt;
              	&lt;single-column name="ocr_failed" value="false"/&gt;
            &lt;/if&gt;
            &lt;else&gt;
                &lt;single-column name="cache_hit" value="half"/&gt;
            &lt;/else&gt;
        &lt;/case&gt;
      	&lt;single-column name="cached_ocr_json" value="${cached_ocr_json}" /&gt;
	&lt;/export&gt;
       &lt;/if&gt;
                &lt;else&gt;
                    	&lt;export include-original-data="true"&gt;
		&lt;single-column name="document_hash" value="${document_hash}" /&gt;
      	&lt;single-column name="no_cached_export_format" value="${no_cached_export_format}" /&gt;
      	&lt;single-column name="cache_hit" value="none"/&gt;
        &lt;single-column name="cached_ocr_json" value="${cached_ocr_json}" /&gt;
	&lt;/export&gt;
                &lt;/else&gt;
            &lt;/case&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>0f9a2bf3-a8bd-43ca-88dd-953b6c3871b5</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Look for OCR cache</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>0f9a2bf3-a8bd-43ca-88dd-953b6c3871b5</uuid>
                                            <version>
                                                <componentUuid>7cb14104-af75-43fe-aff5-86e9d8780b4f</componentUuid>
                                                <incrementalVersion>1.7</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-27T08:15:53Z</lastModified>
                                                <versionUuid>f80666d1-7e8c-4646-b0af-4dd8ca739574</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Look for OCR cache</title>
                                        <type>SINGLE</type>
                                        <uuid>156f7ef5-ad40-4af6-b692-6745c6a329c3</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>1339b2d0-655f-4d34-9ce0-9808950f4bb2</componentUuid>
                                            <incrementalVersion>1.9</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-27T08:15:53Z</lastModified>
                                            <versionUuid>e9f05ac5-f150-42a8-99f0-1da98a8035b9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>3</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>d6eda625-883c-4d10-8e9e-a1924de583c1</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"Yes","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"cache_hit","value":"full","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'Yes' when cache_hit EQ 'full'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("cache_hit", "EQ", "full"));

    then
        $ctx.sendResultTo("Yes", $item);
end



# RuleOutcome.Definition={"outcomeId":"No","conditional":false,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[],"customConditions":[]}
rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>Cache hit?</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>df398bed-509a-4470-9d88-bedc37cf1361</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to look for OCR cache for each OCR export format by all input parameters, and if it full hits we go to last BP step, otherwise go to the OCR step.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;var-def name="document_link"&gt;
		&lt;template&gt;${sys.getVar("original_document_url")}&lt;/template&gt;
	&lt;/var-def&gt;
  
      &lt;var-def name="skip_ocr_cache"&gt;
        &lt;template&gt;${skip_ocr_cache}&lt;/template&gt;
    &lt;/var-def&gt;

	&lt;script&gt;&lt;![CDATA[
		isUnsuccessfulStatusCode = {statusCode -&gt; return statusCode.toString().matches('^[45]\\d{2}')};
	]]&gt;&lt;/script&gt;

	&lt;try&gt;
		&lt;body&gt;
			&lt;var-def name="document"&gt;
				&lt;http url="${document_link}" /&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
		&lt;catch&gt;
		&lt;/catch&gt;
	&lt;/try&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;try&gt;
				&lt;body&gt;
					&lt;var-def name="document_link"&gt;
						&lt;template&gt;${org.apache.commons.httpclient.util.URIUtil.encodeQuery(document_link.toString())}
						&lt;/template&gt;
					&lt;/var-def&gt;
					&lt;var-def name="document"&gt;
						&lt;http url="${document_link}" /&gt;
					&lt;/var-def&gt;
				&lt;/body&gt;
				&lt;catch&gt;
				&lt;/catch&gt;
			&lt;/try&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;script&gt;&lt;![CDATA[
				throw new RuntimeException("Failed to fetch url: " + document_link + " status code: " + http.statusCode);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;var-def name="document_hash"&gt;
		&lt;template&gt;${sys.getVar("document_hash")}&lt;/template&gt;
	&lt;/var-def&gt;
	&lt;case&gt;
		&lt;if condition="${document_hash.toString().length() == 0}"&gt;
			&lt;var-def name="document_hash"&gt;
				&lt;script
					return="org.apache.commons.codec.digest.DigestUtils.md5Hex(document.toBinary())" /&gt;
			&lt;/var-def&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;
		export_format_list = Arrays.asList(export_format.toString().split(","));
		sys.defineVariable("exportFormatList", export_format_list);

		no_cached_export_format_list = new ArrayList(export_format_list);
		String no_cached_export_format = no_cached_export_format_list.toString().replaceAll("[\\[\\]\\s]","");
		sys.defineVariable("no_cached_export_format", no_cached_export_format);

		List ocr_result_list = new ArrayList();
		sys.defineVariable("ocr_result_list", ocr_result_list);

		Gson gson = new Gson();
		String result_json = gson.toJson(ocr_result_list.toList());
		sys.defineVariable("cached_ocr_json", result_json);
	]]&gt;&lt;/script&gt;
  &lt;case&gt;
     &lt;if condition='${skip_ocr_cache.toString().length() == 0 || skip_ocr_cache.toString().equals("0") }'&gt;
                    
  	&lt;!-- If the datastore is missing --&gt;
	&lt;create-datastore name="${cache_datastore}"&gt;
		&lt;datastore-column name="key" /&gt;
		&lt;datastore-column name="ocr_type" /&gt;
		&lt;datastore-column name="export_format" /&gt;
		&lt;datastore-column name="document_language" /&gt;
		&lt;datastore-column name="ocr_xml_char_recognition" /&gt;
		&lt;datastore-column name="allowed_region_types" /&gt;
		&lt;datastore-column name="custom_regions" /&gt;
		&lt;datastore-column name="change_dpi" /&gt;
		&lt;datastore-column name="invert_image" /&gt;
		&lt;datastore-column name="discard_color_image" /&gt;
		&lt;datastore-column name="remove_color_objects" /&gt;
		&lt;datastore-column name="remove_color_objects_type" /&gt;
	&lt;/create-datastore&gt;

	&lt;loop item="format"&gt;
		&lt;list&gt;
			&lt;var name="exportFormatList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;var-def name="cachedRecord"&gt;
				&lt;datastore name="${cache_datastore}" max="1"&gt;
            		&lt;template&gt;
            			SELECT * FROM @this WHERE "key"='${document_hash}' AND "ocr_type"='${ocr_type}' AND "export_format"='${format}' AND "document_language"='${document_language}' AND "ocr_xml_char_recognition"='${ocr_xml_char_recognition}' AND "allowed_region_types"='${allowed_region_types}' AND "custom_regions"='${custom_regions}' AND "change_dpi"='${change_dpi}' AND "invert_image"='${invert_image}' AND "discard_color_image"='${discard_color_image}' AND "remove_color_objects"='${remove_color_objects}' AND "remove_color_objects_type"='${remove_color_objects_type}'    
          			&lt;/template&gt;
				&lt;/datastore&gt;
			&lt;/var-def&gt;
          
          	&lt;case&gt;
				&lt;if condition='${cachedRecord.toString().length() != 0}'&gt;
                  	&lt;var-def name="value"&gt;
                            &lt;xpath expression='/row/ocr_json/text()'&gt;
                                &lt;var name="cachedRecord"/&gt;
                            &lt;/xpath&gt;
                    &lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						no_cached_export_format_list.remove(format.toString());

						ocr_result_list.toList().add(new HashMap(new groovy.json.JsonSlurper().parseText(value.toString())));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;  
		&lt;/body&gt;
	&lt;/loop&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		String no_cached_export_format = no_cached_export_format_list.toString().replaceAll("[\\[\\]\\s]","");
		sys.defineVariable("no_cached_export_format", no_cached_export_format);

		Gson gson = new Gson();
		String result_json = gson.toJson(ocr_result_list.toList());
		sys.defineVariable("cached_ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="document_hash" value="${document_hash}" /&gt;
      	&lt;single-column name="no_cached_export_format" value="${no_cached_export_format}" /&gt;
      	&lt;case&gt;
            &lt;if condition='${no_cached_export_format_list.size() == export_format_list.size()}'&gt;
            	&lt;single-column name="cache_hit" value="none"/&gt;
            &lt;/if&gt;
          	&lt;if condition='${no_cached_export_format_list.size() == 0}'&gt;
            	&lt;single-column name="cache_hit" value="full"/&gt;
              	&lt;single-column name="ocr_failed" value="false"/&gt;
            &lt;/if&gt;
            &lt;else&gt;
                &lt;single-column name="cache_hit" value="half"/&gt;
            &lt;/else&gt;
        &lt;/case&gt;
      	&lt;single-column name="cached_ocr_json" value="${cached_ocr_json}" /&gt;
	&lt;/export&gt;
       &lt;/if&gt;
                &lt;else&gt;
                    	&lt;export include-original-data="true"&gt;
		&lt;single-column name="document_hash" value="${document_hash}" /&gt;
      	&lt;single-column name="no_cached_export_format" value="${no_cached_export_format}" /&gt;
      	&lt;single-column name="cache_hit" value="none"/&gt;
        &lt;single-column name="cached_ocr_json" value="${cached_ocr_json}" /&gt;
	&lt;/export&gt;
                &lt;/else&gt;
            &lt;/case&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>0f9a2bf3-a8bd-43ca-88dd-953b6c3871b5</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Look for OCR cache</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>0f9a2bf3-a8bd-43ca-88dd-953b6c3871b5</uuid>
                                            <version>
                                                <componentUuid>7cb14104-af75-43fe-aff5-86e9d8780b4f</componentUuid>
                                                <incrementalVersion>1.7</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-27T08:15:53Z</lastModified>
                                                <versionUuid>f80666d1-7e8c-4646-b0af-4dd8ca739574</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Look for OCR cache</title>
                                        <type>SINGLE</type>
                                        <uuid>156f7ef5-ad40-4af6-b692-6745c6a329c3</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>1339b2d0-655f-4d34-9ce0-9808950f4bb2</componentUuid>
                                            <incrementalVersion>1.9</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-27T08:15:53Z</lastModified>
                                            <versionUuid>e9f05ac5-f150-42a8-99f0-1da98a8035b9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>3</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>8aec73aa-d5ce-46da-a089-1a77ee291d99</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>cd6ab863-31b8-4ff7-96e0-04882d22d192</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get OCR result JSON and update it for comfortable using after.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; cached_ocr_result_list = new JsonSlurper().parseText(cached_ocr_json.toString());
		sys.defineVariable("cached_ocr_result_list", cached_ocr_result_list);
		
		List&lt;Map&gt; ocr_result_list = new ArrayList();
		if( sys.isVariableDefined("ocr_json")) {
			ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		}
		sys.defineVariable("ocr_result_list", ocr_result_list);

		Map&lt;String,Map&lt;String, String&gt;&gt; update_ocr_result_map = new HashMap();
		sys.defineVariable("update_ocr_result_map", update_ocr_result_map);
	]]&gt;&lt;/script&gt;
      
  	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="cached_ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
  
	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_map.getWrappedObject());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>27b4bfe7-c786-47e5-a784-29e630f88527</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Result JSON processing</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>27b4bfe7-c786-47e5-a784-29e630f88527</uuid>
                                            <version>
                                                <componentUuid>d92b7eb5-89f2-40ac-9873-11f9c60a6349</componentUuid>
                                                <incrementalVersion>1.1</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-03T14:58:21Z</lastModified>
                                                <versionUuid>93f0ad4a-c375-41bd-9bf0-53388f59a8fe</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Result JSON processing</title>
                                        <type>SINGLE</type>
                                        <uuid>5967587c-06c0-4fc3-9cfd-cb279159e617</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>2ea6bec4-e356-4a19-817d-9824e3bff92d</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T12:20:51Z</lastModified>
                                            <versionUuid>5485fb09-2839-407a-ad7f-f7138c1d80f9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>4</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>cdfc6656-f455-4c69-922a-2d442fc6be96</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>fd85a91a-0b7c-471b-929e-9f84e68dcd25</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get OCR result JSON and update it for comfortable using after.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; cached_ocr_result_list = new JsonSlurper().parseText(cached_ocr_json.toString());
		sys.defineVariable("cached_ocr_result_list", cached_ocr_result_list);
		
		List&lt;Map&gt; ocr_result_list = new ArrayList();
		if( sys.isVariableDefined("ocr_json")) {
			ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		}
		sys.defineVariable("ocr_result_list", ocr_result_list);

		Map&lt;String,Map&lt;String, String&gt;&gt; update_ocr_result_map = new HashMap();
		sys.defineVariable("update_ocr_result_map", update_ocr_result_map);
	]]&gt;&lt;/script&gt;
      
  	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="cached_ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
  
	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_map.getWrappedObject());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>27b4bfe7-c786-47e5-a784-29e630f88527</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Result JSON processing</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>27b4bfe7-c786-47e5-a784-29e630f88527</uuid>
                                            <version>
                                                <componentUuid>d92b7eb5-89f2-40ac-9873-11f9c60a6349</componentUuid>
                                                <incrementalVersion>1.1</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-03T14:58:21Z</lastModified>
                                                <versionUuid>93f0ad4a-c375-41bd-9bf0-53388f59a8fe</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Result JSON processing</title>
                                        <type>SINGLE</type>
                                        <uuid>5967587c-06c0-4fc3-9cfd-cb279159e617</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>2ea6bec4-e356-4a19-817d-9824e3bff92d</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T12:20:51Z</lastModified>
                                            <versionUuid>5485fb09-2839-407a-ad7f-f7138c1d80f9</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>4</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>72a42eb1-e99f-49ba-a8cf-0b56288301aa</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Type</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>672a118c-6b50-4657-ac64-8f9fbca983fb</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>642b57cc-6acf-4d32-be4a-d19623bd436a</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>GoTo OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>642b57cc-6acf-4d32-be4a-d19623bd436a</uuid>
                                            <version>
                                                <componentUuid>0f2aeff6-0b70-4ce8-809c-155796e62792</componentUuid>
                                                <incrementalVersion>1.1</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-03T14:58:21Z</lastModified>
                                                <versionUuid>f7a7ec6d-88ea-4f2f-bce1-4d3f9ce84ac9</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>GoTo OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>a7b9d471-e1f7-4101-b1ac-cff093698bc9</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>abe90e37-fcae-4031-94c0-30fa05b2f5d9</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T12:20:51Z</lastModified>
                                            <versionUuid>8fc8908e-9596-4cbe-889b-dafac89fd777</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>5</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>9a7dc387-dad3-40d9-b3ed-abd7f687faaa</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Type</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>814d29af-6a9f-44b1-8a46-cf788173ec27</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>642b57cc-6acf-4d32-be4a-d19623bd436a</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>GoTo OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>642b57cc-6acf-4d32-be4a-d19623bd436a</uuid>
                                            <version>
                                                <componentUuid>0f2aeff6-0b70-4ce8-809c-155796e62792</componentUuid>
                                                <incrementalVersion>1.1</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-03T14:58:21Z</lastModified>
                                                <versionUuid>f7a7ec6d-88ea-4f2f-bce1-4d3f9ce84ac9</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>GoTo OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>a7b9d471-e1f7-4101-b1ac-cff093698bc9</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>abe90e37-fcae-4031-94c0-30fa05b2f5d9</componentUuid>
                                            <incrementalVersion>1.1</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T12:20:51Z</lastModified>
                                            <versionUuid>8fc8908e-9596-4cbe-889b-dafac89fd777</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>5</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>11643fd2-88fe-4d43-b6bf-2de5f45e4b2d</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>ebccc56b-0199-40ba-a330-172dfc93a52a</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>true</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <description>OCR XML with variants to viewable XML</description>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make XSLT XML Enrichment with WORD and DIV tags processing for "row processed documents" from previous step, to prepare them for valid view on the TOOD HT, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="java" charset="UTF-8"&gt;
  	
	&lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);

		String ocr_document_name = ocr_result_list.get(0).get("ocr_document_name").toString();
		sys.defineVariable("ocr_document_name", ocr_document_name);

		String ocr_raw_processed_document_name = ocr_result_list.get(0).get("ocr_raw_processed_document_name").toString();
		sys.defineVariable("ocr_raw_processed_document_name", ocr_raw_processed_document_name);

		String ocr_document_format = ocr_result_list.get(0).get("ocr_document_format").toString();
		sys.defineVariable("ocr_document_format", ocr_document_format);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="placeholder"&gt;
		&lt;template&gt;converted_pdf_link_PLACEHOLDER&lt;/template&gt;
	&lt;/var-def&gt;

  	&lt;var-def name="jsonKey"&gt;
		&lt;template&gt;fileList-1&lt;/template&gt;
	&lt;/var-def&gt;

    &lt;var-def name="lineHeight"&gt;
		&lt;template&gt;${use_line_height}&lt;/template&gt;
	&lt;/var-def&gt;  

  &lt;s3 bucket="${s3_bucket_name}"&gt;
		&lt;var-def name="xmlWordsDocument"&gt;
			&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_raw_processed_document_name}.${ocr_document_format}" /&gt;
		&lt;/var-def&gt;
	&lt;/s3&gt;
  
	&lt;var-def name="imageLink"&gt;
		&lt;script return="getJSONValue(json_file_urls_for_manual.toString(), jsonKey.toString())"&gt;&lt;![CDATA[
			import org.json.XML;
			import java.util.List;
			import java.util.ArrayList;
			import org.json.JSONObject;
			import org.json.JSONArray;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;


			static String getJSONValue(String jsonString, String key) {
				try{
					JSONObject json = new JSONObject(jsonString);
					return json.get(key).get("directUrl").toString();
				} catch (Exception e){
					return "";
				}
			}

			public static String addImgTag(String xml, String placeholder, String fileUrl){
				return xml.replace(placeholder, fileUrl.substring(0, fileUrl.length()-5));
			}

		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;

&lt;!-- XSLT transformation
@date: 07/17/2018
@Author: Mikalai Yatskevich mikalai_yatskevich@epam.com
 v3
--&gt;
	&lt;var-def name="htmlWordsDocumentRaw"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="xmlWordsDocument" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;template&gt;&lt;![CDATA[ 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml"&gt;
    &lt;xsl:output method="html" omit-xml-declaration="yes" media-type="text/html" indent="no"/&gt;
    &lt;xsl:variable name="currentHeight"&gt;
        &lt;xsl:value-of select="sum(//page/@height)"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="isLineHeight"&gt;
        &lt;xsl:value-of select="true()"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="minimalFontHeight"&gt;
        &lt;xsl:value-of select="15"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopChars"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`&#8217;~!@#$%^\*()_-=+[]{}&#172;;:,./?|&#8220;&#174;&#171;&#187;&#8212;&#176;| "'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopCharsFirstWordInLine"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`&#8217;~!@#$%^\/*()_-=+[]{}&#172;;:?|&#8220;&#174;&#171;&#187;&#8212;&#176;|"'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberChars"&gt;
        &lt;xsl:value-of select="'-1234567890'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberSeparators"&gt;
        &lt;xsl:value-of select="'., '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="dateSeparators"&gt;
        &lt;xsl:value-of select="'./-'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="space"&gt;
        &lt;xsl:value-of select="' '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:template match="wfocr:document"&gt;
        &lt;html&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;!-- Version 1.7 --&amp;gt;&lt;/xsl:text&gt;
            &lt;head&gt;
                &lt;style type="text/css"&gt;div.n {position:absolute;white-space:nowrap;text-align:left;vertical-align:bottom;letter-spacing:0px;word-spacing:0px;} div.rc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-lr;white-space:nowrap;} div.rcc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-rl;transform: rotate(180deg);white-space:nowrap;} div.t {position:absolute;white-space:nowrap;}&lt;/style&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;xsl:attribute name="style"&gt;width:&lt;xsl:value-of select="./page/@width"/&gt;px; height:&lt;xsl:value-of select="$currentHeight"/&gt;px; border: 1px solid black; background-repeat: no-repeat; font-family: 'Helvetica', 'Arial', sans-serif; padding: 0;
                &lt;/xsl:attribute&gt;
                &lt;document id="TOOD"&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;xsl:apply-templates select="./wfocr:page"/&gt;
                &lt;/document&gt;
            &lt;/body&gt;
        &lt;/html&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:page"&gt;
        &lt;page&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="sum(preceding::*[@resolution]/@height)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="previousPagesCount"&gt;
                &lt;xsl:value-of select="count(preceding::*[@resolution])+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="src"&gt;
                &lt;xsl:value-of select="concat('converted_pdf_link_PLACEHOLDER',$previousPagesCount,'.png')"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;img src="&lt;/xsl:text&gt;
            &lt;xsl:value-of select="$src"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;" style="&lt;/xsl:text&gt;position:absolute;top:&lt;xsl:value-of select="$pageHeight"/&gt;px;width:&lt;xsl:value-of select="@width"/&gt;px; height:&lt;xsl:value-of select="@height"/&gt;px; opacity:0.1; margin-left: 0px; margin-top: 0px;
            &lt;xsl:text disable-output-escaping="yes"&gt;" &amp;gt;&amp;lt;/img&amp;gt;&lt;/xsl:text&gt;
            &lt;xsl:apply-templates select="./wfocr:block"/&gt;
        &lt;/page&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:block"&gt;
        &lt;xsl:choose&gt;
            &lt;xsl:when test="@blockType='Table'"&gt;
                &lt;table&gt;
                    &lt;tbody&gt;
                        &lt;xsl:apply-templates select="./wfocr:row"/&gt;
                    &lt;/tbody&gt;
                &lt;/table&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:when test="@blockType='Text'"&gt;
                &lt;block&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;p&gt;
                        &lt;xsl:apply-templates select="./wfocr:text"/&gt;
                    &lt;/p&gt;
                &lt;/block&gt;
            &lt;/xsl:when&gt;
        &lt;/xsl:choose&gt;
        &lt;xsl:copy-of select="./separator"/&gt;
        &lt;xsl:copy-of select="./region"/&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:row"&gt;

        &lt;tr&gt;
            &lt;xsl:apply-templates select="./wfocr:cell"/&gt;
        &lt;/tr&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:cell"&gt;

        &lt;xsl:variable name="cellHeight"&gt;
            &lt;xsl:value-of select="@height"/&gt;
        &lt;/xsl:variable&gt;

        &lt;xsl:variable name="cellWidth"&gt;
            &lt;xsl:value-of select="@width"/&gt;
        &lt;/xsl:variable&gt;
        &lt;td&gt;
            &lt;xsl:attribute name="style"&gt;height:&lt;xsl:value-of select="$cellHeight"/&gt;px;width:&lt;xsl:value-of select="$cellWidth"/&gt;px;
            &lt;/xsl:attribute&gt;
            &lt;xsl:apply-templates select="./wfocr:text"/&gt;
        &lt;/td&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:text"&gt;
        &lt;text&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:apply-templates select="./wfocr:par"/&gt;
        &lt;/text&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:par"&gt;
        &lt;par&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:apply-templates select="./wfocr:line"/&gt;
        &lt;/par&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:line"&gt;

        &lt;line&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="number(sum(preceding::*[@resolution]/@height))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineId"&gt;
                &lt;xsl:value-of select="generate-id(.)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineTop"&gt;
                &lt;xsl:value-of select="number(@t)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineBottom"&gt;
                &lt;xsl:value-of select="number(@b)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRight"&gt;
                &lt;xsl:value-of select="number(@r)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineLeft"&gt;
                &lt;xsl:value-of select="number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineFirstCharacterLeft"&gt;
                &lt;xsl:value-of select="number(descendant::wfocr:charParams[@l][1]/@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedFontHeight"&gt;
                &lt;xsl:value-of select="number($lineRight - $lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightOld"&gt;
                &lt;xsl:value-of select="number($lineBottom - $lineTop)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charBottoms"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@b))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charTops"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@t))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="countElements"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@b]))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="middle"&gt;
                &lt;xsl:value-of select="ceiling($countElements div 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="even"&gt;
                &lt;xsl:value-of select="not($countElements mod 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="chosenElement"&gt;
                &lt;xsl:value-of select="count(descendant::wfocr:charParams[@b][@t]) div 10+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeightChar"&gt;
                &lt;xsl:for-each select="descendant::wfocr:charParams[@b][@t]"&gt;
                    &lt;xsl:sort data-type="number" select="string(number(./@b)-number(./@t))" order="descending"/&gt;
                    &lt;xsl:if test="position() = $middle"&gt;
                        &lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;
                    &lt;/xsl:if&gt;
                &lt;/xsl:for-each&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="totalCharHeight"&gt;
                &lt;xsl:value-of select="number($charBottoms)-number($charTops)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charCount"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightComputed"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="number($lineHeightOld) div 2 &amp;gt; number($lineHeightChar)"&gt;
                        &lt;xsl:value-of select="number($lineHeightChar)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineHeightOld)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeight"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="$isLineHeight"&gt;
                        &lt;xsl:value-of select="$lineHeightOld"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:choose&gt;
                            &lt;xsl:when test="number($lineHeightComputed) &amp;lt; number($minimalFontHeight)"&gt;
                                &lt;xsl:value-of select="number($minimalFontHeight)"/&gt;
                            &lt;/xsl:when&gt;
                            &lt;xsl:otherwise&gt;
                                &lt;xsl:value-of select="number($lineHeightComputed)"/&gt;
                            &lt;/xsl:otherwise&gt;
                        &lt;/xsl:choose&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="fontHeight"&gt;
                &lt;xsl:value-of select="number($lineHeight)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedLineHeight"&gt;
                &lt;xsl:value-of select="number($lineRight) - number($lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRightValue"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="normalize-space(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)!=NaN"&gt;
                        &lt;xsl:value-of select="number(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineRight)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineWidth"&gt;
                &lt;xsl:value-of select="number($lineRightValue) - number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="orientation"&gt;
                &lt;xsl:value-of disable-output-escaping="yes" select="normalize-space(ancestor::wfocr:text[@orientation]/@orientation)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;formatting&gt;
                &lt;xsl:copy-of select="./@*"/&gt;

                &lt;xsl:variable name="sumConfidence"&gt;
                    &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="numNodes"&gt;
                    &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="charConfidence"&gt;
                    &lt;xsl:value-of select="number($sumConfidence div $numNodes)"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstCharInLine"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[1]/text())"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="secondCharInLine"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[2]/text())"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstSymbolLeft"&gt;
                    &lt;xsl:value-of select="descendant::wfocr:charParams[not(contains($numberSeparators,normalize-space(self::*/text()))) and
                    not(contains($dateSeparators,normalize-space(self::*/text()))) and
                    not(contains($numberChars,normalize-space(self::*/text()))) and
                    string-length(normalize-space(self::*/text())) &amp;gt; 0][1]/@l[1]"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstSymbolLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstSymbolLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="number($preFirstSymbolLeft)"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstSpaceLeft"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstSpaceLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstSpaceLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="number($preFirstSpaceLeft)"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstStopCharLeft"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstStopCharLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstStopCharLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="$preFirstStopCharLeft"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="string-length(normalize-space($orientation))=0"&gt;
                        &lt;xsl:variable name="followingSpaceFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($preFirstSymbolLeft) = 0"&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="((string-length(normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and
                                (not(contains($numberChars, $firstCharInLine))))"&gt;
                                            &lt;xsl:value-of select="$firstSpaceLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstSpaceLeft &amp;gt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSpaceLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstSpaceLeft &amp;lt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSymbolLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="followingStopCharFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($preFirstSymbolLeft) = 0"&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="(string-length(normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0) and
                                (not(contains($numberChars, $firstCharInLine)))"&gt;
                                            &lt;xsl:value-of select="$firstStopCharLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstStopCharLeft &amp;gt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstStopCharLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstStopCharLeft &amp;lt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSymbolLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="rightFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="number($followingSpaceFirstWordInLine) &amp;lt; number($followingStopCharFirstWordInLine)"&gt;
                                    &lt;xsl:value-of select="number($followingSpaceFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($followingStopCharFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="leftFirstWordInLine"&gt;
                            &lt;xsl:value-of select="$lineLeft"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:variable name="widthFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length(normalize-space($rightFirstWordInLine))=0"&gt;
                                    &lt;xsl:value-of select="number($lineRight)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($rightFirstWordInLine)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;px; width:&lt;xsl:value-of select="number($widthFirstWordInLine)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValueThatCanBeEmpty"&gt;
                                &lt;xsl:value-of select="normalize-space(./following::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./following::wfocr:*[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingCharParamsTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./following::wfocr:charParams[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="precedingTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./preceding::wfocr:*[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="precedingCharParamsTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./preceding-sibling::wfocr:charParams[1])"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="isLastCharInLine"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="($followingTagId &amp;lt; $followingCharParamsTagId) or ($followingTagId &amp;gt; $followingCharParamsTagId)"&gt;
                                        &lt;xsl:value-of select="true()"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isFirstCharInLineNew"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="($precedingTagId &amp;lt; $precedingCharParamsTagId) or ($precedingTagId &amp;gt; $precedingCharParamsTagId)"&gt;
                                        &lt;xsl:value-of select="true()"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValue"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($rightCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="$rightCharValueThatCanBeEmpty"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="'1'"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingNumberChar"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][contains($numberChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][contains($numberChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingLetter"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][not(contains($numberChars,normalize-space(self::*/text()))) and not(contains($stopChars,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][not(contains($numberChars,normalize-space(self::*/text()))) and not(contains($stopChars,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isNumberChar"&gt;
                                &lt;xsl:value-of select="contains($numberChars,$charValue)"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$charValue)) and not(contains($stopChars,$charValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isRightNumberChar"&gt;
                                &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($rightCharValueThatCanBeEmpty)&gt;0"&gt;
                                &lt;xsl:value-of select="contains($numberChars,$rightCharValue)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="false()"/&gt;
                                &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isRightLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$rightCharValue)) and not(contains($stopChars,$rightCharValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingNumberLetterFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="$isNumberChar"&gt;
                                        &lt;xsl:value-of select="$followingLetter"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="$isLetterChar"&gt;
                                        &lt;xsl:value-of select="$followingNumberChar"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;


                            &lt;xsl:variable name="preFstSymbolLeft"&gt;
                                &lt;xsl:value-of select="following::wfocr:charParams[not(contains($numberSeparators,normalize-space(self::*/text()))) and
                    (not(contains($numberChars, $charValue)) or (contains($numberChars, $charValue) and  not(contains($dateSeparators,normalize-space(self::*/text()))))) and
                    not(contains($numberChars,normalize-space(self::*/text()))) and
                    string-length(normalize-space(self::*/text())) &amp;gt; 0][1]/@l[1]"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstSymbolLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstSymbolLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:value-of select="number($preFstSymbolLeft)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="preFstSpaceLeft"&gt;
                                &lt;xsl:value-of select="normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstSpaceLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSpaceLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstSpaceLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:choose&gt;
                                                    &lt;xsl:when test="number($preFstSpaceLeft) &amp;lt; number($fstSymbolLeft)"&gt;
                                                        &lt;xsl:value-of select="number($fstSymbolLeft)"/&gt;
                                                    &lt;/xsl:when&gt;
                                                    &lt;xsl:otherwise&gt;
                                                        &lt;xsl:value-of select="number($preFstSpaceLeft)"/&gt;
                                                    &lt;/xsl:otherwise&gt;
                                                &lt;/xsl:choose&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="preFstStopCharLeft"&gt;
                                &lt;xsl:value-of select="normalize-space(following::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstStopCharLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstStopCharLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstStopCharLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:value-of select="$preFstStopCharLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;


                            &lt;xsl:variable name="followingSpaceFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) = 0"&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) and (not(contains($numberSeparators, $rightCharValue))) and (not(contains($dateSeparators, $rightCharValue)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;gt; $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSpaceLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;lt;= $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSymbolLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) = 0"&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) and (not(contains($numberSeparators, $rightCharValue))) and (not(contains($dateSeparators, $rightCharValue)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;gt; $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSpaceLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;lt;= $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSymbolLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingSpaceFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) "&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;lt; $lineRightValue) and
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@t[1]))) &amp;gt; number(./@b)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0)"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="right"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(number($followingSpaceFst) &amp;lt;= number($followingStopCharFst)) and (number($followingSpaceFst) &amp;lt;= number($followingNumberLetterFirst))"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="(number($followingStopCharFst) &amp;lt;= number($followingSpaceFst)) and (number($followingStopCharFst) &amp;lt;= number($followingNumberLetterFirst))"&gt;
                                        &lt;xsl:value-of select="$followingStopCharFst"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="(number($followingNumberLetterFirst) &amp;lt;= number($followingSpaceFst)) and (number($followingNumberLetterFirst) &amp;lt;= number($followingStopCharFst))"&gt;
                                        &lt;xsl:value-of select="$followingNumberLetterFirst"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($followingSpaceFirst) &amp;lt; number($followingStopCharFst)"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFirst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isTab"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(./@isTab)) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(./@isTab)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="left"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="$isTab = 0"&gt;
                                        &lt;xsl:value-of select="number(./@r[1])"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number(following-sibling::wfocr:charParams[not(self::*[@isTab])][1]/@r[1])"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="width"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($right))=0"&gt;
                                        &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="widthFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($rightFst))=0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($lineRight)-number($left) &amp;gt; 1"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($rightFst)-number($left) &amp;gt; 0"&gt;
                                                &lt;xsl:value-of select="number($rightFst)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isFirstCharInLine"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($lineFirstCharacterLeft) = number(./@l[1])"&gt;
                                        &lt;xsl:value-of select="1"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="leftCharValueThatCanBeEmpty"&gt;
                                &lt;xsl:value-of select="normalize-space(./preceding::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="leftCharValue"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($leftCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="$leftCharValueThatCanBeEmpty"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="'1'"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLeftCharNumber"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($leftCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="contains($numberChars,$leftCharValue)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLeftLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$leftCharValue)) and not(contains($stopChars,$leftCharValue))"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="charRight"&gt;
                                &lt;xsl:value-of select="./following-sibling::wfocr:charParams[1]/@l[1]"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="charLength"&gt;
                                &lt;xsl:value-of select="string-length(normalize-space($charValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="textValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingSibling"&gt;
                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;

                                                        &lt;xsl:choose&gt;
                                                            &lt;xsl:when test="((((not($charValue) or contains($stopChars, $charValue)) ) or
                                                        (contains($isLetterChar,'true') and contains($isLeftCharNumber, 'true') and contains($isFirstCharInLineNew, 'false')) or (contains($isNumberChar,'true') and contains($isLeftLetterChar,'true') and contains($isFirstCharInLineNew, 'false') ) or
                                                            (contains($numberChars, $leftCharValue) and not(contains($numberChars, $charValue)) and contains($numberChars, $rightCharValue) and not(contains($stopChars, $charValue)) and not($isFirstCharInLine='1'))) ) and
                                                        (($charLength &amp;gt; 0 and not(contains($numberSeparators, $charValue))) or
                                                        ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                                                        (($charLength &amp;gt; 0) and not(contains($numberSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue)))) and
                                                        (($charLength &amp;gt; 0 and not(contains($dateSeparators, $charValue))) or
                                                        ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                                                        (($charLength &amp;gt; 0) and not(contains($dateSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))))"&gt;

                                                                &lt;xsl:variable name="followingSpace"&gt;
                                                                    &lt;xsl:choose&gt;
                                                                        &lt;xsl:when test="string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0"&gt;
                                                                            &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                                                        &lt;/xsl:when&gt;
                                                                        &lt;xsl:otherwise&gt;
                                                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                                        &lt;/xsl:otherwise&gt;
                                                                    &lt;/xsl:choose&gt;
                                                                &lt;/xsl:variable&gt;
                                                                &lt;xsl:variable name="followingStopChar"&gt;
                                                                    &lt;xsl:choose&gt;
                                                                        &lt;xsl:when test="string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0"&gt;
                                                                            &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                                                        &lt;/xsl:when&gt;
                                                                        &lt;xsl:otherwise&gt;
                                                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                                        &lt;/xsl:otherwise&gt;
                                                                    &lt;/xsl:choose&gt;
                                                                &lt;/xsl:variable&gt;
                                                                &lt;xsl:if test="number($width) &amp;gt; -1"&gt;
                                                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                                                                    &lt;xsl:if test="(string-length(normalize-space($charValue)) &amp;gt; 0)"&gt;

                                                                        &lt;word&gt;
                                                                            &lt;xsl:attribute name="t"&gt;
                                                                                &lt;xsl:value-of select="number(./@t[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="b"&gt;
                                                                                &lt;xsl:value-of select="number(./@b[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="l"&gt;
                                                                                &lt;xsl:value-of select="number(./@l[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="r"&gt;
                                                                                &lt;xsl:value-of select="number(./@r[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="isTab"&gt;
                                                                                &lt;xsl:value-of select="'1'"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;div&gt;
                                                                                &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l[1])"/&gt;px; width:&lt;xsl:value-of select="number(./@r[1])-number(./@l[1])"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;&lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="class"&gt;n&lt;/xsl:attribute&gt;
                                                                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                                                                &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&lt;/xsl:text&gt;
                                                                            &lt;/div&gt;
                                                                        &lt;/word&gt;
                                                                    &lt;/xsl:if&gt;
                                                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r)+number($width)"/&gt;" l="&lt;xsl:value-of select="$left"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="$left"/&gt;px; width:&lt;xsl:value-of select="number($widthFst)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;" &lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                                                                &lt;/xsl:if&gt;
                                                            &lt;/xsl:when&gt;
                                                            &lt;xsl:otherwise&gt;
                                                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                                            &lt;/xsl:otherwise&gt;
                                                        &lt;/xsl:choose&gt;
                                                        &lt;!--                            &lt;/xsl:if&gt;--&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedClockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(descendant::*[not(self::*[@charConfidence])][1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::*[1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startHeight"&gt;
                            &lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt;class="rc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue) or contains($stopChars, $charValue)"&gt;

                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::wfocr:charParams[@charConfidence])][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::wfocr:charParams/text()))][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and string-length(normalize-space(following-sibling::wfocr:charParams[last()]/@b))=0"&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[last()]/@b)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;lt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;gt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="isTab"&gt;
                                            &lt;xsl:value-of select="'1'"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div onload="divSize(this)" style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;

                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedCounterclockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(@b)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::wfocr:charParams[1]/@b)"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="rcc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue)or contains($stopChars, $charValue)"&gt;
                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::*/text()))][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and (string-length(normalize-space(following-sibling::*[last()]/@t[1]))&gt;0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::*[last()][@t]/@t[1])"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0) and (string-length($followingSpace)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)&gt;0) and ($followingSpace &amp;lt; $followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="string-length($followingStopChar)&gt;0"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="0"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rcc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rcc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;

                    &lt;xsl:otherwise&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not(normalize-space(./text()))"&gt;
                                    &lt;xsl:variable name="right"&gt;
                                        &lt;xsl:value-of select="number(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="left"&gt;
                                        &lt;xsl:value-of select="number(./@r)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="width"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not(normalize-space($right))"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt; &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r[1])+number($width)"/&gt;" l="&lt;xsl:value-of select="number(./@r[1])"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@r[1])"/&gt;px; width:&lt;xsl:value-of select="number($width)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/formatting&gt;
        &lt;/line&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;

]]&gt;&lt;/template&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;
	&lt;/var-def&gt;

	&lt;var-def name="htmlWordsDocument"&gt;
		&lt;script return="addImgTag(htmlWordsDocumentRaw.toString(), placeholder.toString(), imageLink.toString())"&gt;&lt;/script&gt;
	&lt;/var-def&gt;

	&lt;var-def name="ocr_tood_document_url"&gt;
        &lt;s3 bucket="${s3_bucket_name}"&gt;
            &lt;s3-put path="${bp_run_id}/${document_uuid}/${ocr_document_name}-tood.xml" acl="PublicRead" content-type="text/html; charset=utf-8" content-disposition="inline"&gt;
                &lt;var name="htmlWordsDocument" /&gt;
            &lt;/s3-put&gt;
        &lt;/s3&gt;
    &lt;/var-def&gt;
    
  	&lt;loop item="map" maxloops="1"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;
				
				map.getWrappedObject().put("ocr_tood_document_url", ocr_tood_document_url.toString());
				map.getWrappedObject().put("ocr_tood_document_name", ocr_tood_document_url.toString().substring(ocr_tood_document_url.toString().lastIndexOf("/") + 1, ocr_tood_document_url.toString().lastIndexOf(".")));
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));

				Gson gson = new Gson();
				String result_json = gson.toJson(update_ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

    &lt;export include-original-data="true"&gt;
      	&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>94f49144-6163-4cef-9379-26f9737a0fec</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] XSLT XML Enrichment with WORD and DIV tags</name>
                                            <machineConfigOptions/>
                                            <source>
                                                <availability></availability>
                                                <deleted>false</deleted>
                                                <description>100 local threads</description>
                                                <equallyDistributeLoad>false</equallyDistributeLoad>
                                                <name>100 local threads</name>
                                                <prioritizeEarlierRuns>true</prioritizeEarlierRuns>
                                                <proxySettings>
                                                    <password></password>
                                                    <server></server>
                                                    <username></username>
                                                    <validationEnabled>false</validationEnabled>
                                                </proxySettings>
                                                <threadCount>100</threadCount>
                                                <threadsPerNode>false</threadsPerNode>
                                                <timeZone>GMT</timeZone>
                                                <tps>0</tps>
                                                <url></url>
                                                <version>
                                                    <componentUuid>5c9d7f49-7016-11e6-a889-22000b994623</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2010-01-01T00:00:00Z</lastModified>
                                                    <versionUuid>bd5ce11b-7017-11e6-a889-22000b994623</versionUuid>
                                                </version>
                                            </source>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>94f49144-6163-4cef-9379-26f9737a0fec</uuid>
                                            <version>
                                                <componentUuid>37562edc-07fc-4069-bd66-567758de3173</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-01T11:16:58Z</lastModified>
                                                <versionUuid>77081b0f-9a32-4284-b6db-efe8fc268644</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_MANUALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] XSLT XML Enrichment with WORD and DIV tags</title>
                                        <type>SINGLE</type>
                                        <uuid>183f85b1-2f07-4a01-baa7-7eef101da698</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>75a7459e-a2ee-4869-937a-d31a9fe92c2b</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-01T11:16:58Z</lastModified>
                                            <versionUuid>b6fa3947-1236-45dc-908f-e74255be4334</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>6</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>d6bf49be-0e35-405f-9b12-0ba9dd543068</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>bb0f253d-6143-4033-90c6-a09cc3a995ee</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>true</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <description>OCR XML with variants to viewable XML</description>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make XSLT XML Enrichment with WORD and DIV tags processing for "row processed documents" from previous step, to prepare them for valid view on the TOOD HT, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="java" charset="UTF-8"&gt;
  	
	&lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);

		String ocr_document_name = ocr_result_list.get(0).get("ocr_document_name").toString();
		sys.defineVariable("ocr_document_name", ocr_document_name);

		String ocr_raw_processed_document_name = ocr_result_list.get(0).get("ocr_raw_processed_document_name").toString();
		sys.defineVariable("ocr_raw_processed_document_name", ocr_raw_processed_document_name);

		String ocr_document_format = ocr_result_list.get(0).get("ocr_document_format").toString();
		sys.defineVariable("ocr_document_format", ocr_document_format);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="placeholder"&gt;
		&lt;template&gt;converted_pdf_link_PLACEHOLDER&lt;/template&gt;
	&lt;/var-def&gt;

  	&lt;var-def name="jsonKey"&gt;
		&lt;template&gt;fileList-1&lt;/template&gt;
	&lt;/var-def&gt;

    &lt;var-def name="lineHeight"&gt;
		&lt;template&gt;${use_line_height}&lt;/template&gt;
	&lt;/var-def&gt;  

  &lt;s3 bucket="${s3_bucket_name}"&gt;
		&lt;var-def name="xmlWordsDocument"&gt;
			&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_raw_processed_document_name}.${ocr_document_format}" /&gt;
		&lt;/var-def&gt;
	&lt;/s3&gt;
  
	&lt;var-def name="imageLink"&gt;
		&lt;script return="getJSONValue(json_file_urls_for_manual.toString(), jsonKey.toString())"&gt;&lt;![CDATA[
			import org.json.XML;
			import java.util.List;
			import java.util.ArrayList;
			import org.json.JSONObject;
			import org.json.JSONArray;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;


			static String getJSONValue(String jsonString, String key) {
				try{
					JSONObject json = new JSONObject(jsonString);
					return json.get(key).get("directUrl").toString();
				} catch (Exception e){
					return "";
				}
			}

			public static String addImgTag(String xml, String placeholder, String fileUrl){
				return xml.replace(placeholder, fileUrl.substring(0, fileUrl.length()-5));
			}

		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;

&lt;!-- XSLT transformation
@date: 07/17/2018
@Author: Mikalai Yatskevich mikalai_yatskevich@epam.com
 v3
--&gt;
	&lt;var-def name="htmlWordsDocumentRaw"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="xmlWordsDocument" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;template&gt;&lt;![CDATA[ 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml"&gt;
    &lt;xsl:output method="html" omit-xml-declaration="yes" media-type="text/html" indent="no"/&gt;
    &lt;xsl:variable name="currentHeight"&gt;
        &lt;xsl:value-of select="sum(//page/@height)"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="isLineHeight"&gt;
        &lt;xsl:value-of select="true()"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="minimalFontHeight"&gt;
        &lt;xsl:value-of select="15"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopChars"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`&#8217;~!@#$%^\*()_-=+[]{}&#172;;:,./?|&#8220;&#174;&#171;&#187;&#8212;&#176;| "'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopCharsFirstWordInLine"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`&#8217;~!@#$%^\/*()_-=+[]{}&#172;;:?|&#8220;&#174;&#171;&#187;&#8212;&#176;|"'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberChars"&gt;
        &lt;xsl:value-of select="'-1234567890'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberSeparators"&gt;
        &lt;xsl:value-of select="'., '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="dateSeparators"&gt;
        &lt;xsl:value-of select="'./-'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="space"&gt;
        &lt;xsl:value-of select="' '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:template match="wfocr:document"&gt;
        &lt;html&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;!-- Version 1.7 --&amp;gt;&lt;/xsl:text&gt;
            &lt;head&gt;
                &lt;style type="text/css"&gt;div.n {position:absolute;white-space:nowrap;text-align:left;vertical-align:bottom;letter-spacing:0px;word-spacing:0px;} div.rc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-lr;white-space:nowrap;} div.rcc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-rl;transform: rotate(180deg);white-space:nowrap;} div.t {position:absolute;white-space:nowrap;}&lt;/style&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;xsl:attribute name="style"&gt;width:&lt;xsl:value-of select="./page/@width"/&gt;px; height:&lt;xsl:value-of select="$currentHeight"/&gt;px; border: 1px solid black; background-repeat: no-repeat; font-family: 'Helvetica', 'Arial', sans-serif; padding: 0;
                &lt;/xsl:attribute&gt;
                &lt;document id="TOOD"&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;xsl:apply-templates select="./wfocr:page"/&gt;
                &lt;/document&gt;
            &lt;/body&gt;
        &lt;/html&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:page"&gt;
        &lt;page&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="sum(preceding::*[@resolution]/@height)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="previousPagesCount"&gt;
                &lt;xsl:value-of select="count(preceding::*[@resolution])+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="src"&gt;
                &lt;xsl:value-of select="concat('converted_pdf_link_PLACEHOLDER',$previousPagesCount,'.png')"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;img src="&lt;/xsl:text&gt;
            &lt;xsl:value-of select="$src"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;" style="&lt;/xsl:text&gt;position:absolute;top:&lt;xsl:value-of select="$pageHeight"/&gt;px;width:&lt;xsl:value-of select="@width"/&gt;px; height:&lt;xsl:value-of select="@height"/&gt;px; opacity:0.1; margin-left: 0px; margin-top: 0px;
            &lt;xsl:text disable-output-escaping="yes"&gt;" &amp;gt;&amp;lt;/img&amp;gt;&lt;/xsl:text&gt;
            &lt;xsl:apply-templates select="./wfocr:block"/&gt;
        &lt;/page&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:block"&gt;
        &lt;xsl:choose&gt;
            &lt;xsl:when test="@blockType='Table'"&gt;
                &lt;table&gt;
                    &lt;tbody&gt;
                        &lt;xsl:apply-templates select="./wfocr:row"/&gt;
                    &lt;/tbody&gt;
                &lt;/table&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:when test="@blockType='Text'"&gt;
                &lt;block&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;p&gt;
                        &lt;xsl:apply-templates select="./wfocr:text"/&gt;
                    &lt;/p&gt;
                &lt;/block&gt;
            &lt;/xsl:when&gt;
        &lt;/xsl:choose&gt;
        &lt;xsl:copy-of select="./separator"/&gt;
        &lt;xsl:copy-of select="./region"/&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:row"&gt;

        &lt;tr&gt;
            &lt;xsl:apply-templates select="./wfocr:cell"/&gt;
        &lt;/tr&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:cell"&gt;

        &lt;xsl:variable name="cellHeight"&gt;
            &lt;xsl:value-of select="@height"/&gt;
        &lt;/xsl:variable&gt;

        &lt;xsl:variable name="cellWidth"&gt;
            &lt;xsl:value-of select="@width"/&gt;
        &lt;/xsl:variable&gt;
        &lt;td&gt;
            &lt;xsl:attribute name="style"&gt;height:&lt;xsl:value-of select="$cellHeight"/&gt;px;width:&lt;xsl:value-of select="$cellWidth"/&gt;px;
            &lt;/xsl:attribute&gt;
            &lt;xsl:apply-templates select="./wfocr:text"/&gt;
        &lt;/td&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:text"&gt;
        &lt;text&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:apply-templates select="./wfocr:par"/&gt;
        &lt;/text&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:par"&gt;
        &lt;par&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:apply-templates select="./wfocr:line"/&gt;
        &lt;/par&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:line"&gt;

        &lt;line&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="number(sum(preceding::*[@resolution]/@height))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineId"&gt;
                &lt;xsl:value-of select="generate-id(.)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineTop"&gt;
                &lt;xsl:value-of select="number(@t)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineBottom"&gt;
                &lt;xsl:value-of select="number(@b)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRight"&gt;
                &lt;xsl:value-of select="number(@r)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineLeft"&gt;
                &lt;xsl:value-of select="number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineFirstCharacterLeft"&gt;
                &lt;xsl:value-of select="number(descendant::wfocr:charParams[@l][1]/@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedFontHeight"&gt;
                &lt;xsl:value-of select="number($lineRight - $lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightOld"&gt;
                &lt;xsl:value-of select="number($lineBottom - $lineTop)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charBottoms"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@b))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charTops"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@t))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="countElements"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@b]))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="middle"&gt;
                &lt;xsl:value-of select="ceiling($countElements div 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="even"&gt;
                &lt;xsl:value-of select="not($countElements mod 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="chosenElement"&gt;
                &lt;xsl:value-of select="count(descendant::wfocr:charParams[@b][@t]) div 10+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeightChar"&gt;
                &lt;xsl:for-each select="descendant::wfocr:charParams[@b][@t]"&gt;
                    &lt;xsl:sort data-type="number" select="string(number(./@b)-number(./@t))" order="descending"/&gt;
                    &lt;xsl:if test="position() = $middle"&gt;
                        &lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;
                    &lt;/xsl:if&gt;
                &lt;/xsl:for-each&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="totalCharHeight"&gt;
                &lt;xsl:value-of select="number($charBottoms)-number($charTops)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charCount"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightComputed"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="number($lineHeightOld) div 2 &amp;gt; number($lineHeightChar)"&gt;
                        &lt;xsl:value-of select="number($lineHeightChar)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineHeightOld)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeight"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="$isLineHeight"&gt;
                        &lt;xsl:value-of select="$lineHeightOld"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:choose&gt;
                            &lt;xsl:when test="number($lineHeightComputed) &amp;lt; number($minimalFontHeight)"&gt;
                                &lt;xsl:value-of select="number($minimalFontHeight)"/&gt;
                            &lt;/xsl:when&gt;
                            &lt;xsl:otherwise&gt;
                                &lt;xsl:value-of select="number($lineHeightComputed)"/&gt;
                            &lt;/xsl:otherwise&gt;
                        &lt;/xsl:choose&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="fontHeight"&gt;
                &lt;xsl:value-of select="number($lineHeight)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedLineHeight"&gt;
                &lt;xsl:value-of select="number($lineRight) - number($lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRightValue"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="normalize-space(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)!=NaN"&gt;
                        &lt;xsl:value-of select="number(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineRight)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineWidth"&gt;
                &lt;xsl:value-of select="number($lineRightValue) - number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="orientation"&gt;
                &lt;xsl:value-of disable-output-escaping="yes" select="normalize-space(ancestor::wfocr:text[@orientation]/@orientation)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;formatting&gt;
                &lt;xsl:copy-of select="./@*"/&gt;

                &lt;xsl:variable name="sumConfidence"&gt;
                    &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="numNodes"&gt;
                    &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="charConfidence"&gt;
                    &lt;xsl:value-of select="number($sumConfidence div $numNodes)"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstCharInLine"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[1]/text())"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="secondCharInLine"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[2]/text())"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstSymbolLeft"&gt;
                    &lt;xsl:value-of select="descendant::wfocr:charParams[not(contains($numberSeparators,normalize-space(self::*/text()))) and
                    not(contains($dateSeparators,normalize-space(self::*/text()))) and
                    not(contains($numberChars,normalize-space(self::*/text()))) and
                    string-length(normalize-space(self::*/text())) &amp;gt; 0][1]/@l[1]"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstSymbolLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstSymbolLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="number($preFirstSymbolLeft)"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstSpaceLeft"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstSpaceLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstSpaceLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="number($preFirstSpaceLeft)"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="preFirstStopCharLeft"&gt;
                    &lt;xsl:value-of select="normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="firstStopCharLeft"&gt;
                    &lt;xsl:choose&gt;
                        &lt;xsl:when test="string-length($preFirstStopCharLeft) &amp;gt; 0"&gt;
                            &lt;xsl:value-of select="$preFirstStopCharLeft"/&gt;
                        &lt;/xsl:when&gt;
                        &lt;xsl:otherwise&gt;
                            &lt;xsl:value-of select="0"/&gt;
                        &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="string-length(normalize-space($orientation))=0"&gt;
                        &lt;xsl:variable name="followingSpaceFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($preFirstSymbolLeft) = 0"&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="((string-length(normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and
                                (not(contains($numberChars, $firstCharInLine))))"&gt;
                                            &lt;xsl:value-of select="$firstSpaceLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstSpaceLeft &amp;gt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSpaceLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstSpaceLeft &amp;lt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSymbolLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="followingStopCharFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($preFirstSymbolLeft) = 0"&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="(string-length(normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0) and
                                (not(contains($numberChars, $firstCharInLine)))"&gt;
                                            &lt;xsl:value-of select="$firstStopCharLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstStopCharLeft &amp;gt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstStopCharLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:when test="contains($numberChars, $firstCharInLine) and ($firstStopCharLeft &amp;lt; $firstSymbolLeft)"&gt;
                                            &lt;xsl:value-of select="$firstSymbolLeft"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="rightFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="number($followingSpaceFirstWordInLine) &amp;lt; number($followingStopCharFirstWordInLine)"&gt;
                                    &lt;xsl:value-of select="number($followingSpaceFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($followingStopCharFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="leftFirstWordInLine"&gt;
                            &lt;xsl:value-of select="$lineLeft"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:variable name="widthFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length(normalize-space($rightFirstWordInLine))=0"&gt;
                                    &lt;xsl:value-of select="number($lineRight)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($rightFirstWordInLine)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;px; width:&lt;xsl:value-of select="number($widthFirstWordInLine)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValueThatCanBeEmpty"&gt;
                                &lt;xsl:value-of select="normalize-space(./following::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./following::wfocr:*[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingCharParamsTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./following::wfocr:charParams[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="precedingTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./preceding::wfocr:*[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="precedingCharParamsTagId"&gt;
                                &lt;xsl:value-of select="generate-id(./preceding-sibling::wfocr:charParams[1])"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="isLastCharInLine"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="($followingTagId &amp;lt; $followingCharParamsTagId) or ($followingTagId &amp;gt; $followingCharParamsTagId)"&gt;
                                        &lt;xsl:value-of select="true()"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isFirstCharInLineNew"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="($precedingTagId &amp;lt; $precedingCharParamsTagId) or ($precedingTagId &amp;gt; $precedingCharParamsTagId)"&gt;
                                        &lt;xsl:value-of select="true()"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValue"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($rightCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="$rightCharValueThatCanBeEmpty"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="'1'"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingNumberChar"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][contains($numberChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][contains($numberChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingLetter"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][not(contains($numberChars,normalize-space(self::*/text()))) and not(contains($stopChars,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][not(contains($numberChars,normalize-space(self::*/text()))) and not(contains($stopChars,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isNumberChar"&gt;
                                &lt;xsl:value-of select="contains($numberChars,$charValue)"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$charValue)) and not(contains($stopChars,$charValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isRightNumberChar"&gt;
                                &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length($rightCharValueThatCanBeEmpty)&gt;0"&gt;
                                &lt;xsl:value-of select="contains($numberChars,$rightCharValue)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="false()"/&gt;
                                &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isRightLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$rightCharValue)) and not(contains($stopChars,$rightCharValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingNumberLetterFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="$isNumberChar"&gt;
                                        &lt;xsl:value-of select="$followingLetter"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="$isLetterChar"&gt;
                                        &lt;xsl:value-of select="$followingNumberChar"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;


                            &lt;xsl:variable name="preFstSymbolLeft"&gt;
                                &lt;xsl:value-of select="following::wfocr:charParams[not(contains($numberSeparators,normalize-space(self::*/text()))) and
                    (not(contains($numberChars, $charValue)) or (contains($numberChars, $charValue) and  not(contains($dateSeparators,normalize-space(self::*/text()))))) and
                    not(contains($numberChars,normalize-space(self::*/text()))) and
                    string-length(normalize-space(self::*/text())) &amp;gt; 0][1]/@l[1]"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstSymbolLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstSymbolLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:value-of select="number($preFstSymbolLeft)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="preFstSpaceLeft"&gt;
                                &lt;xsl:value-of select="normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstSpaceLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSpaceLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstSpaceLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:choose&gt;
                                                    &lt;xsl:when test="number($preFstSpaceLeft) &amp;lt; number($fstSymbolLeft)"&gt;
                                                        &lt;xsl:value-of select="number($fstSymbolLeft)"/&gt;
                                                    &lt;/xsl:when&gt;
                                                    &lt;xsl:otherwise&gt;
                                                        &lt;xsl:value-of select="number($preFstSpaceLeft)"/&gt;
                                                    &lt;/xsl:otherwise&gt;
                                                &lt;/xsl:choose&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="preFstStopCharLeft"&gt;
                                &lt;xsl:value-of select="normalize-space(following::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="fstStopCharLeft"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstStopCharLeft) &amp;gt; 0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($preFstStopCharLeft) &amp;gt; number(./@l[1])"&gt;
                                                &lt;xsl:value-of select="$preFstStopCharLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;


                            &lt;xsl:variable name="followingSpaceFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) = 0"&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) and (not(contains($numberSeparators, $rightCharValue))) and (not(contains($dateSeparators, $rightCharValue)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;gt; $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSpaceLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;lt;= $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSymbolLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($preFstSymbolLeft) = 0"&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) and (not(contains($numberSeparators, $rightCharValue))) and (not(contains($dateSeparators, $rightCharValue)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;gt; $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSpaceLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="contains($numberChars, $rightCharValue) and ($fstSpaceLeft &amp;lt;= $fstSymbolLeft)"&gt;
                                                &lt;xsl:value-of select="$fstSymbolLeft"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingSpaceFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) "&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;lt; $lineRightValue) and
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@t[1]))) &amp;gt; number(./@b)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0)"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="right"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(number($followingSpaceFst) &amp;lt;= number($followingStopCharFst)) and (number($followingSpaceFst) &amp;lt;= number($followingNumberLetterFirst))"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="(number($followingStopCharFst) &amp;lt;= number($followingSpaceFst)) and (number($followingStopCharFst) &amp;lt;= number($followingNumberLetterFirst))"&gt;
                                        &lt;xsl:value-of select="$followingStopCharFst"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:when test="(number($followingNumberLetterFirst) &amp;lt;= number($followingSpaceFst)) and (number($followingNumberLetterFirst) &amp;lt;= number($followingStopCharFst))"&gt;
                                        &lt;xsl:value-of select="$followingNumberLetterFirst"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($followingSpaceFirst) &amp;lt; number($followingStopCharFst)"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFirst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isTab"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space(./@isTab)) &amp;gt; 0"&gt;
                                        &lt;xsl:value-of select="number(./@isTab)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="left"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="$isTab = 0"&gt;
                                        &lt;xsl:value-of select="number(./@r[1])"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number(following-sibling::wfocr:charParams[not(self::*[@isTab])][1]/@r[1])"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="width"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($right))=0"&gt;
                                        &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="widthFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($rightFst))=0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($lineRight)-number($left) &amp;gt; 1"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($rightFst)-number($left) &amp;gt; 0"&gt;
                                                &lt;xsl:value-of select="number($rightFst)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isFirstCharInLine"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($lineFirstCharacterLeft) = number(./@l[1])"&gt;
                                        &lt;xsl:value-of select="1"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="0"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="leftCharValueThatCanBeEmpty"&gt;
                                &lt;xsl:value-of select="normalize-space(./preceding::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="leftCharValue"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($leftCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="$leftCharValueThatCanBeEmpty"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="'1'"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLeftCharNumber"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($leftCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="contains($numberChars,$leftCharValue)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="false()"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="isLeftLetterChar"&gt;
                                &lt;xsl:value-of select="not(contains($numberChars,$leftCharValue)) and not(contains($stopChars,$leftCharValue))"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="charRight"&gt;
                                &lt;xsl:value-of select="./following-sibling::wfocr:charParams[1]/@l[1]"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="charLength"&gt;
                                &lt;xsl:value-of select="string-length(normalize-space($charValue))"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="textValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingSibling"&gt;
                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;

                                                        &lt;xsl:choose&gt;
                                                            &lt;xsl:when test="((((not($charValue) or contains($stopChars, $charValue)) ) or
                                                        (contains($isLetterChar,'true') and contains($isLeftCharNumber, 'true') and contains($isFirstCharInLineNew, 'false')) or (contains($isNumberChar,'true') and contains($isLeftLetterChar,'true') and contains($isFirstCharInLineNew, 'false') ) or
                                                            (contains($numberChars, $leftCharValue) and not(contains($numberChars, $charValue)) and contains($numberChars, $rightCharValue) and not(contains($stopChars, $charValue)) and not($isFirstCharInLine='1'))) ) and
                                                        (($charLength &amp;gt; 0 and not(contains($numberSeparators, $charValue))) or
                                                        ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                                                        (($charLength &amp;gt; 0) and not(contains($numberSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue)))) and
                                                        (($charLength &amp;gt; 0 and not(contains($dateSeparators, $charValue))) or
                                                        ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                                                        (($charLength &amp;gt; 0) and not(contains($dateSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))))"&gt;

                                                                &lt;xsl:variable name="followingSpace"&gt;
                                                                    &lt;xsl:choose&gt;
                                                                        &lt;xsl:when test="string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0"&gt;
                                                                            &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                                                        &lt;/xsl:when&gt;
                                                                        &lt;xsl:otherwise&gt;
                                                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                                        &lt;/xsl:otherwise&gt;
                                                                    &lt;/xsl:choose&gt;
                                                                &lt;/xsl:variable&gt;
                                                                &lt;xsl:variable name="followingStopChar"&gt;
                                                                    &lt;xsl:choose&gt;
                                                                        &lt;xsl:when test="string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0"&gt;
                                                                            &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                                                        &lt;/xsl:when&gt;
                                                                        &lt;xsl:otherwise&gt;
                                                                            &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                                        &lt;/xsl:otherwise&gt;
                                                                    &lt;/xsl:choose&gt;
                                                                &lt;/xsl:variable&gt;
                                                                &lt;xsl:if test="number($width) &amp;gt; -1"&gt;
                                                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                                                                    &lt;xsl:if test="(string-length(normalize-space($charValue)) &amp;gt; 0)"&gt;

                                                                        &lt;word&gt;
                                                                            &lt;xsl:attribute name="t"&gt;
                                                                                &lt;xsl:value-of select="number(./@t[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="b"&gt;
                                                                                &lt;xsl:value-of select="number(./@b[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="l"&gt;
                                                                                &lt;xsl:value-of select="number(./@l[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="r"&gt;
                                                                                &lt;xsl:value-of select="number(./@r[1])"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;xsl:attribute name="isTab"&gt;
                                                                                &lt;xsl:value-of select="'1'"/&gt;
                                                                            &lt;/xsl:attribute&gt;
                                                                            &lt;div&gt;
                                                                                &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l[1])"/&gt;px; width:&lt;xsl:value-of select="number(./@r[1])-number(./@l[1])"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;&lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="class"&gt;n&lt;/xsl:attribute&gt;
                                                                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                                                                &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&lt;/xsl:text&gt;
                                                                            &lt;/div&gt;
                                                                        &lt;/word&gt;
                                                                    &lt;/xsl:if&gt;
                                                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r)+number($width)"/&gt;" l="&lt;xsl:value-of select="$left"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="$left"/&gt;px; width:&lt;xsl:value-of select="number($widthFst)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;" &lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                                                                &lt;/xsl:if&gt;
                                                            &lt;/xsl:when&gt;
                                                            &lt;xsl:otherwise&gt;
                                                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                                            &lt;/xsl:otherwise&gt;
                                                        &lt;/xsl:choose&gt;
                                                        &lt;!--                            &lt;/xsl:if&gt;--&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedClockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(descendant::*[not(self::*[@charConfidence])][1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::*[1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startHeight"&gt;
                            &lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt;class="rc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue) or contains($stopChars, $charValue)"&gt;

                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::wfocr:charParams[@charConfidence])][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::wfocr:charParams/text()))][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and string-length(normalize-space(following-sibling::wfocr:charParams[last()]/@b))=0"&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[last()]/@b)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;lt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;gt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="isTab"&gt;
                                            &lt;xsl:value-of select="'1'"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div onload="divSize(this)" style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;

                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedCounterclockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(@b)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::wfocr:charParams[1]/@b)"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="rcc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue)or contains($stopChars, $charValue)"&gt;
                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::*/text()))][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and (string-length(normalize-space(following-sibling::*[last()]/@t[1]))&gt;0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::*[last()][@t]/@t[1])"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0) and (string-length($followingSpace)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)&gt;0) and ($followingSpace &amp;lt; $followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="string-length($followingStopChar)&gt;0"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="0"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rcc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rcc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;

                    &lt;xsl:otherwise&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not(normalize-space(./text()))"&gt;
                                    &lt;xsl:variable name="right"&gt;
                                        &lt;xsl:value-of select="number(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="left"&gt;
                                        &lt;xsl:value-of select="number(./@r)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="width"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not(normalize-space($right))"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt; &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r[1])+number($width)"/&gt;" l="&lt;xsl:value-of select="number(./@r[1])"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@r[1])"/&gt;px; width:&lt;xsl:value-of select="number($width)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/formatting&gt;
        &lt;/line&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;

]]&gt;&lt;/template&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;
	&lt;/var-def&gt;

	&lt;var-def name="htmlWordsDocument"&gt;
		&lt;script return="addImgTag(htmlWordsDocumentRaw.toString(), placeholder.toString(), imageLink.toString())"&gt;&lt;/script&gt;
	&lt;/var-def&gt;

	&lt;var-def name="ocr_tood_document_url"&gt;
        &lt;s3 bucket="${s3_bucket_name}"&gt;
            &lt;s3-put path="${bp_run_id}/${document_uuid}/${ocr_document_name}-tood.xml" acl="PublicRead" content-type="text/html; charset=utf-8" content-disposition="inline"&gt;
                &lt;var name="htmlWordsDocument" /&gt;
            &lt;/s3-put&gt;
        &lt;/s3&gt;
    &lt;/var-def&gt;
    
  	&lt;loop item="map" maxloops="1"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;
				
				map.getWrappedObject().put("ocr_tood_document_url", ocr_tood_document_url.toString());
				map.getWrappedObject().put("ocr_tood_document_name", ocr_tood_document_url.toString().substring(ocr_tood_document_url.toString().lastIndexOf("/") + 1, ocr_tood_document_url.toString().lastIndexOf(".")));
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));

				Gson gson = new Gson();
				String result_json = gson.toJson(update_ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

    &lt;export include-original-data="true"&gt;
      	&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>94f49144-6163-4cef-9379-26f9737a0fec</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] XSLT XML Enrichment with WORD and DIV tags</name>
                                            <machineConfigOptions/>
                                            <source>
                                                <availability></availability>
                                                <deleted>false</deleted>
                                                <description>100 local threads</description>
                                                <equallyDistributeLoad>false</equallyDistributeLoad>
                                                <name>100 local threads</name>
                                                <prioritizeEarlierRuns>true</prioritizeEarlierRuns>
                                                <proxySettings>
                                                    <password></password>
                                                    <server></server>
                                                    <username></username>
                                                    <validationEnabled>false</validationEnabled>
                                                </proxySettings>
                                                <threadCount>100</threadCount>
                                                <threadsPerNode>false</threadsPerNode>
                                                <timeZone>GMT</timeZone>
                                                <tps>0</tps>
                                                <url></url>
                                                <version>
                                                    <componentUuid>5c9d7f49-7016-11e6-a889-22000b994623</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2010-01-01T00:00:00Z</lastModified>
                                                    <versionUuid>bd5ce11b-7017-11e6-a889-22000b994623</versionUuid>
                                                </version>
                                            </source>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>94f49144-6163-4cef-9379-26f9737a0fec</uuid>
                                            <version>
                                                <componentUuid>37562edc-07fc-4069-bd66-567758de3173</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-01T11:16:58Z</lastModified>
                                                <versionUuid>77081b0f-9a32-4284-b6db-efe8fc268644</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_MANUALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] XSLT XML Enrichment with WORD and DIV tags</title>
                                        <type>SINGLE</type>
                                        <uuid>183f85b1-2f07-4a01-baa7-7eef101da698</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>75a7459e-a2ee-4869-937a-d31a9fe92c2b</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-01T11:16:58Z</lastModified>
                                            <versionUuid>b6fa3947-1236-45dc-908f-e74255be4334</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>6</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>bbf5fcde-5fe5-45c0-8697-ee16bac4b9ad</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Type</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>8e605da7-cd90-489e-8cf5-06e40e950139</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make row processing for all OCR result documents with "xml" format from previous step, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.2
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);
	]]&gt;&lt;/script&gt;

	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_document_name", map.getWrappedObject().get("ocr_document_name").toString());
				sys.defineVariable("ocr_export_format", map.getWrappedObject().get("ocr_export_format").toString());
				sys.defineVariable("ocr_document_format", map.getWrappedObject().get("ocr_document_format").toString());
			]]&gt;&lt;/script&gt;
			&lt;case&gt;
				&lt;if condition='${ocr_document_format.toString().equals("xml")}'&gt;
					&lt;s3 bucket="${s3_bucket_name}"&gt;
						&lt;var-def name="xml_text"&gt;
							&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_document_name}.${ocr_document_format}" /&gt;
						&lt;/var-def&gt;
					&lt;/s3&gt;

					&lt;var-def name="ocr_raw_processed_document"&gt;
						&lt;xslt&gt;
							&lt;xml&gt;
								&lt;var name="xml_text" /&gt;
							&lt;/xml&gt;                       
							&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
								&lt;xsl:stylesheet version="1.0"
								xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
								xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

								&lt;xsl:template match="@*|node()"&gt;
								&lt;xsl:copy&gt;
								&lt;xsl:apply-templates select="@*|node()"/&gt;
								&lt;/xsl:copy&gt;
               					&lt;/xsl:template&gt;

								&lt;xsl:template match="wfocr:charRecVariants" /&gt;
								&lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
								&lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
								&lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
								&lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
								&lt;/xsl:stylesheet&gt;
							]]&gt;&lt;/stylesheet&gt;
						&lt;/xslt&gt;
					&lt;/var-def&gt;

					&lt;var-def name="ocr_raw_processed_document_url"&gt;
						&lt;s3 bucket="${s3_bucket_name}"&gt;
							&lt;s3-put-public
								path="${bp_run_id}/${document_uuid}/${ocr_document_name}-raw_processed.${ocr_document_format}"
								content="${ocr_raw_processed_document}" content-type="text/html; charset=utf-8"
								content-disposition="inline" /&gt;
						&lt;/s3&gt;
					&lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						map.getWrappedObject().put("ocr_raw_processed_document_url", ocr_raw_processed_document_url.toString());
						map.getWrappedObject().put("ocr_raw_processed_document_name", ocr_raw_processed_document_url.toString().substring(ocr_raw_processed_document_url.toString().lastIndexOf("/") + 1, ocr_raw_processed_document_url.toString().lastIndexOf(".")));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;
			
			&lt;script&gt;&lt;![CDATA[
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_list.toList());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;


	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>39831f85-f2ef-4d02-9c5a-fa70fe6fc3ad</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Data Transformation</name>
                                                    <private>false</private>
                                                    <publicId>0a266968-31f6-41f7-a7d8-09d7aeb4f581</publicId>
                                                </category>
                                                <contentType>NORMAL</contentType>
                                                <description>applies XSLT transformation to ocred text</description>
                                                <enabled>true</enabled>
                                                <name>XSLT node beauty</name>
                                                <publicId>24e334d1-c1af-4525-a067-ae4315b4c27d</publicId>
                                                <version>
                                                    <componentUuid>2555349d-5e72-4894-8b1a-a14d5fe45757</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2017-11-03T09:20:28Z</lastModified>
                                                    <versionUuid>2dfd83e1-49f4-4521-86d4-c50506455776</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
    
    &lt;var-def name="resultXmlWithCharParams"&gt;
        &lt;xslt&gt;
            &lt;xml&gt;
                &lt;var name="document_xml" /&gt;
            &lt;/xml&gt;
            &lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
            &lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;             
            ]]&gt;&lt;/stylesheet&gt;
        &lt;/xslt&gt;   
    &lt;/var-def&gt;

    &lt;var-def name="documentXmlWithCharParamsLink"&gt;
        &lt;s3 bucket="public"&gt;
            &lt;s3-put-public path="${document_uuid}-with-char-params.xml"
                content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
                content-disposition="inline" /&gt;
        &lt;/s3&gt;
    &lt;/var-def&gt;
    
    &lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>XSLT node ocr transformation1</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8ab3df92-4935-4316-82bf-0f52d21f8105</uuid>
                                                    <version>
                                                        <componentUuid>3d384ef2-8ca8-41f5-8c30-e08ce0e693b4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2017-11-03T09:20:28Z</lastModified>
                                                        <versionUuid>3dcdf194-b57e-418b-9011-8308743202ea</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>XSLT Cut off Raw OCR XML tags</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	
  	&lt;var-def name="resultXmlWithCharParams"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="document_xml" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
			&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;				
			]]&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;	
  	&lt;/var-def&gt;

	&lt;var-def name="documentXmlWithCharParamsLink"&gt;
		&lt;s3 bucket="public"&gt;
			&lt;s3-put-public path="${document_uuid}-with-char-params.xml"
				content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
				content-disposition="inline" /&gt;
		&lt;/s3&gt;
	&lt;/var-def&gt;
  	
	&lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>XSLT node ocr transformation1</name>
                                                <origination>CREATED_AUTOMATICALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>MACHINE</type>
                                                <uuid>a1b6901a-8a09-4022-81ba-26de9d7713bd</uuid>
                                                <version>
                                                    <componentUuid>77f1b33c-7eb6-44a8-9315-96d9ec07aab4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-06-08T13:28:55Z</lastModified>
                                                    <versionUuid>edd0b30d-16b8-4826-8222-1371d2c8422e</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>39831f85-f2ef-4d02-9c5a-fa70fe6fc3ad</uuid>
                                            <version>
                                                <componentUuid>e929dfaf-f13f-4cc8-9c2f-12717dc17ad0</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-06-08T13:29:07Z</lastModified>
                                                <versionUuid>4aa2187a-0b16-4bee-82d2-0a7f5875b6c7</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>XSLT Cut off Raw OCR XML tags</title>
                                        <type>SINGLE</type>
                                        <uuid>40a908be-cbe2-41ea-800c-0922708b1e93</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>9aabab8e-13cd-44be-960f-0e05dac7689c</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-06-08T13:29:07Z</lastModified>
                                            <versionUuid>f4267b05-777b-4b98-9fac-4281e5aed285</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>7</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>affa234b-71de-426f-bb7f-501b9d1f48b2</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Type</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>b338b40c-67f4-497d-8081-ab289097a18c</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make row processing for all OCR result documents with "xml" format from previous step, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.2
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);
	]]&gt;&lt;/script&gt;

	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_document_name", map.getWrappedObject().get("ocr_document_name").toString());
				sys.defineVariable("ocr_export_format", map.getWrappedObject().get("ocr_export_format").toString());
				sys.defineVariable("ocr_document_format", map.getWrappedObject().get("ocr_document_format").toString());
			]]&gt;&lt;/script&gt;
			&lt;case&gt;
				&lt;if condition='${ocr_document_format.toString().equals("xml")}'&gt;
					&lt;s3 bucket="${s3_bucket_name}"&gt;
						&lt;var-def name="xml_text"&gt;
							&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_document_name}.${ocr_document_format}" /&gt;
						&lt;/var-def&gt;
					&lt;/s3&gt;

					&lt;var-def name="ocr_raw_processed_document"&gt;
						&lt;xslt&gt;
							&lt;xml&gt;
								&lt;var name="xml_text" /&gt;
							&lt;/xml&gt;                       
							&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
								&lt;xsl:stylesheet version="1.0"
								xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
								xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

								&lt;xsl:template match="@*|node()"&gt;
								&lt;xsl:copy&gt;
								&lt;xsl:apply-templates select="@*|node()"/&gt;
								&lt;/xsl:copy&gt;
               					&lt;/xsl:template&gt;

								&lt;xsl:template match="wfocr:charRecVariants" /&gt;
								&lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
								&lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
								&lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
								&lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
								&lt;/xsl:stylesheet&gt;
							]]&gt;&lt;/stylesheet&gt;
						&lt;/xslt&gt;
					&lt;/var-def&gt;

					&lt;var-def name="ocr_raw_processed_document_url"&gt;
						&lt;s3 bucket="${s3_bucket_name}"&gt;
							&lt;s3-put-public
								path="${bp_run_id}/${document_uuid}/${ocr_document_name}-raw_processed.${ocr_document_format}"
								content="${ocr_raw_processed_document}" content-type="text/html; charset=utf-8"
								content-disposition="inline" /&gt;
						&lt;/s3&gt;
					&lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						map.getWrappedObject().put("ocr_raw_processed_document_url", ocr_raw_processed_document_url.toString());
						map.getWrappedObject().put("ocr_raw_processed_document_name", ocr_raw_processed_document_url.toString().substring(ocr_raw_processed_document_url.toString().lastIndexOf("/") + 1, ocr_raw_processed_document_url.toString().lastIndexOf(".")));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;
			
			&lt;script&gt;&lt;![CDATA[
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_list.toList());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;


	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>39831f85-f2ef-4d02-9c5a-fa70fe6fc3ad</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Data Transformation</name>
                                                    <private>false</private>
                                                    <publicId>0a266968-31f6-41f7-a7d8-09d7aeb4f581</publicId>
                                                </category>
                                                <contentType>NORMAL</contentType>
                                                <description>applies XSLT transformation to ocred text</description>
                                                <enabled>true</enabled>
                                                <name>XSLT node beauty</name>
                                                <publicId>24e334d1-c1af-4525-a067-ae4315b4c27d</publicId>
                                                <version>
                                                    <componentUuid>2555349d-5e72-4894-8b1a-a14d5fe45757</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2017-11-03T09:20:28Z</lastModified>
                                                    <versionUuid>2dfd83e1-49f4-4521-86d4-c50506455776</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
    
    &lt;var-def name="resultXmlWithCharParams"&gt;
        &lt;xslt&gt;
            &lt;xml&gt;
                &lt;var name="document_xml" /&gt;
            &lt;/xml&gt;
            &lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
            &lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;             
            ]]&gt;&lt;/stylesheet&gt;
        &lt;/xslt&gt;   
    &lt;/var-def&gt;

    &lt;var-def name="documentXmlWithCharParamsLink"&gt;
        &lt;s3 bucket="public"&gt;
            &lt;s3-put-public path="${document_uuid}-with-char-params.xml"
                content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
                content-disposition="inline" /&gt;
        &lt;/s3&gt;
    &lt;/var-def&gt;
    
    &lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>XSLT node ocr transformation1</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8ab3df92-4935-4316-82bf-0f52d21f8105</uuid>
                                                    <version>
                                                        <componentUuid>3d384ef2-8ca8-41f5-8c30-e08ce0e693b4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2017-11-03T09:20:28Z</lastModified>
                                                        <versionUuid>3dcdf194-b57e-418b-9011-8308743202ea</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>XSLT Cut off Raw OCR XML tags</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	
  	&lt;var-def name="resultXmlWithCharParams"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="document_xml" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
			&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;				
			]]&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;	
  	&lt;/var-def&gt;

	&lt;var-def name="documentXmlWithCharParamsLink"&gt;
		&lt;s3 bucket="public"&gt;
			&lt;s3-put-public path="${document_uuid}-with-char-params.xml"
				content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
				content-disposition="inline" /&gt;
		&lt;/s3&gt;
	&lt;/var-def&gt;
  	
	&lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>XSLT node ocr transformation1</name>
                                                <origination>CREATED_AUTOMATICALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>MACHINE</type>
                                                <uuid>a1b6901a-8a09-4022-81ba-26de9d7713bd</uuid>
                                                <version>
                                                    <componentUuid>77f1b33c-7eb6-44a8-9315-96d9ec07aab4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-06-08T13:28:55Z</lastModified>
                                                    <versionUuid>edd0b30d-16b8-4826-8222-1371d2c8422e</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>39831f85-f2ef-4d02-9c5a-fa70fe6fc3ad</uuid>
                                            <version>
                                                <componentUuid>e929dfaf-f13f-4cc8-9c2f-12717dc17ad0</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-06-08T13:29:07Z</lastModified>
                                                <versionUuid>4aa2187a-0b16-4bee-82d2-0a7f5875b6c7</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>XSLT Cut off Raw OCR XML tags</title>
                                        <type>SINGLE</type>
                                        <uuid>40a908be-cbe2-41ea-800c-0922708b1e93</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>9aabab8e-13cd-44be-960f-0e05dac7689c</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-06-08T13:29:07Z</lastModified>
                                            <versionUuid>f4267b05-777b-4b98-9fac-4281e5aed285</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>7</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>aba72f95-7fd1-48d9-a050-007df6ca1f3a</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>4402dcc9-f390-40fa-bca8-e17d36d5f7e6</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
        scriptlang="groovy"&gt;

    &lt;var-def name="ocr_url"&gt;
        &lt;var-global name="ocr_url"/&gt;
    &lt;/var-def&gt;
    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;

    &lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;
import org.apache.commons.httpclient.methods.multipart.StringPart;
import org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource;
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;
import org.apache.commons.httpclient.methods.multipart.Part;
import java.text.SimpleDateFormat;
import java.util.Base64;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }

if(is_logging_enabled.toBoolean())
	log.warn("submitting with no authentication "+original_document_url.toString());
GetMethod getMethod = new GetMethod(original_document_url.toString());

        http.client.executeMethod(getMethod);
        byte[] buf = getMethod.getResponseBody();
 		getMethod.releaseConnection();
        PostMethod postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                postMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        Part[] parts = new Part[1];
        parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)) ;
        postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams()));
        http.client.executeMethod(postMethod);
        statusCode = postMethod.getStatusCode();
        response = postMethod.getResponseBodyAsString();
		InputSource source1 = new InputSource(new StringReader(response));
		XPathFactory xpathFactory = XPathFactory.newInstance();
		XPath xpath = xpathFactory.newXPath();
		taskId = xpath.evaluate("//response/task/@id", source1);
		if(is_logging_enabled.toBoolean())
			log.info("task created "+taskId);


		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());

		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}

        getMethod = new GetMethod(process_document_url.toString());
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        http.client.executeMethod(getMethod);
		log.info("processing task"+taskId);
	]]&gt;&lt;/script&gt;

    &lt;export include-original-data="true"&gt;
        &lt;single-column name="ocr_task_id" value="${taskId}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>4affbfb0-1d88-4f08-b662-d97f9097a566</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[Standard] OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>4affbfb0-1d88-4f08-b662-d97f9097a566</uuid>
                                            <version>
                                                <componentUuid>e5f34cc0-fd08-444d-b6ab-08b708dbf12a</componentUuid>
                                                <incrementalVersion>1.11</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-27T08:15:53Z</lastModified>
                                                <versionUuid>f0145d38-6579-4055-84b6-c9427cfc50ef</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[Standard] OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>ed154b8a-fb08-4f4a-a605-597c0269ab5e</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>b7743d5a-77a4-4c97-8250-ba124b9590cb</componentUuid>
                                            <incrementalVersion>1.12</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-27T08:15:53Z</lastModified>
                                            <versionUuid>5f98feb9-e939-4f36-aec6-66aa8d0e61e7</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>8</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>5aff9f1d-9875-441e-b65a-45dbc8253f24</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>ded336b9-f16c-42c0-b269-b510f7b4d381</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
        scriptlang="groovy"&gt;

    &lt;var-def name="ocr_url"&gt;
        &lt;var-global name="ocr_url"/&gt;
    &lt;/var-def&gt;
    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;

    &lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;
import org.apache.commons.httpclient.methods.multipart.StringPart;
import org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource;
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;
import org.apache.commons.httpclient.methods.multipart.Part;
import java.text.SimpleDateFormat;
import java.util.Base64;
import org.xml.sax.InputSource;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }

if(is_logging_enabled.toBoolean())
	log.warn("submitting with no authentication "+original_document_url.toString());
GetMethod getMethod = new GetMethod(original_document_url.toString());

        http.client.executeMethod(getMethod);
        byte[] buf = getMethod.getResponseBody();
 		getMethod.releaseConnection();
        PostMethod postMethod = new PostMethod(ocr_url.toString()+"/submitImage");
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                postMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        Part[] parts = new Part[1];
        parts[0] =  new FilePart("file", new ByteArrayPartSource("PDF", buf)) ;
        postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams()));
        http.client.executeMethod(postMethod);
        statusCode = postMethod.getStatusCode();
        response = postMethod.getResponseBodyAsString();
		InputSource source1 = new InputSource(new StringReader(response));
		XPathFactory xpathFactory = XPathFactory.newInstance();
		XPath xpath = xpathFactory.newXPath();
		taskId = xpath.evaluate("//response/task/@id", source1);
		if(is_logging_enabled.toBoolean())
			log.info("task created "+taskId);


		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());

		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}

        getMethod = new GetMethod(process_document_url.toString());
        if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
        }
        http.client.executeMethod(getMethod);
		log.info("processing task"+taskId);
	]]&gt;&lt;/script&gt;

    &lt;export include-original-data="true"&gt;
        &lt;single-column name="ocr_task_id" value="${taskId}"/&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>4affbfb0-1d88-4f08-b662-d97f9097a566</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[Standard] OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>4affbfb0-1d88-4f08-b662-d97f9097a566</uuid>
                                            <version>
                                                <componentUuid>e5f34cc0-fd08-444d-b6ab-08b708dbf12a</componentUuid>
                                                <incrementalVersion>1.11</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-27T08:15:53Z</lastModified>
                                                <versionUuid>f0145d38-6579-4055-84b6-c9427cfc50ef</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[Standard] OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>ed154b8a-fb08-4f4a-a605-597c0269ab5e</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>b7743d5a-77a4-4c97-8250-ba124b9590cb</componentUuid>
                                            <incrementalVersion>1.12</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-27T08:15:53Z</lastModified>
                                            <versionUuid>5f98feb9-e939-4f36-aec6-66aa8d0e61e7</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>8</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>24eae7e1-4a76-41ba-8b46-dfa984fd77ed</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>2238f79f-0ba5-4102-9494-f2f1b894ea9c</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to save all new OCR result JSON members into cache datastore.

@Author: Alexey Shalak
@Author: Sergey Emelianov
@Version: 2.5
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config&gt;
    &lt;var-def name="key"&gt;
        &lt;template&gt;${document_hash}&lt;/template&gt;
    &lt;/var-def&gt;

    &lt;var-def name="skip_ocr_cache"&gt;
        &lt;template&gt;${skip_ocr_cache}&lt;/template&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
    &lt;if condition='${skip_ocr_cache.toString().length() == 0 || !skip_ocr_cache.toString().equals("1") }'&gt;
    &lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);
	]]&gt;&lt;/script&gt;

    &lt;loop item="map"&gt;
        &lt;list&gt;
            &lt;var name="ocr_result_list" /&gt;
        &lt;/list&gt;
        &lt;body&gt;
            &lt;script&gt;&lt;![CDATA[
				Map originalData = new LinkedHashMap();
				originalData.put("key", key.toString());
				originalData.put("cached_at", javax.xml.bind.DatatypeConverter.printDateTime(Calendar.getInstance()));

				originalData.put("ocr_type", ocr_type.toString());
				originalData.put("export_format", map.getWrappedObject().get("ocr_export_format").toString());
				originalData.put("document_language", document_language.toString());
				originalData.put("ocr_xml_char_recognition", ocr_xml_char_recognition.toString());
				originalData.put("allowed_region_types", allowed_region_types.toString());
				originalData.put("custom_regions", custom_regions.toString());
				originalData.put("change_dpi", change_dpi.toString());
				originalData.put("invert_image", invert_image.toString());
				originalData.put("discard_color_image", discard_color_image.toString());
				originalData.put("remove_color_objects", remove_color_objects.toString());
				originalData.put("remove_color_objects_type", remove_color_objects_type.toString());

				originalData.put("ocr_json", new com.google.gson.Gson().toJson(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;

            &lt;var-def name="originalDataJson"&gt;
                &lt;script return="new com.google.gson.Gson().toJson(originalData)" /&gt;
            &lt;/var-def&gt;

            &lt;insert-datastore datastore-name="${cache_datastore}"
                              json-value-map="${originalDataJson}" create="true" /&gt;

        &lt;/body&gt;
    &lt;/loop&gt;
    &lt;/if&gt;
    &lt;/case&gt;
    &lt;export include-original-data="true"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>9953fbf6-00bf-4214-9e32-de679cab86ab</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Cache OCR results</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>9953fbf6-00bf-4214-9e32-de679cab86ab</uuid>
                                            <version>
                                                <componentUuid>fbc6e5af-3689-43e7-af9b-7c4e900ed34f</componentUuid>
                                                <incrementalVersion>1.4</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-07T12:21:44Z</lastModified>
                                                <versionUuid>f8dc512b-3909-4467-aaa6-b69f9c2ee0a0</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Cache OCR results</title>
                                        <type>SINGLE</type>
                                        <uuid>410fb53c-97e3-4e61-a81e-e794c217a47b</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>e87be71c-ad6a-44f9-b5ad-e0210a721997</componentUuid>
                                            <incrementalVersion>1.4</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-07T12:21:44Z</lastModified>
                                            <versionUuid>fbd58100-5398-4e76-9dc9-16c812fbf09e</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>9</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>335c1b7f-2da6-411a-a1da-0821ac8771f6</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>cac0ff80-2f87-4c42-b29e-08f74064acd2</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to save all new OCR result JSON members into cache datastore.

@Author: Alexey Shalak
@Author: Sergey Emelianov
@Version: 2.5
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config&gt;
    &lt;var-def name="key"&gt;
        &lt;template&gt;${document_hash}&lt;/template&gt;
    &lt;/var-def&gt;

    &lt;var-def name="skip_ocr_cache"&gt;
        &lt;template&gt;${skip_ocr_cache}&lt;/template&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
    &lt;if condition='${skip_ocr_cache.toString().length() == 0 || !skip_ocr_cache.toString().equals("1") }'&gt;
    &lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);
	]]&gt;&lt;/script&gt;

    &lt;loop item="map"&gt;
        &lt;list&gt;
            &lt;var name="ocr_result_list" /&gt;
        &lt;/list&gt;
        &lt;body&gt;
            &lt;script&gt;&lt;![CDATA[
				Map originalData = new LinkedHashMap();
				originalData.put("key", key.toString());
				originalData.put("cached_at", javax.xml.bind.DatatypeConverter.printDateTime(Calendar.getInstance()));

				originalData.put("ocr_type", ocr_type.toString());
				originalData.put("export_format", map.getWrappedObject().get("ocr_export_format").toString());
				originalData.put("document_language", document_language.toString());
				originalData.put("ocr_xml_char_recognition", ocr_xml_char_recognition.toString());
				originalData.put("allowed_region_types", allowed_region_types.toString());
				originalData.put("custom_regions", custom_regions.toString());
				originalData.put("change_dpi", change_dpi.toString());
				originalData.put("invert_image", invert_image.toString());
				originalData.put("discard_color_image", discard_color_image.toString());
				originalData.put("remove_color_objects", remove_color_objects.toString());
				originalData.put("remove_color_objects_type", remove_color_objects_type.toString());

				originalData.put("ocr_json", new com.google.gson.Gson().toJson(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;

            &lt;var-def name="originalDataJson"&gt;
                &lt;script return="new com.google.gson.Gson().toJson(originalData)" /&gt;
            &lt;/var-def&gt;

            &lt;insert-datastore datastore-name="${cache_datastore}"
                              json-value-map="${originalDataJson}" create="true" /&gt;

        &lt;/body&gt;
    &lt;/loop&gt;
    &lt;/if&gt;
    &lt;/case&gt;
    &lt;export include-original-data="true"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>9953fbf6-00bf-4214-9e32-de679cab86ab</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Cache OCR results</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>9953fbf6-00bf-4214-9e32-de679cab86ab</uuid>
                                            <version>
                                                <componentUuid>fbc6e5af-3689-43e7-af9b-7c4e900ed34f</componentUuid>
                                                <incrementalVersion>1.4</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-07T12:21:44Z</lastModified>
                                                <versionUuid>f8dc512b-3909-4467-aaa6-b69f9c2ee0a0</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Cache OCR results</title>
                                        <type>SINGLE</type>
                                        <uuid>410fb53c-97e3-4e61-a81e-e794c217a47b</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>e87be71c-ad6a-44f9-b5ad-e0210a721997</componentUuid>
                                            <incrementalVersion>1.4</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-07T12:21:44Z</lastModified>
                                            <versionUuid>fbd58100-5398-4e76-9dc9-16c812fbf09e</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>9</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>e79a5a6b-85c8-4405-bfd1-8c36aafe80a1</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>6025c142-3893-4d99-9ebd-f4b537c4a5b9</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to split document into PNG pages. Then we get json of pages urls for used it in "[TOOD} XSLT XML Enrichment with WORD and DIV tags" step.

@Author: Alexey Shalak
@Version: 2.2
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;

  	&lt;required name="original_document_url"/&gt;
	
    &lt;var-def name="document_link"&gt;
     	 &lt;template&gt;${original_document_url.toString()}&lt;/template&gt;
    &lt;/var-def&gt; 
  
  	&lt;var-def name="convert_lib_path"&gt;
  		&lt;var-global name="convert_lib_path"/&gt;
  	&lt;/var-def&gt;
  
	&lt;var-def name="fileList"&gt;
		&lt;script return="convert(document_link.toString())"&gt;&lt;![CDATA[
			import java.io.BufferedReader;
			import java.io.File;
			import java.io.IOException;
			import java.io.InputStreamReader;
			import java.net.URL;
			import com.itextpdf.text.Image;

			import com.google.common.io.Files;
			import org.apache.commons.io.FileUtils;
			import org.apache.commons.io.FilenameUtils;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;
			import org.webharvest.runtime.variables.ListVariable;
			import org.webharvest.runtime.variables.Variable;

			static Integer counter;
			static File outputFolder;
			static Integer size;
			static ListVariable lv;

			static int getSize(){
				return size;
			}

   			static Variable staticGetVariable(Object i){
				return lv.get((Integer)i);
			}

			static boolean getOS(){
				return ((String)System.getProperties().get("os.name")).contains("Windows");
			}

			boolean isWindows=getOS();


			static ListVariable convert(String documentLink) throws IOException, InterruptedException {
				File baseDir = Files.createTempDir();

				File inputFolder = new File(baseDir, "input");

				URL documentUrl = new URL(documentLink);
				String inputFileName = FilenameUtils.getName(documentUrl.getPath());

				if (inputFileName == null || inputFileName.isEmpty()) {
					inputFileName = "input.pdf";
				}

				File inputFile = new File(inputFolder, inputFileName);
				FileUtils.copyURLToFile(documentUrl, inputFile);

				outputFolder = new File(baseDir, "output");
				FileUtils.forceMkdir(outputFolder);

				File result = new File(outputFolder, "output.png");
				File resultTiff = new File(outputFolder, "output.tiff");

				if (isWindows){
				invoke(new ProcessBuilder(new String[] {
					"magick",
					"convert",
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
				} else {
				invoke(new ProcessBuilder(new String[] {
					convert_lib_path.toString(),
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
    			}

				List list=new ArrayList();
				counter=0;
				File created=new File(outputFolder, "output-"+counter.toString()+".png");
				while (created.exists()){
					counter++;
					list.add(created);
					created=new File(outputFolder, "output-"+counter.toString()+".png");
				}
				if (counter==0){
					created=new File(outputFolder, "output.png");
					if (created.exists()){
						File updated=new File(outputFolder, "output-0.png");
						created.renameTo(updated);
						counter++;
						list.add(updated);
					}
				}
				size=list.size();
				counter=0;
				lv=new ListVariable(list);
				return lv;
			}

			static void invoke(ProcessBuilder builder) throws IOException, InterruptedException {
				builder.redirectErrorStream(true);
				Process process = builder.start();
				if(is_logging_enabled.toBoolean()){
                  BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
                  String line;
                  while ((line = in.readLine()) != null) {
                      log.info(line);
                  }
                  in.close();
				}
				int code = process.waitFor();
				if (code != 0) {
                    log.error("Failed to invoke process: " + builder.command() + ". Return code: " + code);
					throw new RuntimeException("Failed to invoke process: " + builder.command() + ". Return code: " + code);
				}
			}
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
	
	&lt;var-def name="numberOfPages"&gt;
		&lt;script return="getSize()" /&gt;
	&lt;/var-def&gt;

	&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
		&lt;list&gt;
			&lt;var name="fileList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
          &lt;case&gt;
            &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
              &lt;log level="info"&gt;
                  &lt;template&gt;saving file ${fileJavaObject} into ${s3_bucket_name} &lt;/template&gt;
              &lt;/log&gt;
            &lt;/if&gt;
          &lt;/case&gt;
			&lt;var-def name="key"&gt;
				&lt;script return="staticGetVariable(i.toInt()-1)"&gt;&lt;/script&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content-${i}"&gt;
		        &lt;file path="${key}" type="binary"/&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content"&gt;
				&lt;var name="content-${i}" /&gt;
			&lt;/var-def&gt;

			&lt;var-def name="converted_link-${i}"&gt;
        		&lt;s3  bucket="${s3_bucket_name}"&gt;
         			&lt;s3-put-public path="${bp_run_id}/${document_uuid}/page-${i}.png" content="${content}" content-type="image/png" content-disposition="inline"/&gt;
        		&lt;/s3&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
	
	&lt;var-def name="jsonFilesUrls"&gt;
		&lt;json&gt;
			&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
				&lt;list&gt;
					&lt;var name="fileList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;json-put key="fileList-${i}"&gt;
						&lt;var name="converted_link-${i}" /&gt;
					&lt;/json-put&gt;
				&lt;/body&gt;
			&lt;/loop&gt;
		&lt;/json&gt;
	&lt;/var-def&gt;
     
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="pages" value="${numberOfPages}" /&gt;
		&lt;single-column name="json_file_urls" value="${jsonFilesUrls}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>6fb62561-cf34-4f85-b8e7-549baff334f3</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] Split document into PNG pages</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>6fb62561-cf34-4f85-b8e7-549baff334f3</uuid>
                                            <version>
                                                <componentUuid>6994caad-7870-4ba3-a219-7927539c1ca9</componentUuid>
                                                <incrementalVersion>1.4</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>6510628d-6511-4cec-a12a-51813dc32d20</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] Split document into PNG pages</title>
                                        <type>SINGLE</type>
                                        <uuid>5614de5a-60f8-4c14-b553-0c2c73366adf</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>661a211a-16b8-4d0c-a4da-ad2fa1cf8db4</componentUuid>
                                            <incrementalVersion>1.4</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>770c690a-8b09-45c6-8733-ea91d4a06d64</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>10</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>e8c302bc-c701-4489-b71a-c47078fd6710</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>0d5cbfa3-e425-4591-bf44-2849ad9dbf21</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to split document into PNG pages. Then we get json of pages urls for used it in "[TOOD} XSLT XML Enrichment with WORD and DIV tags" step.

@Author: Alexey Shalak
@Version: 2.2
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;

  	&lt;required name="original_document_url"/&gt;
	
    &lt;var-def name="document_link"&gt;
     	 &lt;template&gt;${original_document_url.toString()}&lt;/template&gt;
    &lt;/var-def&gt; 
  
  	&lt;var-def name="convert_lib_path"&gt;
  		&lt;var-global name="convert_lib_path"/&gt;
  	&lt;/var-def&gt;
  
	&lt;var-def name="fileList"&gt;
		&lt;script return="convert(document_link.toString())"&gt;&lt;![CDATA[
			import java.io.BufferedReader;
			import java.io.File;
			import java.io.IOException;
			import java.io.InputStreamReader;
			import java.net.URL;
			import com.itextpdf.text.Image;

			import com.google.common.io.Files;
			import org.apache.commons.io.FileUtils;
			import org.apache.commons.io.FilenameUtils;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;
			import org.webharvest.runtime.variables.ListVariable;
			import org.webharvest.runtime.variables.Variable;

			static Integer counter;
			static File outputFolder;
			static Integer size;
			static ListVariable lv;

			static int getSize(){
				return size;
			}

   			static Variable staticGetVariable(Object i){
				return lv.get((Integer)i);
			}

			static boolean getOS(){
				return ((String)System.getProperties().get("os.name")).contains("Windows");
			}

			boolean isWindows=getOS();


			static ListVariable convert(String documentLink) throws IOException, InterruptedException {
				File baseDir = Files.createTempDir();

				File inputFolder = new File(baseDir, "input");

				URL documentUrl = new URL(documentLink);
				String inputFileName = FilenameUtils.getName(documentUrl.getPath());

				if (inputFileName == null || inputFileName.isEmpty()) {
					inputFileName = "input.pdf";
				}

				File inputFile = new File(inputFolder, inputFileName);
				FileUtils.copyURLToFile(documentUrl, inputFile);

				outputFolder = new File(baseDir, "output");
				FileUtils.forceMkdir(outputFolder);

				File result = new File(outputFolder, "output.png");
				File resultTiff = new File(outputFolder, "output.tiff");

				if (isWindows){
				invoke(new ProcessBuilder(new String[] {
					"magick",
					"convert",
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
				} else {
				invoke(new ProcessBuilder(new String[] {
					convert_lib_path.toString(),
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
    			}

				List list=new ArrayList();
				counter=0;
				File created=new File(outputFolder, "output-"+counter.toString()+".png");
				while (created.exists()){
					counter++;
					list.add(created);
					created=new File(outputFolder, "output-"+counter.toString()+".png");
				}
				if (counter==0){
					created=new File(outputFolder, "output.png");
					if (created.exists()){
						File updated=new File(outputFolder, "output-0.png");
						created.renameTo(updated);
						counter++;
						list.add(updated);
					}
				}
				size=list.size();
				counter=0;
				lv=new ListVariable(list);
				return lv;
			}

			static void invoke(ProcessBuilder builder) throws IOException, InterruptedException {
				builder.redirectErrorStream(true);
				Process process = builder.start();
				if(is_logging_enabled.toBoolean()){
                  BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
                  String line;
                  while ((line = in.readLine()) != null) {
                      log.info(line);
                  }
                  in.close();
				}
				int code = process.waitFor();
				if (code != 0) {
                    log.error("Failed to invoke process: " + builder.command() + ". Return code: " + code);
					throw new RuntimeException("Failed to invoke process: " + builder.command() + ". Return code: " + code);
				}
			}
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
	
	&lt;var-def name="numberOfPages"&gt;
		&lt;script return="getSize()" /&gt;
	&lt;/var-def&gt;

	&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
		&lt;list&gt;
			&lt;var name="fileList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
          &lt;case&gt;
            &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
              &lt;log level="info"&gt;
                  &lt;template&gt;saving file ${fileJavaObject} into ${s3_bucket_name} &lt;/template&gt;
              &lt;/log&gt;
            &lt;/if&gt;
          &lt;/case&gt;
			&lt;var-def name="key"&gt;
				&lt;script return="staticGetVariable(i.toInt()-1)"&gt;&lt;/script&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content-${i}"&gt;
		        &lt;file path="${key}" type="binary"/&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content"&gt;
				&lt;var name="content-${i}" /&gt;
			&lt;/var-def&gt;

			&lt;var-def name="converted_link-${i}"&gt;
        		&lt;s3  bucket="${s3_bucket_name}"&gt;
         			&lt;s3-put-public path="${bp_run_id}/${document_uuid}/page-${i}.png" content="${content}" content-type="image/png" content-disposition="inline"/&gt;
        		&lt;/s3&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
	
	&lt;var-def name="jsonFilesUrls"&gt;
		&lt;json&gt;
			&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
				&lt;list&gt;
					&lt;var name="fileList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;json-put key="fileList-${i}"&gt;
						&lt;var name="converted_link-${i}" /&gt;
					&lt;/json-put&gt;
				&lt;/body&gt;
			&lt;/loop&gt;
		&lt;/json&gt;
	&lt;/var-def&gt;
     
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="pages" value="${numberOfPages}" /&gt;
		&lt;single-column name="json_file_urls" value="${jsonFilesUrls}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>6fb62561-cf34-4f85-b8e7-549baff334f3</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>[TOOD] Split document into PNG pages</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>6fb62561-cf34-4f85-b8e7-549baff334f3</uuid>
                                            <version>
                                                <componentUuid>6994caad-7870-4ba3-a219-7927539c1ca9</componentUuid>
                                                <incrementalVersion>1.4</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>6510628d-6511-4cec-a12a-51813dc32d20</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>[TOOD] Split document into PNG pages</title>
                                        <type>SINGLE</type>
                                        <uuid>5614de5a-60f8-4c14-b553-0c2c73366adf</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>661a211a-16b8-4d0c-a4da-ad2fa1cf8db4</componentUuid>
                                            <incrementalVersion>1.4</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>770c690a-8b09-45c6-8733-ea91d4a06d64</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>10</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>f466307f-d1d3-4283-a221-9ffd22d3f501</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"OCR Failed","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"true","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'OCR Failed' when ocr_failed EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "true"));

    then
        $ctx.sendResultTo("OCR Failed", $item);
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'TOOD' when ocr_failed EQ 'false' AND ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"true","operator":"EQ"}],"customConditions":[]}
rule "3. Send records to 'Standard' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "true"));

    then
        $ctx.sendResultTo("Standard", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard (without xml export format)","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"false","operator":"EQ"}],"customConditions":[]}
rule "4. Send records to 'Standard (without xml export format)' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'false'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "false"));

    then
        $ctx.sendResultTo("Standard (without xml export format)", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Router</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>26961026-d240-4fd6-8e79-8a8261f9f4b0</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get response from OCR api, and if OCR Process is "Completed", get OCRed document for each OCR export format parameter, put them on S3 and create OCR JSON with result OCR information.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.1
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;
  
  	&lt;var-def name="ocr_url"&gt;
  		&lt;var-global name="ocr_url"/&gt;
  	&lt;/var-def&gt;
  
    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;
  
	&lt;var-def name="ocr_failed"&gt;
		false
	&lt;/var-def&gt;

	&lt;var-def name="xml_export_format_flag"&gt;
		false
	&lt;/var-def&gt;

&lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.NameValuePair;
import java.util.Base64;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }


GetMethod getMethod = new GetMethod(ocr_url.toString()+"/getTaskStatus");
getMethod.setQueryString(new NameValuePair[] { 
    new NameValuePair("taskId", ocr_task_id.toString()) 
}); 
if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
}

        http.client.executeMethod(getMethod);
        String response = getMethod.getResponseBodyAsString();
 		getMethod.releaseConnection();
 		sys.defineVariable("statusResponse", response);
		]]&gt;&lt;/script&gt;
&lt;case&gt;
  &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
    &lt;log&gt;&lt;template&gt;${statusResponse}&lt;/template&gt;&lt;/log&gt;
  &lt;/if&gt;
&lt;/case&gt;
	&lt;var-def name="taskStatus"&gt;
      	&lt;xpath expression="string(//response/task/@status)"&gt;
			&lt;var name="statusResponse" /&gt;
		&lt;/xpath&gt;
	&lt;/var-def&gt;

	&lt;case&gt;
		&lt;if
			condition='${!"Completed".equals(taskStatus.toString()) @and !"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;release time-in-seconds="30" /&gt;
			&lt;exit /&gt;
		&lt;/if&gt;

		&lt;if condition='${"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_failed", true);
				sys.defineVariable("ocr_failed_response", statusResponse);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;

		&lt;if condition='${"Completed".equals(taskStatus.toString())}'&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import groovy.json.JsonSlurper;

				List export_format_list = Arrays.asList(no_cached_export_format.toString().split(","));
				sys.defineVariable("export_format_list", export_format_list);

				List&lt;Map&gt; ocr_result_list = new ArrayList();
				sys.defineVariable("ocr_result_list", ocr_result_list);

				def original_document_url_object = new java.net.URI(original_document_url.toString())
				def original_document_name = original_document_url_object.getPath().tokenize('/').last().tokenize('.').first()
				
				sys.defineVariable("original_document_name", original_document_name);
			]]&gt;&lt;/script&gt;

			&lt;loop item="format"&gt;
				&lt;list&gt;
					&lt;var name="export_format_list" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) == 0}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 1}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl2)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 2}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl3)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;
					&lt;/case&gt;

					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) @lt 3}'&gt;
							&lt;var-def name="result"&gt;
								&lt;http url="${result_url}" charset="UTF-8" /&gt;
							&lt;/var-def&gt;

							&lt;case&gt;
								&lt;if condition='${format.toString().equals("html")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-html.html&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/html&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("pdfSearchable")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-pdf.pdf&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;application/pdf&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xml")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xml.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xmlForCorrectedImage")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xmlForCorrectedImage.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("txt")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-txt.txt&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/plain&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
							&lt;/case&gt;

							&lt;var-def name="ocr_document_url"&gt;
								&lt;s3 bucket="${s3_bucket_name}"&gt;
									&lt;s3-put-public path="${path}" content="${result}"
										content-type="${type}" content-disposition="inline" /&gt;
								&lt;/s3&gt;
							&lt;/var-def&gt;

							&lt;script language="groovy"&gt;&lt;![CDATA[
								def ocr_document_name = ocr_document_url.toString().tokenize('/').last().tokenize('.').first()
							
								Map map = new HashMap();
								
								map.put("original_document_url", original_document_url.toString());
								map.put("original_document_name", original_document_name.toString());
								map.put("ocr_document_url", ocr_document_url.toString());
								map.put("ocr_document_name", ocr_document_name);
								map.put("ocr_export_format", format.toString());
								map.put("ocr_document_format", path.toString().substring(path.toString().lastIndexOf(".") + 1, path.toString().length()));

								ocr_result_list.toList().add(map);
							]]&gt;&lt;/script&gt;
						&lt;/if&gt;
					&lt;/case&gt;

				&lt;/body&gt;
			&lt;/loop&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;

				Gson gson = new Gson();
				String result_json = gson.toJson(ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="xml_export_format_flag" value="${xml_export_format_flag}" /&gt;
		&lt;single-column name="ocr_failed" value="${ocr_failed}" /&gt;
		&lt;single-column name="ocr_failed_response" value="${ocr_failed_response}" /&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
        &lt;single-column name="ocr_status_response" value="${statusResponse}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>894722cf-e512-4694-8e91-dfc912799cf2</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Response from OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>894722cf-e512-4694-8e91-dfc912799cf2</uuid>
                                            <version>
                                                <componentUuid>3727c3e8-e882-4658-9d0e-c71fa9b85bfe</componentUuid>
                                                <incrementalVersion>1.16</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>60762310-44d7-4ca9-8571-338d135d9171</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Response from OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>4e5dc495-d324-4494-b37e-5d65d17741fd</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>8937f52e-41ba-4941-8588-c5cc81fe025a</componentUuid>
                                            <incrementalVersion>1.12</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>3229041a-3d17-40fc-9f4d-1d1200e4e387</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>11</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>c7d92cc6-a34d-4e07-b24d-429885212d3a</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"OCR Failed","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"true","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'OCR Failed' when ocr_failed EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "true"));

    then
        $ctx.sendResultTo("OCR Failed", $item);
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'TOOD' when ocr_failed EQ 'false' AND ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"true","operator":"EQ"}],"customConditions":[]}
rule "3. Send records to 'Standard' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "true"));

    then
        $ctx.sendResultTo("Standard", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard (without xml export format)","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"false","operator":"EQ"}],"customConditions":[]}
rule "4. Send records to 'Standard (without xml export format)' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'false'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "false"));

    then
        $ctx.sendResultTo("Standard (without xml export format)", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                                        <name>OCR Router</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>77d9c5d0-b2e6-42d6-97f9-a247c07d495e</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get response from OCR api, and if OCR Process is "Completed", get OCRed document for each OCR export format parameter, put them on S3 and create OCR JSON with result OCR information.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.1
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;
  
  	&lt;var-def name="ocr_url"&gt;
  		&lt;var-global name="ocr_url"/&gt;
  	&lt;/var-def&gt;
  
    &lt;try&gt;
        &lt;body&gt;
            &lt;secrets-vault-get alias="ocr-creds" /&gt;
        &lt;/body&gt;
        &lt;catch&gt;
        &lt;/catch&gt;
    &lt;/try&gt;
  
	&lt;var-def name="ocr_failed"&gt;
		false
	&lt;/var-def&gt;

	&lt;var-def name="xml_export_format_flag"&gt;
		false
	&lt;/var-def&gt;

&lt;script&gt;&lt;![CDATA[
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.NameValuePair;
import java.util.Base64;

  String ocr_username = "";
  String ocr_password = "";
  if(sys.isVariableDefined("secureEntryMap")){
    Map entryMap = secureEntryMap.getWrappedObject();
    com.freedomoss.crowdcontrol.webharvest.web.dto.SecureEntryDTO obj = entryMap.get("ocr-creds");
    String ocr_username = obj.getKey().toString();
    String ocr_password = obj.getValue().toString();
  }


GetMethod getMethod = new GetMethod(ocr_url.toString()+"/getTaskStatus");
getMethod.setQueryString(new NameValuePair[] { 
    new NameValuePair("taskId", ocr_task_id.toString()) 
}); 
if(!ocr_username.toString().isEmpty() &amp;&amp; !ocr_password.toString().isEmpty()){
                encoding = Base64.getEncoder().encodeToString((ocr_username.toString()+":"+ocr_password.toString()).getBytes());
                getMethod.setRequestHeader("Authorization","Basic " + encoding);
}

        http.client.executeMethod(getMethod);
        String response = getMethod.getResponseBodyAsString();
 		getMethod.releaseConnection();
 		sys.defineVariable("statusResponse", response);
		]]&gt;&lt;/script&gt;
&lt;case&gt;
  &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
    &lt;log&gt;&lt;template&gt;${statusResponse}&lt;/template&gt;&lt;/log&gt;
  &lt;/if&gt;
&lt;/case&gt;
	&lt;var-def name="taskStatus"&gt;
      	&lt;xpath expression="string(//response/task/@status)"&gt;
			&lt;var name="statusResponse" /&gt;
		&lt;/xpath&gt;
	&lt;/var-def&gt;

	&lt;case&gt;
		&lt;if
			condition='${!"Completed".equals(taskStatus.toString()) @and !"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;release time-in-seconds="30" /&gt;
			&lt;exit /&gt;
		&lt;/if&gt;

		&lt;if condition='${"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_failed", true);
				sys.defineVariable("ocr_failed_response", statusResponse);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;

		&lt;if condition='${"Completed".equals(taskStatus.toString())}'&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import groovy.json.JsonSlurper;

				List export_format_list = Arrays.asList(no_cached_export_format.toString().split(","));
				sys.defineVariable("export_format_list", export_format_list);

				List&lt;Map&gt; ocr_result_list = new ArrayList();
				sys.defineVariable("ocr_result_list", ocr_result_list);

				def original_document_url_object = new java.net.URI(original_document_url.toString())
				def original_document_name = original_document_url_object.getPath().tokenize('/').last().tokenize('.').first()
				
				sys.defineVariable("original_document_name", original_document_name);
			]]&gt;&lt;/script&gt;

			&lt;loop item="format"&gt;
				&lt;list&gt;
					&lt;var name="export_format_list" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) == 0}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 1}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl2)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 2}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl3)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;
					&lt;/case&gt;

					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) @lt 3}'&gt;
							&lt;var-def name="result"&gt;
								&lt;http url="${result_url}" charset="UTF-8" /&gt;
							&lt;/var-def&gt;

							&lt;case&gt;
								&lt;if condition='${format.toString().equals("html")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-html.html&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/html&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("pdfSearchable")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-pdf.pdf&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;application/pdf&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xml")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xml.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xmlForCorrectedImage")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xmlForCorrectedImage.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("txt")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-txt.txt&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/plain&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
							&lt;/case&gt;

							&lt;var-def name="ocr_document_url"&gt;
								&lt;s3 bucket="${s3_bucket_name}"&gt;
									&lt;s3-put-public path="${path}" content="${result}"
										content-type="${type}" content-disposition="inline" /&gt;
								&lt;/s3&gt;
							&lt;/var-def&gt;

							&lt;script language="groovy"&gt;&lt;![CDATA[
								def ocr_document_name = ocr_document_url.toString().tokenize('/').last().tokenize('.').first()
							
								Map map = new HashMap();
								
								map.put("original_document_url", original_document_url.toString());
								map.put("original_document_name", original_document_name.toString());
								map.put("ocr_document_url", ocr_document_url.toString());
								map.put("ocr_document_name", ocr_document_name);
								map.put("ocr_export_format", format.toString());
								map.put("ocr_document_format", path.toString().substring(path.toString().lastIndexOf(".") + 1, path.toString().length()));

								ocr_result_list.toList().add(map);
							]]&gt;&lt;/script&gt;
						&lt;/if&gt;
					&lt;/case&gt;

				&lt;/body&gt;
			&lt;/loop&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;

				Gson gson = new Gson();
				String result_json = gson.toJson(ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="xml_export_format_flag" value="${xml_export_format_flag}" /&gt;
		&lt;single-column name="ocr_failed" value="${ocr_failed}" /&gt;
		&lt;single-column name="ocr_failed_response" value="${ocr_failed_response}" /&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
        &lt;single-column name="ocr_status_response" value="${statusResponse}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>894722cf-e512-4694-8e91-dfc912799cf2</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>Response from OCR</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>894722cf-e512-4694-8e91-dfc912799cf2</uuid>
                                            <version>
                                                <componentUuid>3727c3e8-e882-4658-9d0e-c71fa9b85bfe</componentUuid>
                                                <incrementalVersion>1.16</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>60762310-44d7-4ca9-8571-338d135d9171</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>Response from OCR</title>
                                        <type>SINGLE</type>
                                        <uuid>4e5dc495-d324-4494-b37e-5d65d17741fd</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>8937f52e-41ba-4941-8588-c5cc81fe025a</componentUuid>
                                            <incrementalVersion>1.12</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>3229041a-3d17-40fc-9f4d-1d1200e4e387</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>11</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>0b04b145-c8d6-4157-a971-2acdc0c2f26f</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>b1e8b0ff-7e57-41bf-a0ec-4edf0d00b1fb</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

  	&lt;required name="original_document_url"/&gt;
	
    &lt;var-def name="document_link"&gt;
     	 &lt;template&gt;${original_document_url}&lt;/template&gt;
    &lt;/var-def&gt;
  
  	&lt;var-def name="name_of_page"&gt;
     	 page_for_manual_tagging
    &lt;/var-def&gt;
  
  	&lt;var-def name="desired_dpi"&gt;
     	 &lt;template&gt;288&lt;/template&gt;
    &lt;/var-def&gt;
  
  	&lt;var-def name="convert_path"&gt;
     	 &lt;var-global name="convert_lib_path"/&gt;
    &lt;/var-def&gt;
  &lt;case&gt;
    &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;      
  		&lt;log&gt;&lt;template&gt;${convert_path}&lt;/template&gt;&lt;/log&gt;
    &lt;/if&gt;
  &lt;/case&gt;
    &lt;var-def name="document_uuid"&gt;
         &lt;script return="uuid"&gt;&lt;![CDATA[String uuid = UUID.randomUUID().toString();]]&gt; &lt;/script&gt;
    &lt;/var-def&gt;   
  
	&lt;var-def name="fileList"&gt;
		&lt;script return="convert(document_link.toString(), convert_path.toString())"&gt;&lt;![CDATA[
			import java.io.BufferedReader;
			import java.io.File;
			import java.io.IOException;
			import java.io.InputStreamReader;
			import java.net.URL;
			import com.itextpdf.text.Image;

			import com.google.common.io.Files;
			import org.apache.commons.io.FileUtils;
			import org.apache.commons.io.FilenameUtils;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;
			import org.webharvest.runtime.variables.ListVariable;
			import org.webharvest.runtime.variables.Variable;

			static Integer counter;
			static File outputFolder;
			static Integer size;
			static ListVariable lv;

			static int getSize(){
				return size;
			}

   			static Variable staticGetVariable(Object i){
				return lv.get((Integer)i);
			}

			static boolean getOS(){
				return ((String)System.getProperties().get("os.name")).contains("Windows");
			}

			boolean isWindows=getOS();

			String dpi = desired_dpi.getWrappedObject().get(0).getWrappedObject().toString();
			String convert = convert_path.getWrappedObject().get(0).getWrappedObject().toString();


			static ListVariable convert(String documentLink, String convertPath) throws IOException, InterruptedException {
				File baseDir = Files.createTempDir();

				File inputFolder = new File(baseDir, "input");

				URL documentUrl = new URL(documentLink);
				String inputFileName = FilenameUtils.getName(documentUrl.getPath());
				if (inputFileName == null || inputFileName.isEmpty()) {
					inputFileName = "input.pdf";
				}

				File inputFile = new File(inputFolder, inputFileName);
				FileUtils.copyURLToFile(documentUrl, inputFile);

				outputFolder = new File(baseDir, "output");
				FileUtils.forceMkdir(outputFolder);

				File result = new File(outputFolder, "output.png");
				File resultTiff = new File(outputFolder, "output.tiff");
				if(is_logging_enabled.toBoolean())
					log.info("convertPath "+ convertPath);
				if (isWindows){
				invoke(new ProcessBuilder(new String[] {
					"magick",
					"convert",
					"-density",dpi,
					"-depth","1",
					"-colorspace","Gray",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
				} else {
				invoke(new ProcessBuilder(new String[] {
					convertPath,
					"-density",dpi,
					"-depth","1",
					"-colorspace","Gray",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
    			}
				List list=new ArrayList();
				counter=0;
				File created=new File(outputFolder, "output-"+counter.toString()+".png");
				while (created.exists()){
					counter++;
					list.add(created);
					created=new File(outputFolder, "output-"+counter.toString()+".png");
				}
				if (counter==0){
					created=new File(outputFolder, "output.png");
					if (created.exists()){
						File updated=new File(outputFolder, "output-0.png");
						created.renameTo(updated);
						counter++;
						list.add(updated);
					}
				}
				size=list.size();
				counter=0;
				lv=new ListVariable(list);
				return lv;
			}

			static void invoke(ProcessBuilder builder) throws IOException, InterruptedException {
				builder.redirectErrorStream(true);

				System.err.println(builder.command());
				Process process = builder.start();

				BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
				String line;
				while ((line = in.readLine()) != null) {
					System.out.println(line);
				}
				in.close();

				int code = process.waitFor();
				if (code != 0) {
					throw new RuntimeException("Failed to invoke process: " + builder.command() + ". Return code: " + code);
				}
			}
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
	
	&lt;var-def name="numberOfPages"&gt;
		&lt;script return="getSize()" /&gt;
	&lt;/var-def&gt;

	&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
		&lt;list&gt;
			&lt;var name="fileList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
          	&lt;case&gt;
              &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
                &lt;log&gt;
                    &lt;template&gt;File: ${fileJavaObject}&lt;/template&gt;
                &lt;/log&gt;
              &lt;/if&gt;
            &lt;/case&gt;
			&lt;var-def name="key"&gt;
				&lt;script return="staticGetVariable(i.toInt()-1)"&gt;&lt;/script&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content-${i}"&gt;
		        &lt;file path="${key}" type="binary"/&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content"&gt;
				&lt;var name="content-${i}" /&gt;
			&lt;/var-def&gt;

			&lt;var-def name="converted_link-${i}"&gt;
        		&lt;s3  bucket="${s3_bucket_name}"&gt;
         			&lt;s3-put-public path="${document_uuid}/${name_of_page}-${i}.png" content="${content}" content-type="image/png" content-disposition="inline"/&gt;
        		&lt;/s3&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
	
	&lt;var-def name="jsonFilesUrls"&gt;
		&lt;json&gt;
			&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
				&lt;list&gt;
					&lt;var name="fileList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;json-put key="fileList-${i}"&gt;
						&lt;var name="converted_link-${i}" /&gt;
					&lt;/json-put&gt;
				&lt;/body&gt;
			&lt;/loop&gt;
		&lt;/json&gt;
	&lt;/var-def&gt;
     
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="json_file_urls_for_manual" value="${jsonFilesUrls}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>f1b1bdac-578f-4fac-9317-19ef53f5bb1a</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>(Copy)[TOOD] Split PDF into PNG pages for manual task</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>f1b1bdac-578f-4fac-9317-19ef53f5bb1a</uuid>
                                            <version>
                                                <componentUuid>b756616b-a0f0-40e6-a9f8-a069c4a796a9</componentUuid>
                                                <incrementalVersion>1.12</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>4859a2d6-28af-4157-9dd4-74722ad14093</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>(Copy)[TOOD] Split PDF into PNG pages for manual task</title>
                                        <type>SINGLE</type>
                                        <uuid>7d77b2c6-4ecb-4dde-acda-5c3a09cd9cbe</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>1297640a-e0d1-40a7-8bd4-2dd10411a3fd</componentUuid>
                                            <incrementalVersion>1.7</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>c750bdca-f447-4908-b6df-899e35273ec1</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>12</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>05f1ae6b-a8a6-41b3-bec3-f053a4002e3a</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <blockSize>1</blockSize>
                                    <businessRule>
                                        <content>#RuleContext.APPROVE_ALL_RULE</content>
                                        <name>Approve All</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <ruleTypeUI>Composite</ruleTypeUI>
                                        <uuid>b051e206-065d-403c-834d-1aba3f3773f8</uuid>
                                        <workflowRuleMode>SIMPLE</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

  	&lt;required name="original_document_url"/&gt;
	
    &lt;var-def name="document_link"&gt;
     	 &lt;template&gt;${original_document_url}&lt;/template&gt;
    &lt;/var-def&gt;
  
  	&lt;var-def name="name_of_page"&gt;
     	 page_for_manual_tagging
    &lt;/var-def&gt;
  
  	&lt;var-def name="desired_dpi"&gt;
     	 &lt;template&gt;288&lt;/template&gt;
    &lt;/var-def&gt;
  
  	&lt;var-def name="convert_path"&gt;
     	 &lt;var-global name="convert_lib_path"/&gt;
    &lt;/var-def&gt;
  &lt;case&gt;
    &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;      
  		&lt;log&gt;&lt;template&gt;${convert_path}&lt;/template&gt;&lt;/log&gt;
    &lt;/if&gt;
  &lt;/case&gt;
    &lt;var-def name="document_uuid"&gt;
         &lt;script return="uuid"&gt;&lt;![CDATA[String uuid = UUID.randomUUID().toString();]]&gt; &lt;/script&gt;
    &lt;/var-def&gt;   
  
	&lt;var-def name="fileList"&gt;
		&lt;script return="convert(document_link.toString(), convert_path.toString())"&gt;&lt;![CDATA[
			import java.io.BufferedReader;
			import java.io.File;
			import java.io.IOException;
			import java.io.InputStreamReader;
			import java.net.URL;
			import com.itextpdf.text.Image;

			import com.google.common.io.Files;
			import org.apache.commons.io.FileUtils;
			import org.apache.commons.io.FilenameUtils;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;
			import org.webharvest.runtime.variables.ListVariable;
			import org.webharvest.runtime.variables.Variable;

			static Integer counter;
			static File outputFolder;
			static Integer size;
			static ListVariable lv;

			static int getSize(){
				return size;
			}

   			static Variable staticGetVariable(Object i){
				return lv.get((Integer)i);
			}

			static boolean getOS(){
				return ((String)System.getProperties().get("os.name")).contains("Windows");
			}

			boolean isWindows=getOS();

			String dpi = desired_dpi.getWrappedObject().get(0).getWrappedObject().toString();
			String convert = convert_path.getWrappedObject().get(0).getWrappedObject().toString();


			static ListVariable convert(String documentLink, String convertPath) throws IOException, InterruptedException {
				File baseDir = Files.createTempDir();

				File inputFolder = new File(baseDir, "input");

				URL documentUrl = new URL(documentLink);
				String inputFileName = FilenameUtils.getName(documentUrl.getPath());
				if (inputFileName == null || inputFileName.isEmpty()) {
					inputFileName = "input.pdf";
				}

				File inputFile = new File(inputFolder, inputFileName);
				FileUtils.copyURLToFile(documentUrl, inputFile);

				outputFolder = new File(baseDir, "output");
				FileUtils.forceMkdir(outputFolder);

				File result = new File(outputFolder, "output.png");
				File resultTiff = new File(outputFolder, "output.tiff");
				if(is_logging_enabled.toBoolean())
					log.info("convertPath "+ convertPath);
				if (isWindows){
				invoke(new ProcessBuilder(new String[] {
					"magick",
					"convert",
					"-density",dpi,
					"-depth","1",
					"-colorspace","Gray",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
				} else {
				invoke(new ProcessBuilder(new String[] {
					convertPath,
					"-density",dpi,
					"-depth","1",
					"-colorspace","Gray",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
    			}
				List list=new ArrayList();
				counter=0;
				File created=new File(outputFolder, "output-"+counter.toString()+".png");
				while (created.exists()){
					counter++;
					list.add(created);
					created=new File(outputFolder, "output-"+counter.toString()+".png");
				}
				if (counter==0){
					created=new File(outputFolder, "output.png");
					if (created.exists()){
						File updated=new File(outputFolder, "output-0.png");
						created.renameTo(updated);
						counter++;
						list.add(updated);
					}
				}
				size=list.size();
				counter=0;
				lv=new ListVariable(list);
				return lv;
			}

			static void invoke(ProcessBuilder builder) throws IOException, InterruptedException {
				builder.redirectErrorStream(true);

				System.err.println(builder.command());
				Process process = builder.start();

				BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
				String line;
				while ((line = in.readLine()) != null) {
					System.out.println(line);
				}
				in.close();

				int code = process.waitFor();
				if (code != 0) {
					throw new RuntimeException("Failed to invoke process: " + builder.command() + ". Return code: " + code);
				}
			}
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
	
	&lt;var-def name="numberOfPages"&gt;
		&lt;script return="getSize()" /&gt;
	&lt;/var-def&gt;

	&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
		&lt;list&gt;
			&lt;var name="fileList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
          	&lt;case&gt;
              &lt;if condition='${is_logging_enabled.toBoolean()}'&gt;
                &lt;log&gt;
                    &lt;template&gt;File: ${fileJavaObject}&lt;/template&gt;
                &lt;/log&gt;
              &lt;/if&gt;
            &lt;/case&gt;
			&lt;var-def name="key"&gt;
				&lt;script return="staticGetVariable(i.toInt()-1)"&gt;&lt;/script&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content-${i}"&gt;
		        &lt;file path="${key}" type="binary"/&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content"&gt;
				&lt;var name="content-${i}" /&gt;
			&lt;/var-def&gt;

			&lt;var-def name="converted_link-${i}"&gt;
        		&lt;s3  bucket="${s3_bucket_name}"&gt;
         			&lt;s3-put-public path="${document_uuid}/${name_of_page}-${i}.png" content="${content}" content-type="image/png" content-disposition="inline"/&gt;
        		&lt;/s3&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
	
	&lt;var-def name="jsonFilesUrls"&gt;
		&lt;json&gt;
			&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
				&lt;list&gt;
					&lt;var name="fileList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;json-put key="fileList-${i}"&gt;
						&lt;var name="converted_link-${i}" /&gt;
					&lt;/json-put&gt;
				&lt;/body&gt;
			&lt;/loop&gt;
		&lt;/json&gt;
	&lt;/var-def&gt;
     
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="json_file_urls_for_manual" value="${jsonFilesUrls}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                            <description></description>
                                            <includedConfigs/>
                                            <inclusionCode>f1b1bdac-578f-4fac-9317-19ef53f5bb1a</inclusionCode>
                                            <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <machineWorkSettingType>BASIC</machineWorkSettingType>
                                            <name>(Copy)[TOOD] Split PDF into PNG pages for manual task</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>f1b1bdac-578f-4fac-9317-19ef53f5bb1a</uuid>
                                            <version>
                                                <componentUuid>b756616b-a0f0-40e6-a9f8-a069c4a796a9</componentUuid>
                                                <incrementalVersion>1.12</incrementalVersion>
                                                <lastInChain>false</lastInChain>
                                                <lastModified>2018-08-13T11:41:07Z</lastModified>
                                                <versionUuid>4859a2d6-28af-4157-9dd4-74722ad14093</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>1</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Tasks</streamValueType>
                                        <title>(Copy)[TOOD] Split PDF into PNG pages for manual task</title>
                                        <type>SINGLE</type>
                                        <uuid>7d77b2c6-4ecb-4dde-acda-5c3a09cd9cbe</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>1297640a-e0d1-40a7-8bd4-2dd10411a3fd</componentUuid>
                                            <incrementalVersion>1.7</incrementalVersion>
                                            <lastInChain>false</lastInChain>
                                            <lastModified>2018-08-13T11:41:07Z</lastModified>
                                            <versionUuid>c750bdca-f447-4908-b6df-899e35273ec1</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>12</stepIndex>
                                    <stepPosition>INTERMEDIATE</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>2b279d9c-0d73-4519-85f4-69cdca82af3b</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <businessRule>
                                        <content>package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;
import org.slf4j.Logger;
import java.util.Map;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.ArrayList;
import com.freedomoss.requester.dto.SubmissionResultDTO;

#declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params



rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:CompositeRuleContext(initialized == false);
	then
		$ctx.updateWorkingMemory();
		# move to business rules
		$ctx.logExecutedRule(kcontext.getRule().getName());
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end</content>
                                        <name>Business Process: End Rule</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <uuid>01e27a7c-b4cd-48c3-b4a2-943ef430a5e6</uuid>
                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

    &lt;var-def name="exportType"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_type")}'&gt;
                &lt;template&gt;${_sys_export_type}&lt;/template&gt;
            &lt;/if&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="exportColumns"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_columns")}'&gt;
                &lt;template&gt;${_sys_export_columns}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="columnNameCase"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_column_name_case")}'&gt;
                &lt;template&gt;${_sys_column_name_case}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;keep&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="dataOnly"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_data_only")}'&gt;
                &lt;template&gt;${_sys_data_only}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;true&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="datastoreName"&gt;
        &lt;script return="item.getWrappedObject().getRun().getDatastoreName()" /&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
        &lt;if condition="${!datastoreName.isEmpty()}"&gt;
            &lt;insert-datastore   datastore-name="${datastoreName}" create="true"&gt;
                &lt;script return="hit_submission_data_item.getWrappedObject().getItemValueMap()"/&gt;
            &lt;/insert-datastore&gt;
        &lt;/if&gt;
    &lt;/case&gt;

    &lt;export include-original-data="true"
            export-type="${exportType}"
            export-columns="${exportColumns}"
            column-name-case="${columnNameCase}"
            data-only="${dataOnly}"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description>Default machine campaign for end step.</description>
                                            <includedConfigs/>
                                            <inclusionCode>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</inclusionCode>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <name>Final Results</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</uuid>
                                            <version>
                                                <componentUuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-05-28T11:12:21Z</lastModified>
                                                <versionUuid>04cccd58-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>100</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Percents</streamValueType>
                                        <title>Final Results</title>
                                        <type>SINGLE</type>
                                        <uuid>af4c8905-26dd-4120-b208-39ad3530ffc6</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>041df7e3-6268-11e8-97c5-0ae8ba3240ae</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-05-28T11:12:21Z</lastModified>
                                            <versionUuid>04ccea14-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>13</stepIndex>
                                    <stepPosition>END</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>7b2466cf-ea5d-4374-a41d-192dae9b01a7</uuid>
                                </campaignMap>
                                <campaignMap>
                                    <businessRule>
                                        <content>package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;
import org.slf4j.Logger;
import java.util.Map;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.ArrayList;
import com.freedomoss.requester.dto.SubmissionResultDTO;

#declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params



rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:CompositeRuleContext(initialized == false);
	then
		$ctx.updateWorkingMemory();
		# move to business rules
		$ctx.logExecutedRule(kcontext.getRule().getName());
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end</content>
                                        <name>Business Process: End Rule</name>
                                        <ruleType>WORKFLOW_RULE</ruleType>
                                        <uuid>da4add20-43f6-4549-981a-376de243e44d</uuid>
                                        <workflowRuleMode>ADVANCED</workflowRuleMode>
                                    </businessRule>
                                    <campaign>
                                        <active>false</active>
                                        <businessRules/>
                                        <campaignMaps/>
                                        <campaigns/>
                                        <executingType>MACHINE</executingType>
                                        <goldBucketBlockSize>0</goldBucketBlockSize>
                                        <goldRatio>0</goldRatio>
                                        <goldSource>Empty</goldSource>
                                        <goldType>Percentage</goldType>
                                        <machineConfig>
                                            <answers/>
                                            <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

    &lt;var-def name="exportType"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_type")}'&gt;
                &lt;template&gt;${_sys_export_type}&lt;/template&gt;
            &lt;/if&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="exportColumns"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_columns")}'&gt;
                &lt;template&gt;${_sys_export_columns}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="columnNameCase"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_column_name_case")}'&gt;
                &lt;template&gt;${_sys_column_name_case}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;keep&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="dataOnly"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_data_only")}'&gt;
                &lt;template&gt;${_sys_data_only}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;true&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="datastoreName"&gt;
        &lt;script return="item.getWrappedObject().getRun().getDatastoreName()" /&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
        &lt;if condition="${!datastoreName.isEmpty()}"&gt;
            &lt;insert-datastore   datastore-name="${datastoreName}" create="true"&gt;
                &lt;script return="hit_submission_data_item.getWrappedObject().getItemValueMap()"/&gt;
            &lt;/insert-datastore&gt;
        &lt;/if&gt;
    &lt;/case&gt;

    &lt;export include-original-data="true"
            export-type="${exportType}"
            export-columns="${exportColumns}"
            column-name-case="${columnNameCase}"
            data-only="${dataOnly}"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                            <description>Default machine campaign for end step.</description>
                                            <includedConfigs/>
                                            <inclusionCode>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</inclusionCode>
                                            <machineWorkSetting>
                                                <category>
                                                    <automation>false</automation>
                                                    <description></description>
                                                    <enabled>true</enabled>
                                                    <executingType>MACHINE</executingType>
                                                    <name>Other</name>
                                                    <private>false</private>
                                                    <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                                </category>
                                                <contentType>BLANK</contentType>
                                                <description></description>
                                                <enabled>true</enabled>
                                                <name>Miscellaneous Tasks</name>
                                                <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                                <version>
                                                    <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2018-05-28T11:12:13Z</lastModified>
                                                    <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                                </version>
                                                <answers/>
                                                <machineWorkSettingType>BASIC</machineWorkSettingType>
                                                <template>
                                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                    <name>Blank</name>
                                                    <origination>CREATED_MANUALLY</origination>
                                                    <status>ACTIVE</status>
                                                    <type>BASE_MACHINE</type>
                                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                    <version>
                                                        <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                        <incrementalVersion>1.0</incrementalVersion>
                                                        <lastInChain>true</lastInChain>
                                                        <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                        <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                    </version>
                                                </template>
                                            </machineWorkSetting>
                                            <name>Final Results</name>
                                            <machineConfigOptions/>
                                            <sourceType>MANUAL</sourceType>
                                            <template>
                                                <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                                <name>Blank</name>
                                                <origination>CREATED_MANUALLY</origination>
                                                <status>ACTIVE</status>
                                                <type>BASE_MACHINE</type>
                                                <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                                <version>
                                                    <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                                    <incrementalVersion>1.0</incrementalVersion>
                                                    <lastInChain>true</lastInChain>
                                                    <lastModified>2012-12-27T00:00:00Z</lastModified>
                                                    <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                                </version>
                                            </template>
                                            <uuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</uuid>
                                            <version>
                                                <componentUuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</componentUuid>
                                                <incrementalVersion>1.0</incrementalVersion>
                                                <lastInChain>true</lastInChain>
                                                <lastModified>2018-05-28T11:12:21Z</lastModified>
                                                <versionUuid>04cccd58-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                            </version>
                                        </machineConfig>
                                        <moderation>false</moderation>
                                        <origination>CREATED_AUTOMATICALLY</origination>
                                        <requiresData>true</requiresData>
                                        <status>ACTIVE</status>
                                        <streamComplexRunThreshold>100</streamComplexRunThreshold>
                                        <streamTimeInterval>Immediately</streamTimeInterval>
                                        <streamTimeIntervalValue>0</streamTimeIntervalValue>
                                        <streamValueType>Percents</streamValueType>
                                        <title>Final Results</title>
                                        <type>SINGLE</type>
                                        <uuid>af4c8905-26dd-4120-b208-39ad3530ffc6</uuid>
                                        <validWorkflow>false</validWorkflow>
                                        <version>
                                            <componentUuid>041df7e3-6268-11e8-97c5-0ae8ba3240ae</componentUuid>
                                            <incrementalVersion>1.0</incrementalVersion>
                                            <lastInChain>true</lastInChain>
                                            <lastModified>2018-05-28T11:12:21Z</lastModified>
                                            <versionUuid>04ccea14-6268-11e8-97c5-0ae8ba3240ae</versionUuid>
                                        </version>
                                        <workSettingBase>false</workSettingBase>
                                    </campaign>
                                    <deleted>false</deleted>
                                    <stepIndex>13</stepIndex>
                                    <stepPosition>END</stepPosition>
                                    <streamed>false</streamed>
                                    <uuid>45c46f82-68a5-48a4-a7cb-4356ab657501</uuid>
                                </campaignMap>
                            </campaignMaps>
                            <campaigns/>
                            <compositeCampaignVersion>NEW_WORKFLOW</compositeCampaignVersion>
                            <compositeStructureXml>&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id="0"/&gt;&lt;mxCell id="1" parent="0"/&gt;&lt;Link id="382" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="424" style="link" target="396"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="542.0" y="785.5266905667497"/&gt;&lt;mxPoint as="targetPoint" x="955.0" y="96.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="a050586d-7182-45b0-9518-1b350869f16d" id="396" name="Input data processing" taskUUID="9049c4bb-9c00-4311-ad63-da424d10c7a2" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="840.0" y="756.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="395" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="888abc6a-8377-417b-99a2-e8912a1aebe3" type="link"&gt;&lt;mxCell edge="1" parent="1" source="396" style="link" target="407"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="1010.0" y="107.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="8aec73aa-d5ce-46da-a089-1a77ee291d99" id="407" name="Look for OCR cache" taskUUID="156f7ef5-ad40-4af6-b692-6745c6a329c3" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1100.1166687011719" y="756.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="410" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="407" style="link" target="409"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="409" name="Cache hit?" ruleUUID="df398bed-509a-4470-9d88-bedc37cf1361" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="1378.0" y="770.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link conditional="true" id="411" label="Yes" name="" outcomeId="Yes" ruleUUID="df398bed-509a-4470-9d88-bedc37cf1361" type="link"&gt;&lt;mxCell edge="1" parent="1" source="409" style="link" target="397"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="1440.0" y="81.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1871.0" y="791.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-38.0" y="-183.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="false" id="412" label="No" name="" outcomeId="No" ruleUUID="df398bed-509a-4470-9d88-bedc37cf1361" type="link"&gt;&lt;mxCell edge="1" parent="1" source="409" style="link" target="414"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="1253.0" y="180.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1394.0" y="891.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="59.0" y="4.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="11643fd2-88fe-4d43-b6bf-2de5f45e4b2d" id="414" label="" name="GoTo OCR" streamed="false" taskUUID="a7b9d471-e1f7-4101-b1ac-cff093698bc9" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="41.0" width="126.0" x="1117.0" y="870.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="413" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="414" style="link" target="385"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="1127.0" y="180.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="385" name="OCR Type" ruleUUID="814d29af-6a9f-44b1-8a46-cf788173ec27" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="954.0" y="875.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link conditional="true" id="387" label="Standard" name="" outcomeId="Standard" ruleUUID="814d29af-6a9f-44b1-8a46-cf788173ec27" type="link"&gt;&lt;mxCell edge="1" parent="1" source="385" style="link" target="386"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="1084.0" y="280.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="971.0" y="950.0"/&gt;&lt;mxPoint x="1150.0" y="950.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-30.0" y="-3.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="415" label="TOOD" name="" outcomeId="TOOD" ruleUUID="814d29af-6a9f-44b1-8a46-cf788173ec27" type="link"&gt;&lt;mxCell edge="1" parent="1" source="385" style="link" target="389"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="1114.0" y="165.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="820.0" y="890.0"/&gt;&lt;mxPoint x="820.0" y="890.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" y="22.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="f466307f-d1d3-4283-a221-9ffd22d3f501" id="389" name="[TOOD] Split document into PNG pages" taskUUID="5614de5a-60f8-4c14-b553-0c2c73366adf" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="580.0" y="861.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="383" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="0d5cbfa3-e425-4591-bf44-2849ad9dbf21" type="link"&gt;&lt;mxCell edge="1" parent="1" source="389" style="link" target="390"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="830.0" y="280.0"/&gt;&lt;mxPoint as="targetPoint" x="830.0" y="310.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="37688db9-f2e6-4763-999c-2929f0001ff7" id="390" name="[TOOD] OCR" taskUUID="3dab49e1-4c73-4132-9193-983b4951f4d5" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="580.0" y="1070.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="391" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="cad9f69a-b6cb-4627-ac4b-5644902b7779" type="link"&gt;&lt;mxCell edge="1" parent="1" source="390" style="link" target="392"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="830.0" y="370.0"/&gt;&lt;mxPoint as="targetPoint" x="830.0" y="360.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="660.0" y="1170.0"/&gt;&lt;mxPoint x="871.0" y="1170.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="24eae7e1-4a76-41ba-8b46-dfa984fd77ed" id="386" name="[Standard] OCR" taskUUID="ed154b8a-fb08-4f4a-a605-597c0269ab5e" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1092.1166687011719" y="1069.5333404541016"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="393" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="ded336b9-f16c-42c0-b269-b510f7b4d381" type="link"&gt;&lt;mxCell edge="1" parent="1" source="386" style="link" target="392"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1173.0" y="1170.0"/&gt;&lt;mxPoint x="990.0" y="1170.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="0b04b145-c8d6-4157-a971-2acdc0c2f26f" id="392" name="Response from OCR" taskUUID="4e5dc495-d324-4494-b37e-5d65d17741fd" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="840.0" y="1190.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="394" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="392" style="link" target="384"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="920.0" y="1310.0"/&gt;&lt;mxPoint x="660.0" y="1310.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="384" name="OCR Router" ruleUUID="77d9c5d0-b2e6-42d6-97f9-a247c07d495e" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="644.0" y="1330.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link conditional="true" id="398" label="OCR Failed" name="" outcomeId="OCR Failed" ruleUUID="77d9c5d0-b2e6-42d6-97f9-a247c07d495e" type="link"&gt;&lt;mxCell edge="1" parent="1" source="384" style="link" target="425"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="1330.5090931674895" y="1262.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="-210.0" y="-6.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="399" label="TOOD" name="" outcomeId="TOOD" ruleUUID="77d9c5d0-b2e6-42d6-97f9-a247c07d495e" type="link"&gt;&lt;mxCell edge="1" parent="1" source="384" style="link" target="418"&gt;&lt;mxGeometry as="geometry" x="690.0" y="60.0"&gt;&lt;mxPoint as="targetPoint" x="930.0" y="520.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="660.0" y="1429.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" y="24.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="400" label="Standard" name="" outcomeId="Standard" ruleUUID="77d9c5d0-b2e6-42d6-97f9-a247c07d495e" type="link"&gt;&lt;mxCell edge="1" parent="1" source="384" style="link" target="388"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="1010.0" y="730.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="660.0" y="1559.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="32.0" y="139.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="401" label="Standard (without xml export format)" name="" outcomeId="Standard (without xml export format)" ruleUUID="77d9c5d0-b2e6-42d6-97f9-a247c07d495e" type="link"&gt;&lt;mxCell edge="1" parent="1" source="384" style="link" target="408"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="770.0" y="720.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="660.0" y="1621.0"/&gt;&lt;mxPoint x="1701.0" y="1621.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-40.0" y="149.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="2b279d9c-0d73-4519-85f4-69cdca82af3b" id="418" name="(Copy)[TOOD] Split PDF into PNG pages for manual task" taskUUID="7d77b2c6-4ecb-4dde-acda-5c3a09cd9cbe" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="204.0" x="968.0" y="1400.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="423" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="b051e206-065d-403c-834d-1aba3f3773f8" type="link"&gt;&lt;mxCell edge="1" parent="1" source="418" style="link" target="388"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="aba72f95-7fd1-48d9-a050-007df6ca1f3a" id="388" name="XSLT Cut off Raw OCR XML tags" taskUUID="40a908be-cbe2-41ea-800c-0922708b1e93" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1234.0" y="1400.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="405" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="388" style="link" target="402"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1510.0" y="1430.0"/&gt;&lt;mxPoint x="1510.0" y="1430.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="e79a5a6b-85c8-4405-bfd1-8c36aafe80a1" id="408" name="Cache OCR results" taskUUID="410fb53c-97e3-4e61-a81e-e794c217a47b" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1620.1166687011719" y="1590.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="404" label="Standard" name="" outcomeId="Standard" ruleUUID="b338b40c-67f4-497d-8081-ab289097a18c" type="link"&gt;&lt;mxCell edge="1" parent="1" source="402" style="link" target="408"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="1230.0" y="650.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1539.0" y="1521.0"/&gt;&lt;mxPoint x="1639.0" y="1521.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-29.0" y="24.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="406" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="bb0f253d-6143-4033-90c6-a09cc3a995ee" type="link"&gt;&lt;mxCell edge="1" parent="1" source="380" style="link" target="408"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="416" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="cac0ff80-2f87-4c42-b29e-08f74064acd2" type="link"&gt;&lt;mxCell edge="1" parent="1" source="408" style="link" target="397"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="417" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="fd85a91a-0b7c-471b-929e-9f84e68dcd25" type="link"&gt;&lt;mxCell edge="1" parent="1" source="397" style="link" target="425"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="targetPoint" x="1346.0" y="1245.1760275322104"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="bbf5fcde-5fe5-45c0-8697-ee16bac4b9ad" id="380" name="[TOOD] XSLT XML Enrichment with WORD and DIV tags" taskUUID="183f85b1-2f07-4a01-baa7-7eef101da698" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1620.0" y="1316.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="403" label="TOOD" name="" outcomeId="TOOD" ruleUUID="b338b40c-67f4-497d-8081-ab289097a18c" type="link"&gt;&lt;mxCell edge="1" parent="1" source="402" style="link" target="380"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="1300.0" y="603.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1539.0" y="1350.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-50.0" y="6.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="402" name="OCR Type" ruleUUID="b338b40c-67f4-497d-8081-ab289097a18c" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="1520.0" y="1414.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;MachineTask campaignMapUUID="72a42eb1-e99f-49ba-a8cf-0b56288301aa" id="397" name="Result JSON processing" taskUUID="5967587c-06c0-4fc3-9cfd-cb279159e617" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1800.1166687011719" y="1215.5333404541016"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Start id="424" name="Start" type="start"&gt;&lt;mxCell parent="1" style="start" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="480.0" y="770.0"/&gt;&lt;/mxCell&gt;&lt;/Start&gt;&lt;End campaignMapUUID="45c46f82-68a5-48a4-a7cb-4356ab657501" id="425" name="End" type="end"&gt;&lt;mxCell parent="1" style="end" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="1310.0" y="1230.0"/&gt;&lt;/mxCell&gt;&lt;/End&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;</compositeStructureXml>
                            <description>Business Process description</description>
                            <executingType>COMPOSITE</executingType>
                            <goldBucketBlockSize>0</goldBucketBlockSize>
                            <goldRatio>0</goldRatio>
                            <goldSource>Empty</goldSource>
                            <goldType>Percentage</goldType>
                            <moderation>false</moderation>
                            <origination>CREATED_AUTOMATICALLY</origination>
                            <requiresData>true</requiresData>
                            <status>DELETED</status>
                            <streamComplexRunThreshold>1</streamComplexRunThreshold>
                            <streamTimeInterval>Immediately</streamTimeInterval>
                            <streamTimeIntervalValue>0</streamTimeIntervalValue>
                            <streamValueType>Tasks</streamValueType>
                            <title>Workfusion_OCR_v2.0</title>
                            <type>COMPOSITE</type>
                            <uuid>a05e72af-72a2-4297-8075-6e710cb40e5c</uuid>
                            <validWorkflow>true</validWorkflow>
                            <version>
                                <componentUuid>a3b8331e-b2cf-4b1a-aa6e-d084bb125bff</componentUuid>
                                <incrementalVersion>1.4</incrementalVersion>
                                <lastInChain>false</lastInChain>
                                <lastModified>2018-09-25T09:07:58Z</lastModified>
                                <versionUuid>c8efaee7-8e34-4ad4-8c94-2708ff5a48db</versionUuid>
                            </version>
                            <workSettingBase>true</workSettingBase>
                        </campaign>
                    </automationUseCase>
                </automationUseCases>
                <automationInfo/>
            </project>
            <hashCode>5576189</hashCode>
        </objectContainer>
    </objects>
</objectListWrapper>
